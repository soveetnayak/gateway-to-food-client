[{"/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/index.js":"1","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/reportWebVitals.js":"2","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/App.js":"3","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/users/UsersList.js":"4","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/users/Profile.js":"5","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/common/Home.js":"6","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/templates/Navbar.js":"7","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/templates/Login.js":"8","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/templates/Register.js":"9","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/templates/Registerbuyer.js":"10","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/templates/Registervendor.js":"11","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/templates/Profile.js":"12","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/vendor/Orders.js":"13","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/vendor/Statistics.js":"14","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/vendor/Menu.js":"15","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/Wallet.js":"16","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/vendor/AddItem.js":"17","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/vendor/EditItem.js":"18","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/Orders.js":"19","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/BuyerDashboard.js":"20","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/Favourites.js":"21"},{"size":500,"mtime":1641926740000,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1641926740000,"results":"24","hashOfConfig":"23"},{"size":2077,"mtime":1643241171385,"results":"25","hashOfConfig":"23"},{"size":5240,"mtime":1641926740000,"results":"26","hashOfConfig":"23"},{"size":441,"mtime":1641926740000,"results":"27","hashOfConfig":"23"},{"size":472,"mtime":1642802182496,"results":"28","hashOfConfig":"23"},{"size":3710,"mtime":1643283917868,"results":"29","hashOfConfig":"23"},{"size":6005,"mtime":1643279772372,"results":"30","hashOfConfig":"23"},{"size":1665,"mtime":1642615771546,"results":"31","hashOfConfig":"23"},{"size":8067,"mtime":1643355715174,"results":"32","hashOfConfig":"23"},{"size":8080,"mtime":1643355456506,"results":"33","hashOfConfig":"23"},{"size":10398,"mtime":1643464669841,"results":"34","hashOfConfig":"23"},{"size":7246,"mtime":1643459735689,"results":"35","hashOfConfig":"23"},{"size":7732,"mtime":1643463398844,"results":"36","hashOfConfig":"23"},{"size":6082,"mtime":1643453066393,"results":"37","hashOfConfig":"23"},{"size":4722,"mtime":1642972161358,"results":"38","hashOfConfig":"23"},{"size":6869,"mtime":1643457528173,"results":"39","hashOfConfig":"23"},{"size":5591,"mtime":1643149867949,"results":"40","hashOfConfig":"23"},{"size":5252,"mtime":1643463173141,"results":"41","hashOfConfig":"23"},{"size":33513,"mtime":1643467362753,"results":"42","hashOfConfig":"23"},{"size":4786,"mtime":1643311818854,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"dqwarf",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"46"},"/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/index.js",[],["99","100"],"/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/reportWebVitals.js",[],"/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/App.js",["101","102","103"],"import { BrowserRouter, Routes, Route, Outlet } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport UsersList from \"./components/users/UsersList\";\nimport Home from \"./components/common/Home\";\nimport Navbar from \"./components/templates/Navbar\";\nimport Profile from \"./components/users/Profile\";\nimport SignInSide from \"./components/templates/Login\";\nimport SignUp from \"./components/templates/Register\";\nimport BasicSelect from \"./components/templates/Register\";\nimport MyProfile from \"./components/templates/Profile\";\n\n\n//buyer\nimport Wallet from \"./components/buyer/Wallet\";\nimport List from \"./components/buyer/BuyerDashboard\"\nimport MyOrders from \"./components/buyer/Orders\";\nimport Fav from \"./components/buyer/Favourites\";\n\n//vendor\nimport Orders from \"./components/vendor/Orders\";\nimport VStatistics from \"./components/vendor/Statistics\";\nimport Table from \"./components/vendor/Menu\";\nimport BasicTable from \"./components/vendor/Orders\";\nimport Editing from \"./components/vendor/EditItem\";\n\nconst Layout = () => {\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"users\" element={<UsersList />} />\n          <Route path=\"login\" element={<SignInSide />} />\n          <Route path=\"register\" element={<BasicSelect />} />\n          <Route path=\"profile\" element={<MyProfile />} />\n\n          <Route path=\"wallet\" element={<Wallet />} />\n          <Route path=\"myorders\" element={<MyOrders />} />\n          <Route path=\"dashboard\" element={<List />} />\n          <Route path=\"favourites\" element={<Fav />} />\n\n          <Route path=\"statistics\" element={<VStatistics />} />\n          <Route path=\"orders\" element={<BasicTable />} />\n          <Route path=\"menu\" element={<Table />} />\n          <Route path=\"edit\" element={<Editing />} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/users/UsersList.js",["104","105","106","107","108"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport Divider from \"@mui/material/Divider\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\n\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport ArrowUpwardIcon from \"@mui/icons-material/ArrowUpward\";\nimport ArrowDownwardIcon from \"@mui/icons-material/ArrowDownward\";\n\nconst UsersList = (props) => {\n  const [users, setUsers] = useState([]);\n  const [sortedUsers, setSortedUsers] = useState([]);\n  const [sortName, setSortName] = useState(true);\n  const [searchText, setSearchText] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:4000/user\")\n      .then((response) => {\n        setUsers(response.data);\n        setSortedUsers(response.data);\n        setSearchText(\"\");\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const sortChange = () => {\n    let usersTemp = users;\n    const flag = sortName;\n    usersTemp.sort((a, b) => {\n      if (a.date != undefined && b.date != undefined) {\n        return (1 - flag * 2) * (new Date(a.date) - new Date(b.date));\n      } else {\n        return 1;\n      }\n    });\n    setUsers(usersTemp);\n    setSortName(!sortName);\n  };\n\n  const customFunction = (event) => {\n    console.log(event.target.value);\n    setSearchText(event.target.value);\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item xs={12} md={3} lg={3}>\n          <List component=\"nav\" aria-label=\"mailbox folders\">\n            <ListItem text>\n              <h1>Filters</h1>\n            </ListItem>\n          </List>\n        </Grid>\n        <Grid item xs={12} md={9} lg={9}>\n          <List component=\"nav\" aria-label=\"mailbox folders\">\n            <TextField\n              id=\"standard-basic\"\n              label=\"Search\"\n              fullWidth={true}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment>\n                    <IconButton>\n                      <SearchIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n              // onChange={customFunction}\n            />\n          </List>\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={12} md={3} lg={3}>\n          <List component=\"nav\" aria-label=\"mailbox folders\">\n            <ListItem>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  Salary\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    id=\"standard-basic\"\n                    label=\"Enter Min\"\n                    fullWidth={true}\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    id=\"standard-basic\"\n                    label=\"Enter Max\"\n                    fullWidth={true}\n                  />\n                </Grid>\n              </Grid>\n            </ListItem>\n            <Divider />\n            <ListItem divider>\n              <Autocomplete\n                id=\"combo-box-demo\"\n                options={users}\n                getOptionLabel={(option) => option.name}\n                fullWidth\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Select Names\"\n                    variant=\"outlined\"\n                  />\n                )}\n              />\n            </ListItem>\n          </List>\n        </Grid>\n        <Grid item xs={12} md={9} lg={9}>\n          <Paper>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell> Sr No.</TableCell>\n                  <TableCell>\n                    {\" \"}\n                    <Button onClick={sortChange}>\n                      {sortName ? <ArrowDownwardIcon /> : <ArrowUpwardIcon />}\n                    </Button>\n                    Date\n                  </TableCell>\n                  <TableCell>Name</TableCell>\n                  <TableCell>Email</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {users.map((user, ind) => (\n                  <TableRow key={ind}>\n                    <TableCell>{ind}</TableCell>\n                    <TableCell>{user.date}</TableCell>\n                    <TableCell>{user.name}</TableCell>\n                    <TableCell>{user.email}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default UsersList;\n","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/users/Profile.js",["109"],"import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n\nconst Profile = (props) => {\n  const [details, setDetails] = useState([]);\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:4000/profile\") // unimplemented\n      .then((response) => {\n        setDetails(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n  return <div></div>;\n};\n\nexport default Profile;\n","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/common/Home.js",["110","111","112","113","114","115","116"],"import { color } from \"@mui/system\";\nimport { useState, useEffect } from \"react\";\nimport picture from \"../../images/home_img.jpg\";\n\nconst Home = (props) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  // useEffect(() => {\n  //   setName(\"Dass TAs\");\n  // }, []);\n\n  return <div style={{ textAlign: \"center\" }}> <p>!Cheese Maggi to Oreo Shake at one place!</p> <img src={picture} alt=\"Picture\" /> </div> ;\n};\n\nexport default Home;\n","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/templates/Navbar.js",["117","118"],"import { useNavigate } from \"react-router-dom\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport noodle from \"../../images/peach-cat-cute.gif\";\nimport { useState } from \"react\";\nimport * as React from \"react\";\nimport ls from \"local-storage\";\nimport { createTheme } from '@mui/material/styles';\nimport { deepOrange } from \"@mui/material/colors\";\nimport { yellow } from \"@mui/material/colors\";\n\nconst theme = createTheme({\n    palette: {\n      primary: deepOrange,\n      secondary: yellow,\n    },\n});\n\nconst Navbar = () => {\n  const navigate = useNavigate();\n//  const [user, setUser] = React.useState(0); //0 for not logged in, 1 for buyer, 2 for vendor\n  const handlelogout = () => {\n    ls.set(\"user\", \"\");\n    ls.set(\"usertype\", 0);\n    ls.set(\"username\", \"\");\n    ls.set(\"wallet\", 0);\n    window.location=\"/\";\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            component=\"div\"\n            sx={{ cursor: \"pointer\" }}\n            onClick={() => navigate(\"/\")}\n          >\n            <img src={noodle} alt=\"noodle\" height=\"20\" width=\"30\" margin=\"\"/> Canteen Portal <img src={noodle} alt=\"noodle\" height=\"20\" width=\"30\" margin=\"\"/>\n          </Typography>\n          <Box sx={{ flexGrow: 1 }} />\n          {/* <Button color=\"inherit\" onClick={() => navigate(\"/users\")}>\n            Users\n          </Button> */}\n          { ls.get(\"usertype\") === 0 ? \n          <Box>\n          <Button color=\"inherit\" onClick={() => navigate(\"/login\")}>\n            Login\n          </Button> \n          <Button color=\"inherit\" onClick={() => navigate(\"/register\")}>\n            Register\n          </Button>\n          </Box>\n          : ls.get(\"usertype\") === 1 ?\n          <Box>\n          <Button color=\"inherit\" onClick={() => navigate(\"/dashboard\")}>\n            Dashboard\n          </Button>\n          <Button color=\"inherit\" onClick={() => navigate(\"/favourites\")}>\n            Favourites\n          </Button>\n          <Button color=\"inherit\" onClick={() => navigate(\"/myorders\")}>\n            My Orders\n          </Button>\n          <Button color=\"inherit\" onClick={() => navigate(\"/wallet\")}>\n            Wallet\n          </Button>\n          <Button color=\"inherit\" onClick={() => navigate(\"/profile\")}>\n            Profile\n          </Button>\n          <Button color=\"inherit\" onClick={handlelogout}>\n            Logout\n          </Button>\n          </Box>\n          :\n          <Box>\n          <Button color=\"inherit\" onClick={() => navigate(\"/menu\")}>\n            Menu\n          </Button>\n          <Button color=\"inherit\" onClick={() => navigate(\"/orders\")}>\n            Orders\n          </Button>\n          <Button color=\"inherit\" onClick={() => navigate(\"/statistics\")}>\n            Statistics\n          </Button>\n          <Button color=\"inherit\" onClick={() => navigate(\"/profile\")}>\n            Profile\n          </Button>\n          <Button color=\"inherit\" onClick={handlelogout}>\n            Logout\n          </Button>\n          </Box>\n          }\n          {/* <Button color=\"inherit\" onClick={() => navigate(\"/login\")}>\n            Login\n          </Button>\n          <Button color=\"inherit\" onClick={() => navigate(\"/register\")}>\n            Register\n          </Button>\n          }\n          else if(user === 1) {\n          <Button color=\"inherit\" onClick={() => navigate(\"/profile\")}>\n            My Profile\n          </Button>\n          } */}\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n};\n\nexport default Navbar;\n","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/templates/Login.js",["119","120","121","122","123","124"],"import * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport axios from \"axios\";\nimport ls from \"local-storage\";\n\n// function Copyright(props) {\n//   return (\n//     <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n//       {'Copyright © '}\n//       <Link color=\"inherit\" href=\"https://mui.com/\">\n//         Your Website\n//       </Link>{' '}\n//       {new Date().getFullYear()}\n//       {'.'}\n//     </Typography>\n//   );\n// }\n\nconst theme = createTheme();\n\nexport default function SignInSide() {\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [emailbool, setEmailbool] = React.useState(true);\n  const [passwordbool, setPasswordbool] = React.useState(true);\n\n  const handleemail = (event) => {\n    event.preventDefault();\n    setEmail(event.target.value);\n    let regex =\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    // eslint-disable-next-line no-console\n\n    if (regex.test(event.target.value)) {\n      setEmailbool(true);\n    } else {\n      setEmailbool(false);\n    }\n  };\n\n  const handlepassword = (event) => {\n    event.preventDefault();\n    setPassword(event.target.value);\n    if (event.target.value.length >= 6) {\n      setPasswordbool(true);\n    }\n    else {\n      setPasswordbool(false);\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (emailbool && passwordbool && email !== \"\" && password !== \" \") \n    {\n      const data = new FormData(event.currentTarget);\n      // eslint-disable-next-line no-console\n      console.log({\n        email: data.get(\"email\"),\n        password: data.get(\"password\"),\n      });\n      axios\n        .post(\"http://localhost:4000/user/login\", {\n          email: data.get(\"email\"),\n          password: data.get(\"password\"),\n        })\n        .then(function (response) {\n          // eslint-disable-next-line no-console\n          console.log(response);\n          alert(\"Login Successful\");\n          //window.location.href=\"../common/Dashboardbuyer\"\n          window.location = \"/\";\n          ls.set(\"email\", response.data.user.email);\n          //ls.set(\"password\", response.data.user.password);\n          ls.set(\"usertype\", response.data.usertype);\n          if(response.data.usertype==1)\n          {\n          ls.set(\"username\", response.data.user.name);\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n          alert(\"Login Failed\");\n        });\n    } \n    else \n    {\n      alert(\"Please fill all the fields\");\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container component=\"main\" sx={{ height: \"100vh\" }}>\n        <CssBaseline />\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n          sx={{\n            backgroundImage: \"url(https://source.unsplash.com/random)\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundColor: (t) =>\n              t.palette.mode === \"light\"\n                ? t.palette.grey[50]\n                : t.palette.grey[900],\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n          }}\n        />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Login\n            </Typography>\n            <Box\n              component=\"form\"\n              noValidate\n              onSubmit={handleSubmit}\n              sx={{ mt: 1 }}\n            >\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                onChange={handleemail}\n                error={!emailbool}\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={handlepassword}\n                error={!passwordbool}\n                helpertext={\n                  !passwordbool\n                    ? \"Password must be at least 6 characters long\"\n                    : \"\"\n                }\n              />\n              {/* <FormControlLabel\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                label=\"Remember me\"\n              /> */}\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Login\n              </Button>\n              <Grid container></Grid>\n              {/* <Copyright sx={{ mt: 5 }} /> */}\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/templates/Register.js",[],"/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/templates/Registerbuyer.js",["125","126","127"],"import * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { MenuItem } from \"@mui/material\";\nimport Select from \"@mui/material/Select\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport { FormControl } from \"@mui/material\";\nimport axios from \"axios\";\n\n// function Copyright(props) {\n//   return (\n//     <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n//       {'Copyright © '}\n//       <Link color=\"inherit\" href=\"https://mui.com/\">\n//         Your Website\n//       </Link>{' '}\n//       {new Date().getFullYear()}\n//       {'.'}\n//     </Typography>\n//   );\n// }\n\nconst theme = createTheme();\n\nexport default function SignUpB() {\n  const [name, setName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"qwerty\");\n  const [age, setAge] = React.useState(0);\n  const [batch, setBatch] = React.useState(\"\");\n  const [contact, setContact] = React.useState(\"\");\n  \n  const [emailbool, setEmailbool] = React.useState(true);\n  const [contactbool, setContactbool] = React.useState(true);\n\n  const handlename = (event) => {\n    setName(event.target.value);\n  };\n  const handleemail = (event) => {\n    event.preventDefault();\n    setEmail(event.target.value);\n    let regex =\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    // eslint-disable-next-line no-console\n\n    if (regex.test(event.target.value)) {\n      setEmailbool(true);\n    } else {\n      setEmailbool(false);\n    }\n  };\n  const handlepassword = (event) => {\n    event.preventDefault();\n    setPassword(event.target.value);\n  };\n  const handleage = (event) => {\n    setAge(event.target.value);\n  };\n  const handlebatch = (event) => {\n    setBatch(event.target.value);\n  };\n  const handlecontact = (event) => {\n    event.preventDefault();\n    setContact(event.target.value);\n    let regex = /^[0-9]{10}$/;\n    // eslint-disable-next-line no-console\n\n    if (regex.test(event.target.value)) {\n      setContactbool(true);\n    } else {\n      setContactbool(false);\n    }\n  };\n\n  const handleRegistration = (event) => {\n    event.preventDefault();\n    if(email!==\"\" && password!==\"\" && name!==\"\" && age!==0 && batch!==\"\" && contact!==\"\" && emailbool===true && contactbool===true &&password.length >= 6){\n    const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n    console.log({\n      name: data.get(\"name\"),\n      email: data.get(\"email\"),\n      password: data.get(\"password\"),\n      age: data.get(\"age\"),\n      batch: data.get(\"batch\"),\n      contact: data.get(\"contact\"),\n    });\n    axios\n      .post(\"http://localhost:4000/user/registerbuyer\", {\n        name: data.get(\"name\"),\n        email: data.get(\"email\"),\n        password: data.get(\"password\"),\n        age: data.get(\"age\"),\n        batch: data.get(\"batch\"),\n        contact: data.get(\"contact\"),\n      })\n      .then(function (response) {\n        console.log(response);\n        alert(\"Registration Successful\");\n      })\n      .catch(function (error) {\n        console.log(error);\n        alert(\"Registration Failed\");\n      });\n    }\n    else{\n      alert(\"Please fill all the details(correctly)\");\n    }\n  };\n  \n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Register\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleRegistration}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  name=\"name\"\n                  required\n                  fullWidth\n                  id=\"name\"\n                  label=\"Name\"\n                  autoFocus\n                  onChange={handlename}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  onChange={handleemail}\n                  error={!emailbool}\n                  //helperText={!emailbool ? \"Enter a valid email\" : \"\"}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                  onChange={handlepassword}\n                  //password should be atleast 6 characters\n                  error={password.length < 6}\n                  helperText={password.length < 6 ? \"Password should be atleast 6 characters\": \"\"}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  type=\"number\"\n                  name=\"age\"\n                  label=\"Age\"\n                  id=\"age\"\n                  onChange={handleage}\n                  \n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControl fullWidth>\n                  <InputLabel id=\"batch-select-label\" required>\n                    Batch\n                  </InputLabel>\n                  <Select\n                    fullWidth\n                    labelId=\"batch-select-label\"\n                    id=\"demo-batch-select\"\n                    name=\"batch\"\n                    id=\"batch\"\n                    // value={buyer ? 'buyer' : vendor ? 'vendor' : 'Select'}\n                    value={batch}\n                    label=\"Batch\"\n                    onChange={handlebatch}\n                  >\n                    <MenuItem value={0}>UG1</MenuItem>\n                    <MenuItem value={1}>UG2</MenuItem>\n                    <MenuItem value={2}>UG3</MenuItem>\n                    <MenuItem value={3}>UG4</MenuItem>\n                    <MenuItem value={4}>UG5</MenuItem>\n                    <MenuItem value={5}>PG1</MenuItem>\n                    <MenuItem value={6}>PG2</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  type=\"number\"\n                  id=\"contact\"\n                  label=\"Contact Number\"\n                  name=\"contact\"\n                  onChange={handlecontact}\n                  error={!contactbool}\n                  helperText={\n                    !contactbool ? \"Enter a valid contact number\" : \"\"\n                  }\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Register\n            </Button>\n          </Box>\n        </Box>\n        {/* <Copyright sx={{ mt: 5 }} /> */}\n      </Container>\n    </ThemeProvider>\n  );\n}\n","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/templates/Registervendor.js",["128","129","130","131","132","133"],"import * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport axios from \"axios\";\n\n// function Copyright(props) {\n//   return (\n//     <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n//       {'Copyright © '}\n//       <Link color=\"inherit\" href=\"https://mui.com/\">\n//         Your Website\n//       </Link>{' '}\n//       {new Date().getFullYear()}\n//       {'.'}\n//     </Typography>\n//   );\n// }\n\nconst theme = createTheme();\n\nexport default function SignUpV() {\n\n  \n  const [emailbool, setEmailbool] = React.useState(true);\n  const [contactbool, setContactbool] = React.useState(true);\n  const [password, setPassword] = React.useState(\"qwerty\");\n  const handleemail = (event) => {\n    event.preventDefault();\n    let regex =\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    // eslint-disable-next-line no-console\n\n    if (regex.test(event.target.value)) {\n      setEmailbool(true);\n    } else {\n      setEmailbool(false);\n    }\n  };\n\n  const handlecontact = (event) => {\n    event.preventDefault();\n    let regex = /^[0-9]{10}$/;\n    // eslint-disable-next-line no-console\n\n    if (regex.test(event.target.value)) {\n      setContactbool(true);\n    } else {\n      setContactbool(false);\n    }\n  };\n\n  const handlepassword = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n    console.log({\n      email: data.get(\"email\"),\n      password: data.get(\"password\"),\n    });\n  };\n\n  const handleRegistration = (event) => {\n    event.preventDefault();\n\n\n    const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n    console.log({\n      managername: data.get(\"managername\"),\n      email: data.get(\"email\"),\n      password: data.get(\"password\"),\n      shopname: data.get(\"shopname\"),\n      contact: data.get(\"contact\"),\n      opentime: data.get(\"opentime\"),\n      closetime: data.get(\"closetime\"),\n    });\n    if( emailbool && contactbool && password.length>=6){\n    axios\n      .post(\"http://localhost:4000/user/registervendor\", {\n        managername: data.get(\"managername\"),\n        email: data.get(\"email\"),\n        password: data.get(\"password\"),\n        shopname: data.get(\"shopname\"),\n        contact: data.get(\"contact\"),\n        opentime: data.get(\"opentime\"),\n        closetime: data.get(\"closetime\"),\n      })\n      .then(function (response) {\n        console.log(response);\n        alert(\"Registeration Successful\");\n      })\n      .catch(function (error) {\n        console.log(error);\n        alert(\"Registeration Failed\");\n      });\n    }\n    else{\n      alert(\"Please fill all the details(correctly)\");\n    }\n  };\n\n  // axios.post('http://localhost:4000/user/registervendor', newVendor)\n  // .then(res => {\n  //   alert(\"Vendor Registered\")\n  //   console.log(res.data)\n  // })\n  // .catch(err => {\n  //   alert(\"Vendor Registration Failed\")\n  // })\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Register\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleRegistration}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  name=\"managername\"\n                  required\n                  fullWidth\n                  id=\"managername\"\n                  label=\"Manager's Name\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  onChange={handleemail}\n                  error={!emailbool}\n                  helperText={!emailbool ? \"Enter a valid email\": \"\"}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  onChange={handlepassword}\n                  error={password.length < 6}\n                  helperText={password.length < 6 ? \"Password must be atleast 6 characters long\": \"\"}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"shopname\"\n                  label=\"Shop Name\"\n                  name=\"shopname\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  type=\"number\"\n                  id=\"contact\"\n                  label=\"Contact Number\"\n                  name=\"contact\"\n                  onChange={handlecontact}\n                  error={!contactbool}\n                  helperText={\n                    !contactbool ? \"Enter a valid contact number\" : \"\"\n                  }\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  InputLabelProps={{ shrink: true }}\n                  type=\"time\"\n                  id=\"opentime\"\n                  label=\"Opening Time\"\n                  name=\"opentime\"\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  focus\n                  required\n                  fullWidth\n                  InputLabelProps={{ shrink: true }}\n                  type=\"time\"\n                  id=\"closetime\"\n                  label=\"Closing Time\"\n                  name=\"closetime\"\n                />\n              </Grid>\n              {/* <Grid item xs={12}>\n                <FormControlLabel\n                  control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                  label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                />\n              </Grid> */}\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n              // onClick={handleRegistration}\n            >\n              Register\n            </Button>\n            {/* <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid> */}\n          </Box>\n        </Box>\n        {/* <Copyright sx={{ mt: 5 }} /> */}\n      </Container>\n    </ThemeProvider>\n  );\n}\n","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/templates/Profile.js",["134","135","136","137","138","139"],"/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/vendor/Orders.js",["140","141","142","143","144"],"/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/vendor/Statistics.js",["145","146","147","148","149","150","151","152","153","154","155"],"/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/vendor/Menu.js",["156"],"/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/Wallet.js",["157","158","159","160"],"import * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\n\nimport Typography from \"@mui/material/Typography\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport axios from \"axios\";\nimport ls from \"local-storage\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nconst theme = createTheme();\n\nexport default function Wallet() {\n  const [wallet, setWallet] = React.useState(\"\");\n  const [add, setAdd] = React.useState(0);\n  const [positive, setPositive] = React.useState(true);\n    useEffect(() => {\n        axios\n            .post(\"http://localhost:4000/buyer/walletdetails\", {\n                email: ls.get(\"email\"),\n            })\n            .then((res) => {\n                setWallet(res.data.wallet);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    const handlechange = (e) => {\n        if(e.target.value>=0 || e.target.value===\"\"){\n            setPositive(true);\n            setAdd(e.target.value);\n        }\n        else{\n            setPositive(false);\n            setAdd(0);\n        }\n    }\n\n    const handleSubmit = (e) => {\n        if(add !== 0 || add !== \"\"){\n        e.preventDefault();\n        axios\n            .post(\"http://localhost:4000/buyer/addmoney\", {\n                email: ls.get(\"email\"),\n                amount: add,\n            })\n            .then((res) => {\n                setWallet(res.data.wallet);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n          }\n    }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container component=\"main\" sx={{ height: \"100vh\" }}>\n        <CssBaseline />\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n          sx={{\n            backgroundImage: \"url(https://source.unsplash.com/random)\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundColor: (t) =>\n              t.palette.mode === \"light\"\n                ? t.palette.grey[50]\n                : t.palette.grey[900],\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n          }}\n        />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n              <AccountBalanceWalletIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              My Wallet\n            </Typography>\n            <Box\n              component=\"form\"\n              noValidate\n            onSubmit={handleSubmit}\n              sx={{ mt: 1 }}\n            >\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"current\"\n                label=\"\"\n                name=\"current\"\n                type=\"number\"\n                variant=\"standard\"\n                InputProps={{\n                    readOnly: true,\n                }}\n                value={wallet}\n              />\n              <TextField\n                margin=\"normal\"\n                fullWidth\n                name=\"addamount\"\n                label=\"Add Money\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                type=\"number\"\n                id=\"addamount\"\n                onChange={handlechange}\n                error={!positive}\n              />\n              {/* <FormControlLabel\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                label=\"Remember me\"\n              /> */}\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                disabled={!positive }\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Add Money\n              </Button>\n              <Grid container></Grid>\n              {/* <Copyright sx={{ mt: 5 }} /> */}\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/vendor/AddItem.js",["161","162","163","164","165","166","167"],"/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/vendor/EditItem.js",["168","169","170"],"import * as React from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';  \nimport ListItemText from '@mui/material/ListItemText';\nimport Divider from '@mui/material/Divider';\nimport ls from \"local-storage\";\nimport Box from \"@mui/material/Box\";\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Button, TextField } from '@mui/material';\nimport Stack from '@mui/material/Stack';\nimport { width } from '@mui/system';\nimport { MenuItem } from \"@mui/material\";\nimport Select from \"@mui/material/Select\";\n\nconst style = {\n  width: '100%',\n  maxWidth: 360,\n  bgcolor: 'background.paper',\n};\n\nexport default function Editing() {\n     const [itemname, setItemname] = React.useState(\"\");\n     const [price, setPrice] = React.useState(0);\n     const [veg, setVeg] = React.useState(true);\n     const [tags, setTags] = React.useState([]);\n     const [addonname, setAddonname] = React.useState([]);\n     const [addonprice, setAddonprice] = React.useState([]);\n\n      const handlesave = () => {\n\n        { document.getElementById(\"veg\").value === \"Veg\" ? setVeg(true) : setVeg(false) }\n        var xtags = document.getElementById(\"tags\").value.split(\",\");\n        var xaddonname = document.getElementById(\"addonname\").value.split(\",\");\n        var xaddonprice = document.getElementById(\"addonprice\").value.split(\",\");\n        axios.post('http://localhost:4000/vendor/editfooditem', {\n            _id: ls.get('editid'),\n            itemname: document.getElementById(\"itemname\").value,\n            price: document.getElementById(\"price\").value,\n            veg: veg,\n            tags: xtags,\n            addonname: xaddonname,\n            addonprice: xaddonprice,\n        })\n        .then(function (response) {\n            console.log(response);\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n        alert(\"Item edited successfully\");\n        window.location = \"/menu\";\n    };\n\n      //Use edit id from local storage\n    useEffect(() => {\n            axios.post('http://localhost:4000/vendor/fooditem', {\n                _id: ls.get('editid')\n            })\n            .then(function (response) {\n                console.log(response);\n                setItemname(response.data.itemname);\n                setPrice(response.data.price);\n                setVeg(response.data.veg);\n                setTags(response.data.tags);\n                setAddonname(response.data.addonname);\n                setAddonprice(response.data.addonprice);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }, []);\n\n\n  return (\n    <List sx={style} component=\"nav\" aria-label=\"mailbox folders\">\n        <Stack\n        spacing={5}\n        direction=\"row\"\n        >\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={ () => { window.location = \"/menu\"; } }\n        >\n        Back\n        </Button>\n      </Stack>\n      <br/>\n      <br/>\n    <Box>\n      <ListItem button>\n        <ListItemText primary=\"Item Name:\"/>\n        <TextField \n            id='itemname'\n            itemname='itemname'\n            variant=\"outlined\"\n            defaultValue={itemname}\n            key={`${Math.floor((Math.random() * 1000))}-min`}\n        />\n      </ListItem>\n      <Divider />\n      <ListItem button>\n        <ListItemText primary=\"Price:\" />\n        <TextField\n            id='price'\n            itemname='price'\n            variant=\"outlined\"\n            defaultValue={price}\n            key={`${Math.floor((Math.random() * 1000))}-min`}\n        />\n      </ListItem>\n      <Divider />\n      <ListItem button>\n        <ListItemText primary=\"Veg/Non Veg:\" />\n        <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"veg\"\n                  value={veg ? \"Veg\" : \"Non-Veg\"}\n                  onChange={ (e) => {\n                    if(e.target.value === \"Veg\") {\n                      setVeg(true);\n                    }\n                    else {\n                      setVeg(false);\n                    }\n                  }}\n                >\n                  <MenuItem value=\"Veg\">Veg</MenuItem>\n                  <MenuItem value=\"Non-Veg\">Non-Veg</MenuItem>\n                </Select>\n      </ListItem>\n      <Divider />\n      <ListItem button>\n        <ListItemText primary=\"Tags:\" />\n        <TextField\n            id='tags'\n            itemname='tags'\n            variant=\"outlined\"\n            defaultValue={tags}\n            key={`${Math.floor((Math.random() * 1000))}-min`}\n        />\n      </ListItem>\n      <Divider />\n      <ListItem button>\n        <ListItemText primary=\"Addon Name:\" />\n        <TextField\n            id='addonname'\n            itemname='addonname'\n            variant=\"outlined\"\n            defaultValue={addonname}\n            key={`${Math.floor((Math.random() * 1000))}-min`}\n        />\n      </ListItem>\n      <Divider />\n      <ListItem button>\n        <ListItemText primary=\"Addon Price:\" />\n        <TextField\n            id='addonprice'\n            itemname='addonprice'\n            variant=\"outlined\"\n            defaultValue={addonprice}\n            key={`${Math.floor((Math.random() * 1000))}-min`}\n        />\n      </ListItem>\n      <Divider light />\n      <br/>\n      <br/>\n      <Stack\n        spacing={5}\n        direction=\"row\"\n        >\n        <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handlesave}\n        >\n          Save\n        </Button>\n      </Stack>\n    </Box>\n    </List>\n  );\n}\n","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/Orders.js",["171","172","173","174"],"/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/BuyerDashboard.js",["175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190"],"import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useEffect, useState } from \"react\";\nimport ls, { set } from \"local-storage\";\nimport axios from \"axios\";\nimport { Button } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { createTheme } from \"@mui/material/styles\";\nimport { deepOrange } from \"@mui/material/colors\";\nimport { yellow } from \"@mui/material/colors\";\nimport Chip from \"@mui/material/Chip\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport { TextField } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Dialog from \"@mui/material/Dialog\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Rating from \"@mui/material/Rating\";\nimport Fav from \"./Favourites\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Typography from \"@mui/material/Typography\";\n\nconst Fuse = require(\"fuse.js\");\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\nfunction Print() {\n  return <div>Meh...</div>;\n}\n\nfunction checktime(i) {\n  if(i < 10) //single digit\n  {\n    i = \"0\" + i;\n\n  }\n  return i;\n}\nvar f = 0;\nvar array0 = [];\nvar array1 = [];\nvar array2 = [];\nvar array3 = [];\nvar shoptimings = []; //shopname, openingtime, closingtime\n\nexport default function Myitem() {\n  const [menu, setMenu] = useState([]);\n\n  const [refresh, setRefresh] = useState(false);\n\n  const [search, setSearch] = useState(\"\");\n  const [minprice, setMinPrice] = useState(0);\n  const [maxprice, setMaxPrice] = useState(1000);\n\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  const [vegtrue, setVegtrue] = useState(true);\n  const [nonvegtrue, setNonvegtrue] = useState(true);\n\n  const [shopnames, setShopnames] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [selectedshopnames, setSelectedshopnames] = useState([]);\n  const [selectedtags, setSelectedtags] = useState([]);\n\n  const [wallet, setWallet] = useState(0);\n\n  const [meh, setMeh] = useState(false);\n\n  const handleClickOpen = (props) => {\n    // console.log(props);\n    //set selected value as props\n    setSelectedValue(props);\n    console.log(selectedValue);\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  // Fill up the rows array with data.\n  useEffect(() => {\n    // Get all documents from the database for item for the particular vendor\n    axios\n      .post(\"http://localhost:4000/buyer/showmenu\")\n      .then((res) => {\n        setMenu(res.data);\n        array0 = res.data; //original\n        array1 = res.data; //original open\n        //array2 = res.data; // original open filtered\n        //array3 = res.data;\n\n        setShopnames(res.data.map((item) => item.shopname));\n        //Remove duplicates\n        const shopnames = [...new Set(res.data.map((item) => item.shopname))];\n        setShopnames(shopnames);\n        //List of tags\n        var arrtags = [];\n        res.data.forEach((item) => {\n          for (var i = 0; i < item.tags.length; i++) {\n            arrtags.push(item.tags[i]);\n          }\n        });\n        //Remove duplicates from tags\n        const xtags = [...new Set(arrtags)];\n        setTags(xtags);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    axios\n      .post(\"http://localhost:4000/buyer/walletdetails\", {\n        email: ls.get(\"email\"),\n      })\n      .then((res) => {\n        setWallet(res.data.wallet);\n        ls.set(\"wallet\", res.data.wallet);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    //Save opening and closing time of shops in arrays\n    axios\n      .post(\"http://localhost:4000/buyer/shoptimings\")\n      .then((res) => {\n        shoptimings = res.data;\n        console.log(shoptimings);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    handlefilter(0);\n    // setRefresh(true);\n    // while(refresh === false){\n    //   console.log(\"waiting\");\n    // }\n  }, [refresh]);\n\n  // setRefresh(true);\n  const handlefavourite = (key) => {\n    //add to favourites\n    axios\n      .post(\"http://localhost:4000/buyer/addfavourite\", {\n        _id: key,\n        email: ls.get(\"email\"),\n      })\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handlefilter = (props) => {\n    //filter according to search keyword irrespective of case\n    var today = new Date();\n    var h = today.getHours();\n    var m = today.getMinutes();\n    h = checktime(h);\n    m = checktime(m);\n    var time = h + \":\" + m;\n\n    array1 = array1.filter((item) => {\n      var flag = false;\n      for (var i = 0; i < shoptimings.length; i++) {\n        if (\n          item.manageremail === shoptimings[i].email &&\n          shoptimings[i].opentime <= time &&\n          shoptimings[i].closetime >= time\n        ) {\n          flag = true;\n        }\n      }\n      return flag;\n    });\n\n    array3 = array0.filter((item) => !array1.includes(item));\n\n    array2 = array1;\n\n    // const fuse = new Fuse(array2, {\n    //   keys: [\"itemname\"],\n    // })\n\n    if (search !== \"\") {\n      //implement fuzzy search\n      // array2 = fuse.search(search);\n      array2 = array2.filter((item) =>\n        item.itemname.toLowerCase().includes(search.toLowerCase())\n      );\n    }\n\n    //filter according to veg and nonveg\n    if (vegtrue === true && nonvegtrue === false) {\n      array2 = array2.filter((item) => item.veg === true);\n    } else if (vegtrue === false && nonvegtrue === true) {\n      array2 = array2.filter((item) => item.veg === false);\n    }\n    // //filter according to price\n    if (minprice !== \"\" && maxprice !== \"\") {\n      array2 = array2.filter(\n        (item) => item.price >= minprice && item.price <= maxprice\n      );\n    } else if (minprice !== \"\") {\n      array2 = array2.filter((item) => item.price >= minprice);\n    } else if (maxprice !== \"\") {\n      array2 = array2.filter((item) => item.price <= maxprice);\n    } else if (minprice === \"\" && maxprice === \"\") {\n      array2 = array2.filter((item) => item.price >= 0 && item.price <= 100000);\n    }\n    // //filter according to shopname\n    if (selectedshopnames.length !== 0) {\n      array2 = array2.filter((item) =>\n        selectedshopnames.includes(item.shopname)\n      );\n    }\n    //filter accoring to tags\n    if (selectedtags.length !== 0) {\n      array2 = array2.filter((item) => {\n        var flag = false;\n        for (var i = 0; i < item.tags.length; i++) {\n          if (selectedtags.includes(item.tags[i])) {\n            flag = true;\n          }\n        }\n        return flag;\n      });\n    }\n\n    if (props === 1)\n      //ascending by price\n      array2 = array2.sort((a, b) => a.price - b.price);\n    else if (props === 2)\n      //descending by price\n      array2 = array2.sort((a, b) => b.price - a.price);\n    else if (props === 3)\n     { //ascending by rating\n      array2 = array2.sort((a, b) => \n        //take care of division by zero\n        {if(a.ratingcount === 0)\n          return -1;\n        else if(b.ratingcount === 0)\n          return 1;\n        else\n          return a.rating/a.ratingcount - b.rating/b.ratingcount;\n        })}\n    else if (props === 4)\n      //descending by rating\n      {\n        array2 = array2.sort((a, b) => \n        //take care of division by zero\n        {if(a.ratingcount === 0)\n          return 1;\n        else if(b.ratingcount === 0)\n          return -1;\n        else\n          return b.rating/b.ratingcount - a.rating/a.ratingcount;\n        })}\n\n    //   const fuse1 = new Fuse(array3, {\n    //     keys: [\"itemname\"],\n    // })\n\n    if (search !== \"\") {\n      //implement fuzzy search\n      // const result = fuse1.search(search);\n      // //store all result.item in array3\n      // for (var i = 0; i < result.length; i++) {\n      //   array3.push(result[i].item);\n      array3 = array3.filter((item) =>\n        item.itemname.toLowerCase().includes(search.toLowerCase())\n      );\n    }\n\n    //filter according to veg and nonveg\n    if (vegtrue === true && nonvegtrue === false) {\n      array3 = array3.filter((item) => item.veg === true);\n    } else if (vegtrue === false && nonvegtrue === true) {\n      array3 = array3.filter((item) => item.veg === false);\n    }\n    // //filter according to price\n    if (minprice !== \"\" && maxprice !== \"\") {\n      array3 = array3.filter(\n        (item) => item.price >= minprice && item.price <= maxprice\n      );\n    } else if (minprice !== \"\") {\n      array3 = array3.filter((item) => item.price >= minprice);\n    } else if (maxprice !== \"\") {\n      array3 = array3.filter((item) => item.price <= maxprice);\n    } else if (minprice === \"\" && maxprice === \"\") {\n      array3 = array3.filter((item) => item.price >= 0 && item.price <= 100000);\n    }\n    // //filter according to shopname\n    if (selectedshopnames.length !== 0) {\n      array3 = array3.filter((item) =>\n        selectedshopnames.includes(item.shopname)\n      );\n    }\n    //filter accoring to tags\n    if (selectedtags.length !== 0) {\n      array3 = array3.filter((item) => {\n        var flag = false;\n        for (var i = 0; i < item.tags.length; i++) {\n          if (selectedtags.includes(item.tags[i])) {\n            flag = true;\n          }\n        }\n        return flag;\n      });\n    }\n\n    if (props === 1)\n      //ascending by price\n      array3 = array3.sort((a, b) => a.price - b.price);\n    else if (props === 2)\n      //descending by price\n      array3 = array3.sort((a, b) => b.price - a.price);\n    else if (props === 3)\n      //ascending by rating\n      {\n        array3 = array3.sort((a, b) => \n        //take care of division by zero\n        {if(a.ratingcount === 0)\n          return -1;\n        else if(b.ratingcount === 0)\n          return 1;\n        else\n          return a.rating/a.ratingcount - b.rating/b.ratingcount;\n        })}\n    else if (props === 4)\n      //descending by rating\n      {\n        array3 = array3.sort((a, b) =>\n        //take care of division by zero\n        {if(a.ratingcount === 0)\n          return 1;\n        else if(b.ratingcount === 0)\n          return -1;\n        else\n          return b.rating/b.ratingcount - a.rating/a.ratingcount;\n        })}\n    // Filter out only open shops\n    //Store rest of the data in array3\n    setMenu(array2);\n    //setSortedMenu(array2);\n    // setSortedMenu2(array3);\n  };\n  return (\n    // Dont render until refresh is true\n    //array2 and array3 is empty\n\n    <div>\n      <div>\n        <Box\n          display=\"flex\"\n          flexDirection=\"row\"\n          alignItems=\"right\"\n          justifyContent=\"right\"\n          p={1}\n          m={1}\n          css={{ maxWidth: \"100%\" }}\n        >\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Wallet\"\n            variant=\"filled\"\n            value={wallet}\n            InputProps={{\n              readOnly: true,\n            }}\n          />\n          \n        </Box>\n        <Box\n          display=\"flex\"\n          flexDirection=\"row\"\n          alignItems=\"right\"\n          justifyContent=\"right\"\n          p={1}\n          m={1}\n          css={{ maxWidth: \"100%\" }}\n        >\n        <Button variant=\"contained\" color=\"primary\" \n          onClick={() => {\n            handlefilter(0);\n          }}>\n            Set/Reset\n          </Button>\n        </Box>\n      </div>\n      <div>\n        <Box sx={{ flexGrow: 1 }}>\n          <AppBar position=\"static\">\n            <Toolbar variant=\"dense\">\n              <IconButton\n                size=\"large\"\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"menu\"\n                sx={{ mr: 2 }}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                Favourites\n              </Typography>\n            </Toolbar>\n          </AppBar>\n        </Box>\n        <Fav />\n      </div>\n      {/* Filters */}\n\n      <div>\n        <Box\n          component=\"form\"\n          sx={{\n            \"& > :not(style)\": { m: 1, width: \"25ch\" },\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Search\"\n            variant=\"outlined\"\n            //Search for items which includes the word and refresh the menu\n            //lowercase\n            onChange={(e) => {\n              setSearch(e.target.value);\n            }}\n          />\n\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={vegtrue}\n                  label=\"Veg\"\n                  //pass checkbox value to handlecheckboxes\n                  onChange={(e) => {\n                    setVegtrue(e.target.checked);\n                  }}\n                  inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                />\n              }\n              label=\"Veg\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={nonvegtrue}\n                  label=\"Non-Veg\"\n                  onChange={(e) => {\n                    setNonvegtrue(e.target.checked);\n                  }}\n                  inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                />\n              }\n              label=\"Non-Veg\"\n            />\n          </FormGroup>\n        </Box>\n        <br />\n        {/* Price range having minimum and maximum values */}\n        <Box\n          component=\"form\"\n          sx={{\n            \"& > :not(style)\": { m: 1, width: \"25ch\", height: \"7ch\" },\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Minimum Price\"\n            variant=\"outlined\"\n            type=\"number\"\n            onChange={(e) => {\n              setMinPrice(e.target.value);\n            }}\n          />\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Maximum Price\"\n            variant=\"outlined\"\n            type=\"number\"\n            onChange={(e) => {\n              setMaxPrice(e.target.value);\n            }}\n          />\n        </Box>\n        {/* <br /> */}\n        <Box\n          component=\"form\"\n          sx={{\n            \"& > :not(style)\": { m: 1, width: \"25ch\" },\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n          {/* Create multiselect for selecting shops */}\n          <FormControl variant=\"outlined\">\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Select Shop\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              defaultValue={\"\"}\n              multiple\n              value={selectedshopnames}\n              onChange={(e) => {\n                setSelectedshopnames(e.target.value);\n              }}\n              label=\"Select Shop\"\n            >\n              {shopnames.map((item) => {\n                return (\n                  <MenuItem key={item} value={item}>\n                    {item}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n\n          {/* Create multiselect for selecting tags */}\n          <FormControl variant=\"outlined\">\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Select Tags\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              defaultValue={\"\"}\n              multiple\n              value={selectedtags}\n              onChange={(e) => {\n                setSelectedtags(e.target.value);\n              }}\n              label=\"Select Tags\"\n            >\n              {tags.map((item) => {\n                return (\n                  <MenuItem key={item} value={item}>\n                    {item}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </Box>\n        <Box\n          component=\"form\"\n          sx={{\n            \"& > :not(style)\": { m: 1, width: \"25ch\", height: \"7ch\" },\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              handlefilter(0);\n            }}\n          >\n            Filter\n          </Button>\n        </Box>\n        <Box\n          component=\"form\"\n          sx={{\n            \"& > :not(style)\": { m: 1, width: \"25ch\", height: \"7ch\" },\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n          {/* Ascending by price button */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              handlefilter(1);\n            }}\n          >\n            Ascending by Price\n          </Button>\n          {/* Descending by price button */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              handlefilter(2);\n            }}\n          >\n            Descending by Price\n          </Button>\n          {/* Ascending by rating */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              handlefilter(3);\n            }}\n          >\n            Ascending by Rating\n          </Button>\n          {/* Descending by rating */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              handlefilter(4);\n            }}\n          >\n            Descending by Rating\n          </Button>\n        </Box>\n      </div>\n      <div>\n        <Box sx={{ flexGrow: 1 }}>\n          <AppBar position=\"static\">\n            <Toolbar variant=\"dense\">\n              <IconButton\n                size=\"large\"\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"menu\"\n                sx={{ mr: 2 }}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                Menu\n              </Typography>\n            </Toolbar>\n          </AppBar>\n        </Box>\n      </div>\n      {/* Menu */}\n      <Box>\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>ItemName</TableCell>\n                <TableCell align=\"center\">Image</TableCell>\n                <TableCell align=\"center\">ShopName</TableCell>\n                <TableCell align=\"center\">Price</TableCell>\n                <TableCell align=\"center\">Veg/Non-Veg</TableCell>\n                <TableCell align=\"center\">Tags</TableCell>\n                {/* Buying Stages */}\n                <TableCell align=\"center\">AddOns</TableCell>\n                <TableCell align=\"center\">Rating</TableCell>\n                <TableCell align=\"center\"></TableCell>\n                <TableCell align=\"center\"></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {array2.map((row) => (\n                <TableRow\n                  key={row._id}\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.itemname}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <img\n                      src={row.image}\n                      alt=\"food\"\n                      style={{ width: \"120px\", height: \"100px\" }}\n                    />\n                  </TableCell>\n                  <TableCell align=\"center\">{row.shopname}</TableCell>\n                  <TableCell align=\"center\">Rs.{row.price}</TableCell>\n                  <TableCell align=\"center\">\n                    {row.veg === true ? \"Veg\" : \"Non-Veg\"}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {row.tags.map((tag) => (\n                      <div spacing={2} key={tag}>\n                        <Stack spacing={2}>\n                          <Chip label={tag} key={tag} />\n                        </Stack>\n                      </div>\n                    ))}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {row.addonname.map((addon, index) => (\n                      <div spacing={2} key={index}>\n                        <Stack spacing={2}>\n                          {/* Addonname and addonprice */}\n                          <Chip\n                            label={`${addon}: Rs.${row.addonprice[index]}`}\n                            key={index}\n                          />\n                        </Stack>\n                      </div>\n                    ))}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {/* Rating */}\n                    <Rating\n                      name=\"read-only\"\n                      //value = floor(row.rating)/row.ratingcount\n                      value={\n                        row.ratingcount === 0\n                          ? 0\n                          : Math.floor(row.rating / row.ratingcount)\n                      }\n                      readOnly\n                      size=\"small\"\n                    />\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={() => handlefavourite(row._id)}\n                    >\n                      Add to Favourites\n                    </Button>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={() => handleClickOpen(row._id)}\n                    >\n                      Buy\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        {open ? (\n          <SimpleDialog\n            selectedValue={selectedValue}\n            open={open}\n            onClose={handleClose}\n          />\n        ) : null}\n      </Box>\n      {/* Unavailable */}\n\n      <div>\n        <Box sx={{ flexGrow: 1 }}>\n          <AppBar position=\"static\">\n            <Toolbar variant=\"dense\">\n              <IconButton\n                size=\"large\"\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"menu\"\n                sx={{ mr: 2 }}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                Menu (Not Open)\n              </Typography>\n            </Toolbar>\n          </AppBar>\n        </Box>\n      </div>\n      {/* Menu */}\n      <Box>\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>ItemName</TableCell>\n                <TableCell align=\"center\">Image</TableCell>\n                <TableCell align=\"center\">ShopName</TableCell>\n                <TableCell align=\"center\">Price</TableCell>\n                <TableCell align=\"center\">Veg/Non-Veg</TableCell>\n                <TableCell align=\"center\">Tags</TableCell>\n                {/* Buying Stages */}\n                <TableCell align=\"center\">AddOns</TableCell>\n                <TableCell align=\"center\">Rating</TableCell>\n                <TableCell align=\"center\"></TableCell>\n                <TableCell align=\"center\"></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {array3.map((row) => (\n                <TableRow\n                  key={row._id}\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.itemname}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <img\n                      src={row.image}\n                      alt=\"food\"\n                      style={{ width: \"120px\", height: \"100px\" }}\n                    />\n                  </TableCell>\n                  <TableCell align=\"center\">{row.shopname}</TableCell>\n                  <TableCell align=\"center\">Rs.{row.price}</TableCell>\n                  <TableCell align=\"center\">\n                    {row.veg === true ? \"Veg\" : \"Non-Veg\"}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {row.tags.map((tag) => (\n                      <div spacing={2} key={tag}>\n                        <Stack spacing={2}>\n                          <Chip label={tag} key={tag} />\n                        </Stack>\n                      </div>\n                    ))}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {row.addonname.map((addon, index) => (\n                      <div spacing={2} key={index}>\n                        <Stack spacing={2}>\n                          {/* Addonname and addonprice */}\n                          <Chip\n                            label={`${addon}: Rs.${row.addonprice[index]}`}\n                            key={index}\n                          />\n                        </Stack>\n                      </div>\n                    ))}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {/* Rating */}\n                    <Rating\n                      name=\"read-only\"\n                      value={\n                        row.ratingcount === 0\n                          ? 0\n                          : Math.floor(row.rating / row.ratingcount)\n                      }\n                      readOnly\n                      size=\"small\"\n                    />\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={() => handlefavourite(row._id)}\n                    >\n                      Add to Favourites\n                    </Button>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      disabled\n                      onClick={() => handleClickOpen(row._id)}\n                    >\n                      Buy\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        {open ? (\n          <SimpleDialog\n            selectedValue={selectedValue}\n            open={open}\n            onClose={handleClose}\n          />\n        ) : null}\n      </Box>\n    </div>\n  );\n}\n\nfunction SimpleDialog(props) {\n  const { onClose, selectedValue, open } = props;\n  const [quantity, setQuantity] = useState(1);\n  const [itemname, setItemname] = useState(\"\");\n  const [shopname, setShopname] = useState(\"\");\n  const [vendoremail, setVendoremail] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [addonname, setAddonname] = useState([]);\n  const [addonprice, setAddonprice] = useState([]);\n  const [selectedaddonname, setSelectedaddonname] = useState([]);\n  const [selectedaddonprice, setSelectedaddonprice] = useState([]);\n  const [totalprice, setTotalprice] = useState(0);\n  const handleClose = () => {\n    onClose();\n  };\n  const handlebuy = () => {\n    //get time in int\n    const time = new Date().getTime();\n    // convert quantity to int\n    const q = parseInt(quantity);\n    var p = parseInt(price);\n    // run loop on addonprice\n    for (let i = 0; i < selectedaddonprice.length; i++) {\n      // convert addonprice to int\n      const ap = parseInt(selectedaddonprice[i]);\n      // add addonprice to p\n      p = p + ap;\n    }\n    // add quantity to p\n    p = p * q;\n    if (p > ls.get(\"wallet\")) {\n      alert(\"Insufficient Balance\");\n      onClose();\n    } else {\n      console.log({\n        itemname: itemname,\n        shopname: shopname,\n        price: price,\n        addonname: selectedaddonname,\n        addonprice: selectedaddonprice,\n        quantity: q,\n        totalprice: p,\n        time: time,\n      });\n      axios\n        .post(\"http://localhost:4000/buyer/orderitem\", {\n          item_id: selectedValue,\n          itemname: itemname,\n          vendoremail: vendoremail,\n          shopname: shopname,\n          buyeremail: ls.get(\"email\"),\n          buyername: ls.get(\"username\"),\n          placedtime: time,\n          quantity: q,\n          addonname: selectedaddonname,\n          addonprice: selectedaddonprice,\n          totalprice: p,\n        })\n        .then((res) => {\n          console.log(res);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      //deduct money\n      axios\n        .post(\"http://localhost:4000/buyer/deductmoney\", {\n          email: ls.get(\"email\"),\n          amount: p,\n        })\n        .then((res) => {\n          console.log(res);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      onClose();\n    }\n  };\n\n  const [refresh, setRefresh] = useState(false);\n\n  useEffect(() => {\n    axios\n      .post(\"http://localhost:4000/buyer/getitem\", {\n        _id: selectedValue,\n      })\n      .then((res) => {\n        setItemname(res.data.itemname);\n        setShopname(res.data.shopname);\n        setPrice(res.data.price);\n        setAddonname(res.data.addonname);\n        setAddonprice(res.data.addonprice);\n        setVendoremail(res.data.manageremail);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    if (selectedValue === \"\" || selectedValue === undefined) {\n      setRefresh(!refresh);\n    }\n  }, [refresh]);\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>A few more steps...</DialogTitle>\n      <br></br>\n      {/* Details of the product */}\n      {/* {selectedValue} */}\n      <Box>\n        <Stack spacing={2}>\n          <TextField\n            id=\"outlined-basic\"\n            label=\"ItemName\"\n            variant=\"outlined\"\n            value={itemname}\n            InputProps={{\n              readOnly: true,\n            }}\n          />\n          <TextField\n            id=\"outlined-basic\"\n            label=\"ShopName\"\n            variant=\"outlined\"\n            value={shopname}\n            InputProps={{\n              readOnly: true,\n            }}\n          />\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Price\"\n            variant=\"outlined\"\n            value={price}\n            InputProps={{\n              readOnly: true,\n            }}\n          />\n          <TextField\n            id=\"quantity\"\n            label=\"Quantity\"\n            type=\"number\"\n            variant=\"outlined\"\n            defaultValue={1}\n            onChange={(e) => {\n              setQuantity(e.target.value);\n            }}\n          />\n          {/* Multi select AddOns */}\n          <FormControl variant=\"outlined\">\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              AddOns\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              multiple\n              value={selectedaddonname}\n              onChange={(e) => {\n                setSelectedaddonname(e.target.value);\n                // Set selectedaddonprice as the same index as selectedaddonname\n                setSelectedaddonprice(\n                  e.target.value.map((addon) => {\n                    return addonprice[addonname.indexOf(addon)];\n                  })\n                );\n              }}\n              label=\"AddOns\"\n              variant=\"outlined\"\n            >\n              {addonname.map((addon) => (\n                <MenuItem key={addon} value={addon}>\n                  {addon}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Stack>\n      </Box>\n      <br></br>\n      <Button variant=\"contained\" color=\"primary\" onClick={handlebuy}>\n        Buy\n      </Button>\n      {/* Set quantity to order */}\n    </Dialog>\n  );\n}\n","/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/Favourites.js",["191","192","193","194","195"],"import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useEffect, useState } from \"react\";\nimport ls from \"local-storage\";\nimport axios from \"axios\";\nimport { Button } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\n\nimport Chip from \"@mui/material/Chip\";\n\n\nexport default function Fav() {\n  const [menu, setMenu] = useState([]);\n  const [sortedmenu, setSortedMenu] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(\"\");\n\n\n  // Fill up the rows array with data.\n  useEffect(() => {\n    // Get all documents from the database for item for the particular vendor\n    axios\n      .post(\"http://localhost:4000/buyer/getfavourites\", {\n        email: ls.get(\"email\"),\n      })\n      .then((response) => {\n        setMenu(response.data);\n        setSortedMenu(response.data);\n        console.log(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [refresh]);\n\n  const handlefavourite = (key) => {\n      axios\n        .post(\"http://localhost:4000/buyer/removefavourite\", {\n            email: ls.get(\"email\"),\n            _id: key\n        })\n        .then((response) => {\n            console.log(response);\n            setRefresh(!refresh);\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    };\n\n\n  return (\n    <div>\n      <Box>\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>ItemName</TableCell>\n                <TableCell align=\"center\">Image</TableCell>\n                <TableCell align=\"center\">ShopName</TableCell>\n                <TableCell align=\"center\">Price</TableCell>\n                <TableCell align=\"center\">Veg/Non-Veg</TableCell>\n                <TableCell align=\"center\">Tags</TableCell>\n                {/* Buying Stages */}\n                <TableCell align=\"center\">AddOns</TableCell>\n                <TableCell align=\"center\"></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {sortedmenu.map((row) => (\n                <TableRow\n                  key={row._id}\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.itemname}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <img\n                      src={row.image}\n                      alt=\"food\"\n                      style={{ width: \"120px\", height: \"100px\" }}\n                    />\n                  </TableCell>\n                  <TableCell align=\"center\">{row.shopname}</TableCell>\n                  <TableCell align=\"center\">Rs.{row.price}</TableCell>\n                  <TableCell align=\"center\">\n                    {row.veg === true ? \"Veg\" : \"Non-Veg\"}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {row.tags.map((tag) => (\n                      <div spacing={2} key={tag}>\n                        <Stack spacing={2}>\n                          <Chip label={tag} key={tag} />\n                        </Stack>\n                      </div>\n                    ))}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {row.addonname.map((addon, index) => (\n                      <div spacing={2} key={index}>\n                        <Stack spacing={2}>\n                          {/* Addonname and addonprice */}\n                          <Chip\n                            label={`${addon}: Rs.${row.addonprice[index]}`}\n                            key={index}\n                          />\n                        </Stack>\n                      </div>\n                    ))}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={() => handlefavourite(row._id)}\n                    >\n                      Remove from Favourites\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </div>\n  );\n}",{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":7,"column":8,"nodeType":"202","messageId":"203","endLine":7,"endColumn":15},{"ruleId":"200","severity":1,"message":"204","line":9,"column":8,"nodeType":"202","messageId":"203","endLine":9,"endColumn":14},{"ruleId":"200","severity":1,"message":"205","line":21,"column":8,"nodeType":"202","messageId":"203","endLine":21,"endColumn":14},{"ruleId":"200","severity":1,"message":"206","line":25,"column":10,"nodeType":"202","messageId":"203","endLine":25,"endColumn":21},{"ruleId":"200","severity":1,"message":"207","line":27,"column":10,"nodeType":"202","messageId":"203","endLine":27,"endColumn":20},{"ruleId":"208","severity":1,"message":"209","line":46,"column":18,"nodeType":"210","messageId":"211","endLine":46,"endColumn":20},{"ruleId":"208","severity":1,"message":"209","line":46,"column":41,"nodeType":"210","messageId":"211","endLine":46,"endColumn":43},{"ruleId":"200","severity":1,"message":"212","line":56,"column":9,"nodeType":"202","messageId":"203","endLine":56,"endColumn":23},{"ruleId":"200","severity":1,"message":"213","line":5,"column":10,"nodeType":"202","messageId":"203","endLine":5,"endColumn":17},{"ruleId":"200","severity":1,"message":"214","line":1,"column":10,"nodeType":"202","messageId":"203","endLine":1,"endColumn":15},{"ruleId":"200","severity":1,"message":"215","line":2,"column":20,"nodeType":"202","messageId":"203","endLine":2,"endColumn":29},{"ruleId":"200","severity":1,"message":"216","line":6,"column":10,"nodeType":"202","messageId":"203","endLine":6,"endColumn":14},{"ruleId":"200","severity":1,"message":"217","line":6,"column":16,"nodeType":"202","messageId":"203","endLine":6,"endColumn":23},{"ruleId":"200","severity":1,"message":"218","line":7,"column":10,"nodeType":"202","messageId":"203","endLine":7,"endColumn":15},{"ruleId":"200","severity":1,"message":"219","line":7,"column":17,"nodeType":"202","messageId":"203","endLine":7,"endColumn":25},{"ruleId":"220","severity":1,"message":"221","line":13,"column":97,"nodeType":"222","endLine":13,"endColumn":132},{"ruleId":"200","severity":1,"message":"223","line":8,"column":10,"nodeType":"202","messageId":"203","endLine":8,"endColumn":18},{"ruleId":"200","severity":1,"message":"224","line":15,"column":7,"nodeType":"202","messageId":"203","endLine":15,"endColumn":12},{"ruleId":"200","severity":1,"message":"225","line":6,"column":8,"nodeType":"202","messageId":"203","endLine":6,"endColumn":24},{"ruleId":"200","severity":1,"message":"226","line":7,"column":8,"nodeType":"202","messageId":"203","endLine":7,"endColumn":16},{"ruleId":"200","severity":1,"message":"227","line":8,"column":8,"nodeType":"202","messageId":"203","endLine":8,"endColumn":12},{"ruleId":"228","severity":1,"message":"229","line":43,"column":17,"nodeType":"230","messageId":"231","endLine":43,"endColumn":18,"suggestions":"232"},{"ruleId":"228","severity":1,"message":"229","line":43,"column":42,"nodeType":"230","messageId":"231","endLine":43,"endColumn":43,"suggestions":"233"},{"ruleId":"208","severity":1,"message":"234","line":88,"column":36,"nodeType":"210","messageId":"211","endLine":88,"endColumn":38},{"ruleId":"228","severity":1,"message":"229","line":51,"column":17,"nodeType":"230","messageId":"231","endLine":51,"endColumn":18,"suggestions":"235"},{"ruleId":"228","severity":1,"message":"229","line":51,"column":42,"nodeType":"230","messageId":"231","endLine":51,"endColumn":43,"suggestions":"236"},{"ruleId":"237","severity":1,"message":"238","line":205,"column":21,"nodeType":"239","messageId":"240","endLine":205,"endColumn":31},{"ruleId":"200","severity":1,"message":"225","line":6,"column":8,"nodeType":"202","messageId":"203","endLine":6,"endColumn":24},{"ruleId":"200","severity":1,"message":"226","line":7,"column":8,"nodeType":"202","messageId":"203","endLine":7,"endColumn":16},{"ruleId":"200","severity":1,"message":"227","line":8,"column":8,"nodeType":"202","messageId":"203","endLine":8,"endColumn":12},{"ruleId":"228","severity":1,"message":"229","line":41,"column":17,"nodeType":"230","messageId":"231","endLine":41,"endColumn":18,"suggestions":"241"},{"ruleId":"228","severity":1,"message":"229","line":41,"column":42,"nodeType":"230","messageId":"231","endLine":41,"endColumn":43,"suggestions":"242"},{"ruleId":"200","severity":1,"message":"243","line":67,"column":9,"nodeType":"202","messageId":"203","endLine":67,"endColumn":21},{"ruleId":"200","severity":1,"message":"223","line":9,"column":10,"nodeType":"202","messageId":"203","endLine":9,"endColumn":18},{"ruleId":"200","severity":1,"message":"244","line":13,"column":10,"nodeType":"202","messageId":"203","endLine":13,"endColumn":15},{"ruleId":"200","severity":1,"message":"245","line":16,"column":22,"nodeType":"202","messageId":"203","endLine":16,"endColumn":32},{"ruleId":"200","severity":1,"message":"246","line":29,"column":10,"nodeType":"202","messageId":"203","endLine":29,"endColumn":18},{"ruleId":"200","severity":1,"message":"247","line":29,"column":20,"nodeType":"202","messageId":"203","endLine":29,"endColumn":31},{"ruleId":"248","severity":1,"message":"249","line":99,"column":5,"nodeType":"250","messageId":"251","endLine":132,"endColumn":6},{"ruleId":"200","severity":1,"message":"252","line":10,"column":14,"nodeType":"202","messageId":"203","endLine":10,"endColumn":17},{"ruleId":"200","severity":1,"message":"253","line":13,"column":8,"nodeType":"202","messageId":"203","endLine":13,"endColumn":11},{"ruleId":"200","severity":1,"message":"254","line":33,"column":10,"nodeType":"202","messageId":"203","endLine":33,"endColumn":14},{"ruleId":"200","severity":1,"message":"255","line":33,"column":16,"nodeType":"202","messageId":"203","endLine":33,"endColumn":23},{"ruleId":"200","severity":1,"message":"256","line":35,"column":10,"nodeType":"202","messageId":"203","endLine":35,"endColumn":22},{"ruleId":"200","severity":1,"message":"257","line":11,"column":33,"nodeType":"202","messageId":"203","endLine":11,"endColumn":42},{"ruleId":"200","severity":1,"message":"258","line":20,"column":10,"nodeType":"202","messageId":"203","endLine":20,"endColumn":25},{"ruleId":"200","severity":1,"message":"259","line":21,"column":10,"nodeType":"202","messageId":"203","endLine":21,"endColumn":15},{"ruleId":"200","severity":1,"message":"260","line":48,"column":5,"nodeType":"202","messageId":"203","endLine":48,"endColumn":14},{"ruleId":"200","severity":1,"message":"261","line":50,"column":10,"nodeType":"202","messageId":"203","endLine":50,"endColumn":21},{"ruleId":"200","severity":1,"message":"262","line":63,"column":10,"nodeType":"202","messageId":"203","endLine":63,"endColumn":25},{"ruleId":"200","severity":1,"message":"263","line":63,"column":27,"nodeType":"202","messageId":"203","endLine":63,"endColumn":45},{"ruleId":"200","severity":1,"message":"264","line":64,"column":10,"nodeType":"202","messageId":"203","endLine":64,"endColumn":19},{"ruleId":"200","severity":1,"message":"265","line":64,"column":21,"nodeType":"202","messageId":"203","endLine":64,"endColumn":33},{"ruleId":"208","severity":1,"message":"234","line":154,"column":21,"nodeType":"210","messageId":"211","endLine":154,"endColumn":23},{"ruleId":"208","severity":1,"message":"234","line":157,"column":32,"nodeType":"210","messageId":"211","endLine":157,"endColumn":34},{"ruleId":"200","severity":1,"message":"224","line":24,"column":7,"nodeType":"202","messageId":"203","endLine":24,"endColumn":12},{"ruleId":"200","severity":1,"message":"225","line":6,"column":8,"nodeType":"202","messageId":"203","endLine":6,"endColumn":24},{"ruleId":"200","severity":1,"message":"226","line":7,"column":8,"nodeType":"202","messageId":"203","endLine":7,"endColumn":16},{"ruleId":"200","severity":1,"message":"227","line":8,"column":8,"nodeType":"202","messageId":"203","endLine":8,"endColumn":12},{"ruleId":"200","severity":1,"message":"223","line":19,"column":10,"nodeType":"202","messageId":"203","endLine":19,"endColumn":18},{"ruleId":"200","severity":1,"message":"266","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":14},{"ruleId":"200","severity":1,"message":"267","line":8,"column":8,"nodeType":"202","messageId":"203","endLine":8,"endColumn":24},{"ruleId":"200","severity":1,"message":"245","line":14,"column":8,"nodeType":"202","messageId":"203","endLine":14,"endColumn":18},{"ruleId":"200","severity":1,"message":"268","line":15,"column":10,"nodeType":"202","messageId":"203","endLine":15,"endColumn":21},{"ruleId":"200","severity":1,"message":"223","line":16,"column":10,"nodeType":"202","messageId":"203","endLine":16,"endColumn":18},{"ruleId":"200","severity":1,"message":"269","line":38,"column":10,"nodeType":"202","messageId":"203","endLine":38,"endColumn":15},{"ruleId":"200","severity":1,"message":"270","line":38,"column":17,"nodeType":"202","messageId":"203","endLine":38,"endColumn":25},{"ruleId":"200","severity":1,"message":"223","line":9,"column":10,"nodeType":"202","messageId":"203","endLine":9,"endColumn":18},{"ruleId":"200","severity":1,"message":"244","line":13,"column":10,"nodeType":"202","messageId":"203","endLine":13,"endColumn":15},{"ruleId":"248","severity":1,"message":"249","line":33,"column":9,"nodeType":"250","messageId":"251","endLine":33,"endColumn":90},{"ruleId":"200","severity":1,"message":"252","line":10,"column":14,"nodeType":"202","messageId":"203","endLine":10,"endColumn":17},{"ruleId":"200","severity":1,"message":"256","line":17,"column":10,"nodeType":"202","messageId":"203","endLine":17,"endColumn":22},{"ruleId":"200","severity":1,"message":"271","line":18,"column":10,"nodeType":"202","messageId":"203","endLine":18,"endColumn":16},{"ruleId":"200","severity":1,"message":"272","line":19,"column":10,"nodeType":"202","messageId":"203","endLine":19,"endColumn":20},{"ruleId":"200","severity":1,"message":"252","line":10,"column":14,"nodeType":"202","messageId":"203","endLine":10,"endColumn":17},{"ruleId":"200","severity":1,"message":"273","line":19,"column":10,"nodeType":"202","messageId":"203","endLine":19,"endColumn":21},{"ruleId":"200","severity":1,"message":"274","line":20,"column":10,"nodeType":"202","messageId":"203","endLine":20,"endColumn":20},{"ruleId":"200","severity":1,"message":"275","line":21,"column":10,"nodeType":"202","messageId":"203","endLine":21,"endColumn":16},{"ruleId":"200","severity":1,"message":"276","line":23,"column":8,"nodeType":"202","messageId":"203","endLine":23,"endColumn":21},{"ruleId":"200","severity":1,"message":"277","line":39,"column":7,"nodeType":"202","messageId":"203","endLine":39,"endColumn":11},{"ruleId":"200","severity":1,"message":"278","line":47,"column":10,"nodeType":"202","messageId":"203","endLine":47,"endColumn":15},{"ruleId":"200","severity":1,"message":"279","line":59,"column":5,"nodeType":"202","messageId":"203","endLine":59,"endColumn":6},{"ruleId":"200","severity":1,"message":"280","line":67,"column":10,"nodeType":"202","messageId":"203","endLine":67,"endColumn":14},{"ruleId":"200","severity":1,"message":"281","line":69,"column":19,"nodeType":"202","messageId":"203","endLine":69,"endColumn":29},{"ruleId":"200","severity":1,"message":"282","line":87,"column":10,"nodeType":"202","messageId":"203","endLine":87,"endColumn":13},{"ruleId":"200","severity":1,"message":"283","line":87,"column":15,"nodeType":"202","messageId":"203","endLine":87,"endColumn":21},{"ruleId":"284","severity":1,"message":"285","line":161,"column":6,"nodeType":"286","endLine":161,"endColumn":15,"suggestions":"287"},{"ruleId":"200","severity":1,"message":"288","line":918,"column":10,"nodeType":"202","messageId":"203","endLine":918,"endColumn":20},{"ruleId":"200","severity":1,"message":"289","line":918,"column":22,"nodeType":"202","messageId":"203","endLine":918,"endColumn":35},{"ruleId":"284","severity":1,"message":"290","line":1008,"column":6,"nodeType":"286","endLine":1008,"endColumn":15,"suggestions":"291"},{"ruleId":"200","severity":1,"message":"280","line":20,"column":10,"nodeType":"202","messageId":"203","endLine":20,"endColumn":14},{"ruleId":"200","severity":1,"message":"292","line":24,"column":10,"nodeType":"202","messageId":"203","endLine":24,"endColumn":14},{"ruleId":"200","severity":1,"message":"293","line":24,"column":16,"nodeType":"202","messageId":"203","endLine":24,"endColumn":23},{"ruleId":"200","severity":1,"message":"294","line":25,"column":10,"nodeType":"202","messageId":"203","endLine":25,"endColumn":23},{"ruleId":"200","severity":1,"message":"295","line":25,"column":25,"nodeType":"202","messageId":"203","endLine":25,"endColumn":41},"no-native-reassign",["296"],"no-negated-in-lhs",["297"],"no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","'SignUp' is defined but never used.","'Orders' is defined but never used.","'sortedUsers' is assigned a value but never used.","'searchText' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'customFunction' is assigned a value but never used.","'details' is assigned a value but never used.","'color' is defined but never used.","'useEffect' is defined but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useState' is defined but never used.","'theme' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Link' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["298","299"],["300","301"],"Expected '===' and instead saw '=='.",["302","303"],["304","305"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps",["306","307"],["308","309"],"'handleSubmit' is assigned a value but never used.","'width' is defined but never used.","'InputLabel' is defined but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'set' is defined but never used.","'Box' is defined but never used.","'rows' is assigned a value but never used.","'setRows' is assigned a value but never used.","'sortedorders' is assigned a value but never used.","'TextField' is defined but never used.","'RemoveFromQueue' is defined but never used.","'Title' is defined but never used.","'freqbatch' is assigned a value but never used.","'Creategraph' is defined but never used.","'completedemails' is assigned a value but never used.","'setCompletedEmails' is assigned a value but never used.","'allbuyers' is assigned a value but never used.","'setAllBuyers' is assigned a value but never used.","'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'FormControl' is defined but never used.","'image' is assigned a value but never used.","'setImage' is assigned a value but never used.","'rating' is assigned a value but never used.","'ratingbool' is assigned a value but never used.","'createTheme' is defined but never used.","'deepOrange' is defined but never used.","'yellow' is defined but never used.","'OutlinedInput' is defined but never used.","'Fuse' is assigned a value but never used.","'Print' is defined but never used.","'f' is assigned a value but never used.","'menu' is assigned a value but never used.","'setRefresh' is assigned a value but never used.","'meh' is assigned a value but never used.","'setMeh' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handlefilter'. Either include it or remove the dependency array.","ArrayExpression",["310"],"'totalprice' is assigned a value but never used.","'setTotalprice' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'selectedValue'. Either include it or remove the dependency array.",["311"],"'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'selectedValue' is assigned a value but never used.","'setSelectedValue' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"312","fix":"313","desc":"314"},{"messageId":"315","fix":"316","desc":"317"},{"messageId":"312","fix":"318","desc":"314"},{"messageId":"315","fix":"319","desc":"317"},{"messageId":"312","fix":"320","desc":"314"},{"messageId":"315","fix":"321","desc":"317"},{"messageId":"312","fix":"322","desc":"314"},{"messageId":"315","fix":"323","desc":"317"},{"messageId":"312","fix":"324","desc":"314"},{"messageId":"315","fix":"325","desc":"317"},{"messageId":"312","fix":"326","desc":"314"},{"messageId":"315","fix":"327","desc":"317"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},"removeEscape",{"range":"332","text":"333"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"334","text":"335"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"336","text":"333"},{"range":"337","text":"335"},{"range":"338","text":"333"},{"range":"339","text":"335"},{"range":"340","text":"333"},{"range":"341","text":"335"},{"range":"342","text":"333"},{"range":"343","text":"335"},{"range":"344","text":"333"},{"range":"345","text":"335"},"Update the dependencies array to be: [handlefilter, refresh]",{"range":"346","text":"347"},"Update the dependencies array to be: [refresh, selectedValue]",{"range":"348","text":"349"},[1496,1497],"",[1496,1496],"\\",[1521,1522],[1521,1521],[1769,1770],[1769,1769],[1794,1795],[1794,1794],[1394,1395],[1394,1394],[1419,1420],[1419,1419],[4884,4893],"[handlefilter, refresh]",[31079,31088],"[refresh, selectedValue]"]