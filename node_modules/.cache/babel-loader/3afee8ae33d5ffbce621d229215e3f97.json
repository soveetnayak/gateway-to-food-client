{"ast":null,"code":"var _jsxFileName = \"/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/BuyerDashboard.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useEffect, useState } from \"react\";\nimport ls, { set } from \"local-storage\";\nimport axios from \"axios\";\nimport { Button } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { createTheme } from \"@mui/material/styles\";\nimport { deepOrange } from \"@mui/material/colors\";\nimport { yellow } from \"@mui/material/colors\";\nimport Chip from \"@mui/material/Chip\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport { TextField } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Dialog from \"@mui/material/Dialog\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Rating from \"@mui/material/Rating\";\nimport Fav from \"./Favourites\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Typography from \"@mui/material/Typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};\n\nfunction Print() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Meh...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Print;\nvar f = 0;\nvar array0 = [];\nvar array1 = [];\nvar array2 = [];\nvar array3 = [];\nvar shoptimings = []; //shopname, openingtime, closingtime\n\nexport default function Myitem() {\n  _s();\n\n  const [menu, setMenu] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [minprice, setMinPrice] = useState(0);\n  const [maxprice, setMaxPrice] = useState(1000);\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  const [vegtrue, setVegtrue] = useState(true);\n  const [nonvegtrue, setNonvegtrue] = useState(true);\n  const [shopnames, setShopnames] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [selectedshopnames, setSelectedshopnames] = useState([]);\n  const [selectedtags, setSelectedtags] = useState([]);\n  const [wallet, setWallet] = useState(0);\n  const [meh, setMeh] = useState(false);\n\n  const handleClickOpen = props => {\n    // console.log(props);\n    //set selected value as props\n    setSelectedValue(props);\n    console.log(selectedValue);\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  }; // Fill up the rows array with data.\n\n\n  useEffect(() => {\n    // Get all documents from the database for item for the particular vendor\n    axios.post(\"http://localhost:4000/buyer/showmenu\").then(res => {\n      setMenu(res.data);\n      array0 = res.data; //original\n\n      array1 = res.data; //originaal open\n\n      array2 = res.data; // original open filtered\n      //array3 = res.data; \n\n      setShopnames(res.data.map(item => item.shopname)); //Remove duplicates\n\n      const shopnames = [...new Set(res.data.map(item => item.shopname))];\n      setShopnames(shopnames); //List of tags\n\n      var arrtags = [];\n      res.data.forEach(item => {\n        for (var i = 0; i < item.tags.length; i++) {\n          arrtags.push(item.tags[i]);\n        }\n      }); //Remove duplicates from tags\n\n      const xtags = [...new Set(arrtags)];\n      setTags(xtags);\n    }).catch(err => {\n      console.log(err);\n    });\n    axios.post(\"http://localhost:4000/buyer/walletdetails\", {\n      email: ls.get(\"email\")\n    }).then(res => {\n      setWallet(res.data.wallet);\n      ls.set(\"wallet\", res.data.wallet);\n    }).catch(err => {\n      console.log(err);\n    }); //Save opening and closing time of shops in arrays\n\n    axios.post(\"http://localhost:4000/buyer/shoptimings\").then(res => {\n      shoptimings = res.data;\n      console.log(shoptimings);\n    }).catch(err => {\n      console.log(err);\n    }); // var today = new Date();\n    // var time = today.getHours() + \":\" + today.getMinutes();\n    // array1 = array1.filter((item) => {\n    //   var flag = false;\n    //   for (var i = 0; i < shoptimings.length; i++) {\n    //     if (\n    //       item.manageremail === shoptimings[i].email &&\n    //       shoptimings[i].opentime <= time &&\n    //       shoptimings[i].closetime >= time\n    //     ) {\n    //       flag = true;\n    //     }\n    //   }\n    //   return flag;\n    // });\n    // array3 = array0.filter((item) => !array1.includes(item));\n    // setSortedMenu(array1);\n    // setSortedMenu2(array3);\n\n    handlefilter(0); //  setRefresh(true);\n  }, [refresh]); // setRefresh(true);\n\n  const handlefavourite = key => {\n    //add to favourites\n    axios.post(\"http://localhost:4000/buyer/addfavourite\", {\n      _id: key,\n      email: ls.get(\"email\")\n    }).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handlefilter = props => {\n    //filter according to search keyword irrespective of case\n    var today = new Date();\n    var time = today.getHours() + \":\" + today.getMinutes();\n    array1 = array1.filter(item => {\n      var flag = false;\n\n      for (var i = 0; i < shoptimings.length; i++) {\n        if (item.manageremail === shoptimings[i].email && shoptimings[i].opentime <= time && shoptimings[i].closetime >= time) {\n          flag = true;\n        }\n      }\n\n      return flag;\n    });\n    array3 = array0.filter(item => !array1.includes(item));\n    array2 = array1;\n\n    if (search !== \"\") {\n      array2 = array2.filter(item => item.itemname.toLowerCase().includes(search.toLowerCase()));\n    } //filter according to veg and nonveg\n\n\n    if (vegtrue === true && nonvegtrue === false) {\n      array2 = array2.filter(item => item.veg === true);\n    } else if (vegtrue === false && nonvegtrue === true) {\n      array2 = array2.filter(item => item.veg === false);\n    } // //filter according to price\n\n\n    if (minprice !== \"\" && maxprice !== \"\") {\n      array2 = array2.filter(item => item.price >= minprice && item.price <= maxprice);\n    } else if (minprice !== \"\") {\n      array2 = array2.filter(item => item.price >= minprice);\n    } else if (maxprice !== \"\") {\n      array2 = array2.filter(item => item.price <= maxprice);\n    } else if (minprice === \"\" && maxprice === \"\") {\n      array2 = array2.filter(item => item.price >= 0 && item.price <= 100000);\n    } // //filter according to shopname\n\n\n    if (selectedshopnames.length !== 0) {\n      array2 = array2.filter(item => selectedshopnames.includes(item.shopname));\n    } //filter accoring to tags\n\n\n    if (selectedtags.length !== 0) {\n      array2 = array2.filter(item => {\n        var flag = false;\n\n        for (var i = 0; i < item.tags.length; i++) {\n          if (selectedtags.includes(item.tags[i])) {\n            flag = true;\n          }\n        }\n\n        return flag;\n      });\n    }\n\n    if (props === 1) //ascending by price\n      array2 = array2.sort((a, b) => a.price - b.price);else if (props === 2) //descending by price\n      array2 = array2.sort((a, b) => b.price - a.price);else if (props === 3) //ascending by rating\n      array2 = array2.sort((a, b) => a.rating - b.rating);else if (props === 4) //descending by rating\n      array2 = array2.sort((a, b) => b.rating - a.rating); // Filter out only open shops\n    //Store rest of the data in array3\n    //setSortedMenu(array2);\n    // setSortedMenu2(array3);  \n  };\n\n  return (//Wait until refresh is true\n    {\n      refresh\n    } && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)\n  );\n}\n\n_s(Myitem, \"So9Hw+1PxHg9bfI/Us104ORW6JU=\");\n\n_c2 = Myitem;\n\nfunction SimpleDialog(props) {\n  _s2();\n\n  const {\n    onClose,\n    selectedValue,\n    open\n  } = props;\n  const [quantity, setQuantity] = useState(1);\n  const [itemname, setItemname] = useState(\"\");\n  const [shopname, setShopname] = useState(\"\");\n  const [vendoremail, setVendoremail] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [addonname, setAddonname] = useState([]);\n  const [addonprice, setAddonprice] = useState([]);\n  const [selectedaddonname, setSelectedaddonname] = useState([]);\n  const [selectedaddonprice, setSelectedaddonprice] = useState([]);\n  const [totalprice, setTotalprice] = useState(0);\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handlebuy = () => {\n    //get time in int\n    const time = new Date().getTime(); // convert quantity to int\n\n    const q = parseInt(quantity);\n    var p = parseInt(price); // run loop on addonprice\n\n    for (let i = 0; i < selectedaddonprice.length; i++) {\n      // convert addonprice to int\n      const ap = parseInt(selectedaddonprice[i]); // add addonprice to p\n\n      p = p + ap;\n    } // add quantity to p\n\n\n    p = p * q;\n\n    if (p > ls.get(\"wallet\")) {\n      alert(\"Insufficient Balance\");\n      onClose();\n    } else {\n      console.log({\n        itemname: itemname,\n        shopname: shopname,\n        price: price,\n        addonname: selectedaddonname,\n        addonprice: selectedaddonprice,\n        quantity: q,\n        totalprice: p,\n        time: time\n      });\n      axios.post(\"http://localhost:4000/buyer/orderitem\", {\n        item_id: selectedValue,\n        itemname: itemname,\n        vendoremail: vendoremail,\n        shopname: shopname,\n        buyeremail: ls.get(\"email\"),\n        buyername: ls.get(\"username\"),\n        placedtime: time,\n        quantity: q,\n        addonname: selectedaddonname,\n        addonprice: selectedaddonprice,\n        totalprice: p\n      }).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      }); //deduct money\n\n      axios.post(\"http://localhost:4000/buyer/deductmoney\", {\n        email: ls.get(\"email\"),\n        amount: p\n      }).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n      onClose();\n    }\n  };\n\n  const [refresh, setRefresh] = useState(false);\n  useEffect(() => {\n    axios.post(\"http://localhost:4000/buyer/getitem\", {\n      _id: selectedValue\n    }).then(res => {\n      setItemname(res.data.itemname);\n      setShopname(res.data.shopname);\n      setPrice(res.data.price);\n      setAddonname(res.data.addonname);\n      setAddonprice(res.data.addonprice);\n      setVendoremail(res.data.manageremail);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    if (selectedValue === \"\" || selectedValue === undefined) {\n      setRefresh(!refresh);\n    }\n  }, [refresh]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"A few more steps...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"ItemName\",\n          variant: \"outlined\",\n          value: itemname,\n          InputProps: {\n            readOnly: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"ShopName\",\n          variant: \"outlined\",\n          value: shopname,\n          InputProps: {\n            readOnly: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Price\",\n          variant: \"outlined\",\n          value: price,\n          InputProps: {\n            readOnly: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"quantity\",\n          label: \"Quantity\",\n          type: \"number\",\n          variant: \"outlined\",\n          defaultValue: 1,\n          onChange: e => {\n            setQuantity(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-outlined-label\",\n            children: \"AddOns\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-simple-select-outlined-label\",\n            id: \"demo-simple-select-outlined\",\n            multiple: true,\n            value: selectedaddonname,\n            onChange: e => {\n              setSelectedaddonname(e.target.value); // Set selectedaddonprice as the same index as selectedaddonname\n\n              setSelectedaddonprice(e.target.value.map(addon => {\n                return addonprice[addonname.indexOf(addon)];\n              }));\n            },\n            label: \"AddOns\",\n            variant: \"outlined\",\n            children: addonname.map(addon => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: addon,\n              children: addon\n            }, addon, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handlebuy,\n      children: \"Buy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 385,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(SimpleDialog, \"wUsPwNzkySTK8d9h8V/e7YQdc6I=\");\n\n_c3 = SimpleDialog;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Print\");\n$RefreshReg$(_c2, \"Myitem\");\n$RefreshReg$(_c3, \"SimpleDialog\");","map":{"version":3,"sources":["/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/BuyerDashboard.js"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useEffect","useState","ls","set","axios","Button","Box","Stack","InputLabel","MenuItem","FormControl","Select","createTheme","deepOrange","yellow","Chip","OutlinedInput","TextField","PropTypes","DialogTitle","Dialog","Checkbox","FormGroup","FormControlLabel","Rating","Fav","AppBar","Toolbar","IconButton","MenuIcon","Typography","SimpleDialog","propTypes","onClose","func","isRequired","open","bool","selectedValue","string","Print","f","array0","array1","array2","array3","shoptimings","Myitem","menu","setMenu","refresh","setRefresh","search","setSearch","minprice","setMinPrice","maxprice","setMaxPrice","setOpen","setSelectedValue","vegtrue","setVegtrue","nonvegtrue","setNonvegtrue","shopnames","setShopnames","tags","setTags","selectedshopnames","setSelectedshopnames","selectedtags","setSelectedtags","wallet","setWallet","meh","setMeh","handleClickOpen","props","console","log","handleClose","value","post","then","res","data","map","item","shopname","Set","arrtags","forEach","i","length","push","xtags","catch","err","email","get","handlefilter","handlefavourite","key","_id","today","Date","time","getHours","getMinutes","filter","flag","manageremail","opentime","closetime","includes","itemname","toLowerCase","veg","price","sort","a","b","rating","quantity","setQuantity","setItemname","setShopname","vendoremail","setVendoremail","setPrice","addonname","setAddonname","addonprice","setAddonprice","selectedaddonname","setSelectedaddonname","selectedaddonprice","setSelectedaddonprice","totalprice","setTotalprice","handlebuy","getTime","q","parseInt","p","ap","alert","item_id","buyeremail","buyername","placedtime","amount","undefined","readOnly","e","target","addon","indexOf"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useEffect, useState } from \"react\";\nimport ls, { set } from \"local-storage\";\nimport axios from \"axios\";\nimport { Button } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { createTheme } from \"@mui/material/styles\";\nimport { deepOrange } from \"@mui/material/colors\";\nimport { yellow } from \"@mui/material/colors\";\nimport Chip from \"@mui/material/Chip\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport { TextField } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Dialog from \"@mui/material/Dialog\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Rating from \"@mui/material/Rating\";\nimport Fav from \"./Favourites\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Typography from \"@mui/material/Typography\";\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\nfunction Print() {\n  return <div>Meh...</div>;\n}\nvar f = 0;\nvar array0 = [];\nvar array1 = [];\nvar array2 = [];\nvar array3 = [];\nvar shoptimings = []; //shopname, openingtime, closingtime\n\nexport default function Myitem() {\n  const [menu, setMenu] = useState([]);\n\n  const [refresh, setRefresh] = useState(false);\n\n  const [search, setSearch] = useState(\"\");\n  const [minprice, setMinPrice] = useState(0);\n  const [maxprice, setMaxPrice] = useState(1000);\n\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  const [vegtrue, setVegtrue] = useState(true);\n  const [nonvegtrue, setNonvegtrue] = useState(true);\n\n  const [shopnames, setShopnames] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [selectedshopnames, setSelectedshopnames] = useState([]);\n  const [selectedtags, setSelectedtags] = useState([]);\n\n  const [wallet, setWallet] = useState(0);\n\n  const [meh, setMeh] = useState(false);\n\n  const handleClickOpen = (props) => {\n    // console.log(props);\n    //set selected value as props\n    setSelectedValue(props);\n    console.log(selectedValue);\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  // Fill up the rows array with data.\n  useEffect(() => {\n    // Get all documents from the database for item for the particular vendor\n    axios\n      .post(\"http://localhost:4000/buyer/showmenu\")\n      .then((res) => {\n        setMenu(res.data);\n        array0 = res.data; //original\n        array1 = res.data; //originaal open\n        array2 = res.data; // original open filtered\n        //array3 = res.data; \n\n        setShopnames(res.data.map((item) => item.shopname));\n        //Remove duplicates\n        const shopnames = [...new Set(res.data.map((item) => item.shopname))];\n        setShopnames(shopnames);\n        //List of tags\n        var arrtags = [];\n        res.data.forEach((item) => {\n          for (var i = 0; i < item.tags.length; i++) {\n            arrtags.push(item.tags[i]);\n          }\n        });\n        //Remove duplicates from tags\n        const xtags = [...new Set(arrtags)];\n        setTags(xtags);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    axios\n      .post(\"http://localhost:4000/buyer/walletdetails\", {\n        email: ls.get(\"email\"),\n      })\n      .then((res) => {\n        setWallet(res.data.wallet);\n        ls.set(\"wallet\", res.data.wallet);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    //Save opening and closing time of shops in arrays\n    axios\n      .post(\"http://localhost:4000/buyer/shoptimings\")\n      .then((res) => {\n        shoptimings = res.data;\n        console.log(shoptimings);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    // var today = new Date();\n    // var time = today.getHours() + \":\" + today.getMinutes();\n\n    // array1 = array1.filter((item) => {\n    //   var flag = false;\n    //   for (var i = 0; i < shoptimings.length; i++) {\n    //     if (\n    //       item.manageremail === shoptimings[i].email &&\n    //       shoptimings[i].opentime <= time &&\n    //       shoptimings[i].closetime >= time\n    //     ) {\n    //       flag = true;\n    //     }\n    //   }\n    //   return flag;\n    // });\n\n    // array3 = array0.filter((item) => !array1.includes(item));\n\n    // setSortedMenu(array1);\n    // setSortedMenu2(array3);\n\n    handlefilter(0);\n\n  //  setRefresh(true);\n  }, [refresh]);\n\n  // setRefresh(true);\n  const handlefavourite = (key) => {\n    //add to favourites\n    axios\n      .post(\"http://localhost:4000/buyer/addfavourite\", {\n        _id: key,\n        email: ls.get(\"email\"),\n      })\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handlefilter = (props) => {\n    //filter according to search keyword irrespective of case\n    var today = new Date();\n    var time = today.getHours() + \":\" + today.getMinutes();\n\n    array1 = array1.filter((item) => {\n      var flag = false;\n      for (var i = 0; i < shoptimings.length; i++) {\n        if (\n          item.manageremail === shoptimings[i].email &&\n          shoptimings[i].opentime <= time &&\n          shoptimings[i].closetime >= time\n        ) {\n          flag = true;\n        }\n      }\n      return flag;\n    });\n\n    array3 = array0.filter((item) => !array1.includes(item));\n    array2 = array1;\n    if (search !== \"\") {\n      array2 = array2.filter((item) =>\n        item.itemname.toLowerCase().includes(search.toLowerCase())\n      );\n    }\n\n    //filter according to veg and nonveg\n    if (vegtrue === true && nonvegtrue === false) {\n      array2 = array2.filter((item) => item.veg === true);\n    } else if (vegtrue === false && nonvegtrue === true) {\n      array2 = array2.filter((item) => item.veg === false);\n    }\n    // //filter according to price\n    if (minprice !== \"\" && maxprice !== \"\") {\n      array2 = array2.filter(\n        (item) => item.price >= minprice && item.price <= maxprice\n      );\n    } else if (minprice !== \"\") {\n      array2 = array2.filter((item) => item.price >= minprice);\n    } else if (maxprice !== \"\") {\n      array2 = array2.filter((item) => item.price <= maxprice);\n    } else if (minprice === \"\" && maxprice === \"\") {\n      array2 = array2.filter((item) => item.price >= 0 && item.price <= 100000);\n    }\n    // //filter according to shopname\n    if (selectedshopnames.length !== 0) {\n      array2 = array2.filter((item) =>\n        selectedshopnames.includes(item.shopname)\n      );\n    }\n    //filter accoring to tags\n    if (selectedtags.length !== 0) {\n      array2 = array2.filter((item) => {\n        var flag = false;\n        for (var i = 0; i < item.tags.length; i++) {\n          if (selectedtags.includes(item.tags[i])) {\n            flag = true;\n          }\n        }\n        return flag;\n      });\n    }\n\n    if (props === 1)\n      //ascending by price\n      array2 = array2.sort((a, b) => a.price - b.price);\n    else if (props === 2)\n      //descending by price\n      array2 = array2.sort((a, b) => b.price - a.price);\n    else if (props === 3)\n      //ascending by rating\n      array2 = array2.sort((a, b) => a.rating - b.rating);\n    else if (props === 4)\n      //descending by rating\n      array2 = array2.sort((a, b) => b.rating - a.rating);\n\n    // Filter out only open shops\n    //Store rest of the data in array3\n\n    //setSortedMenu(array2);\n    // setSortedMenu2(array3);  \n  };\n  return (\n    //Wait until refresh is true\n    { refresh } && (\n      <div>\n      </div>\n    )\n\n  );\n}\n\nfunction SimpleDialog(props) {\n  const { onClose, selectedValue, open } = props;\n  const [quantity, setQuantity] = useState(1);\n  const [itemname, setItemname] = useState(\"\");\n  const [shopname, setShopname] = useState(\"\");\n  const [vendoremail, setVendoremail] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [addonname, setAddonname] = useState([]);\n  const [addonprice, setAddonprice] = useState([]);\n  const [selectedaddonname, setSelectedaddonname] = useState([]);\n  const [selectedaddonprice, setSelectedaddonprice] = useState([]);\n  const [totalprice, setTotalprice] = useState(0);\n  const handleClose = () => {\n    onClose();\n  };\n  const handlebuy = () => {\n    //get time in int\n    const time = new Date().getTime();\n    // convert quantity to int\n    const q = parseInt(quantity);\n    var p = parseInt(price);\n    // run loop on addonprice\n    for (let i = 0; i < selectedaddonprice.length; i++) {\n      // convert addonprice to int\n      const ap = parseInt(selectedaddonprice[i]);\n      // add addonprice to p\n      p = p + ap;\n    }\n    // add quantity to p\n    p = p * q;\n    if (p > ls.get(\"wallet\")) {\n      alert(\"Insufficient Balance\");\n      onClose();\n    } else {\n      console.log({\n        itemname: itemname,\n        shopname: shopname,\n        price: price,\n        addonname: selectedaddonname,\n        addonprice: selectedaddonprice,\n        quantity: q,\n        totalprice: p,\n        time: time,\n      });\n      axios\n        .post(\"http://localhost:4000/buyer/orderitem\", {\n          item_id: selectedValue,\n          itemname: itemname,\n          vendoremail: vendoremail,\n          shopname: shopname,\n          buyeremail: ls.get(\"email\"),\n          buyername: ls.get(\"username\"),\n          placedtime: time,\n          quantity: q,\n          addonname: selectedaddonname,\n          addonprice: selectedaddonprice,\n          totalprice: p,\n        })\n        .then((res) => {\n          console.log(res);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      //deduct money\n      axios\n        .post(\"http://localhost:4000/buyer/deductmoney\", {\n          email: ls.get(\"email\"),\n          amount: p,\n        })\n        .then((res) => {\n          console.log(res);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      onClose();\n    }\n  };\n\n  const [refresh, setRefresh] = useState(false);\n\n  useEffect(() => {\n    axios\n      .post(\"http://localhost:4000/buyer/getitem\", {\n        _id: selectedValue,\n      })\n      .then((res) => {\n        setItemname(res.data.itemname);\n        setShopname(res.data.shopname);\n        setPrice(res.data.price);\n        setAddonname(res.data.addonname);\n        setAddonprice(res.data.addonprice);\n        setVendoremail(res.data.manageremail);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    if (selectedValue === \"\" || selectedValue === undefined) {\n      setRefresh(!refresh);\n    }\n  }, [refresh]);\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>A few more steps...</DialogTitle>\n      <br></br>\n      {/* Details of the product */}\n      {/* {selectedValue} */}\n      <Box>\n        <Stack spacing={2}>\n          <TextField\n            id=\"outlined-basic\"\n            label=\"ItemName\"\n            variant=\"outlined\"\n            value={itemname}\n            InputProps={{\n              readOnly: true,\n            }}\n          />\n          <TextField\n            id=\"outlined-basic\"\n            label=\"ShopName\"\n            variant=\"outlined\"\n            value={shopname}\n            InputProps={{\n              readOnly: true,\n            }}\n          />\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Price\"\n            variant=\"outlined\"\n            value={price}\n            InputProps={{\n              readOnly: true,\n            }}\n          />\n          <TextField\n            id=\"quantity\"\n            label=\"Quantity\"\n            type=\"number\"\n            variant=\"outlined\"\n            defaultValue={1}\n            onChange={(e) => {\n              setQuantity(e.target.value);\n            }}\n          />\n          {/* Multi select AddOns */}\n          <FormControl variant=\"outlined\">\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              AddOns\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              multiple\n              value={selectedaddonname}\n              onChange={(e) => {\n                setSelectedaddonname(e.target.value);\n                // Set selectedaddonprice as the same index as selectedaddonname\n                setSelectedaddonprice(\n                  e.target.value.map((addon) => {\n                    return addonprice[addonname.indexOf(addon)];\n                  })\n                );\n              }}\n              label=\"AddOns\"\n              variant=\"outlined\"\n            >\n              {addonname.map((addon) => (\n                <MenuItem key={addon} value={addon}>\n                  {addon}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Stack>\n      </Box>\n      <br></br>\n      <Button variant=\"contained\" color=\"primary\" onClick={handlebuy}>\n        Buy\n      </Button>\n      {/* Set quantity to order */}\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}