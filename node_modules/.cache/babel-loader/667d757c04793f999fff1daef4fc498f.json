{"ast":null,"code":"var _jsxFileName = \"/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/BuyerDashboard.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useEffect, useState } from \"react\";\nimport ls from \"local-storage\";\nimport axios from \"axios\";\nimport { Button } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { createTheme } from \"@mui/material/styles\";\nimport { deepOrange } from \"@mui/material/colors\";\nimport { yellow } from \"@mui/material/colors\";\nimport Chip from \"@mui/material/Chip\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport { TextField } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Dialog from \"@mui/material/Dialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.object.isRequired\n};\nexport default function Myitem() {\n  _s();\n\n  const [menu, setMenu] = useState([]);\n  const [sortedmenu, setSortedMenu] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState({});\n\n  const handleClickOpen = props => {\n    // console.log(props);\n    //set selected value as props\n    setSelectedValue(props);\n    console.log(selectedValue);\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  }; // Fill up the rows array with data.\n\n\n  useEffect(() => {\n    // Get all documents from the database for item for the particular vendor\n    axios.post(\"http://localhost:4000/buyer/showmenu\").then(res => {\n      setMenu(res.data);\n      setSortedMenu(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [refresh]);\n\n  const handlebuy = key => {\n    //log the id, quantity, addons\n    var quantity = document.getElementById(key).value;\n    console.log(key);\n    console.log(quantity);\n    console.log(ls.get(\"email\"));\n  };\n\n  return (\n    /*#__PURE__*/\n    //Favourites\n    //Filters\n    //Menu\n    _jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"ItemName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"ShopName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Veg/Non-Veg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Tags\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"AddOns\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: menu.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                \"&:last-child td, &:last-child th\": {\n                  border: 0\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: row.itemname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: row.image,\n                  alt: \"food\",\n                  style: {\n                    width: \"120px\",\n                    height: \"100px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.shopname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: [\"Rs.\", row.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.veg === true ? \"Veg\" : \"Non-Veg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.tags.map(tag => /*#__PURE__*/_jsxDEV(\"div\", {\n                  spacing: 2,\n                  children: /*#__PURE__*/_jsxDEV(Stack, {\n                    spacing: 2,\n                    children: /*#__PURE__*/_jsxDEV(Chip, {\n                      label: tag\n                    }, tag, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 23\n                  }, this)\n                }, tag, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.addonname.map((addon, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  spacing: 2,\n                  children: /*#__PURE__*/_jsxDEV(Stack, {\n                    spacing: 2,\n                    children: /*#__PURE__*/_jsxDEV(Chip, {\n                      label: `${addon}: Rs.${row.addonprice[index]}`\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 23\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"secondary\",\n                  onClick: () => handleClickOpen(row),\n                  children: \"Buy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this)]\n            }, row._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SimpleDialog, {\n        selectedValue: selectedValue,\n        open: open,\n        onClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(Myitem, \"evqbeGGdRZS9//C7o//1FuHTVjQ=\");\n\n_c = Myitem;\n\nfunction SimpleDialog(props) {\n  _s2();\n\n  const {\n    onClose,\n    selectedValue,\n    open\n  } = props;\n  const [quantity, setQuantity] = useState(1);\n  const [itemname, setItemname] = useState(selectedValue.itemname);\n  const [shopname, setShopname] = useState(selectedValue.shopname);\n  const [price, setPrice] = useState(0);\n  const [addonname, setAddonname] = useState(selectedValue.addonname);\n  const [addonprice, setAddonprice] = useState(selectedValue.addonprice);\n  const [totalprice, setTotalprice] = useState(0);\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const [refresh, setRefresh] = useState(false); // useEffect(() => {\n  //   axios\n  //     .post(\"http://localhost:4000/buyer/getitem\", {\n  //       _id: selectedValue,\n  //     })\n  //     .then((res) => {\n  //       setItemname(res.data.itemname);\n  //       setShopname(res.data.shopname);\n  //       setPrice(res.data.price);\n  //       setAddonname(res.data.addonname);\n  //       setAddonprice(res.data.addonprice);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  //     setRefresh(true);\n  // }, [refresh]);\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"A few more steps...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), selectedValue, /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"ItemName\",\n          variant: \"outlined\",\n          value: itemname,\n          InputProps: {\n            readOnly: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"ShopName\",\n          variant: \"outlined\",\n          value: shopname,\n          InputProps: {\n            readOnly: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Price\",\n        variant: \"outlined\",\n        value: price,\n        InputProps: {\n          readOnly: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"quantity\",\n        label: \"Quantity\",\n        type: \"number\",\n        variant: \"outlined\",\n        defaultValue: 1,\n        onChange: e => {\n          setQuantity(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleClose,\n      children: \"Buy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(SimpleDialog, \"+KbJ8KAdawbRIT6SB2xVsnyhuTM=\");\n\n_c2 = SimpleDialog;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Myitem\");\n$RefreshReg$(_c2, \"SimpleDialog\");","map":{"version":3,"sources":["/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/BuyerDashboard.js"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useEffect","useState","ls","axios","Button","Box","Stack","InputLabel","MenuItem","FormControl","Select","createTheme","deepOrange","yellow","Chip","OutlinedInput","TextField","PropTypes","DialogTitle","Dialog","SimpleDialog","propTypes","onClose","func","isRequired","open","bool","selectedValue","object","Myitem","menu","setMenu","sortedmenu","setSortedMenu","refresh","setRefresh","setOpen","setSelectedValue","handleClickOpen","props","console","log","handleClose","value","post","then","res","data","catch","err","handlebuy","key","quantity","document","getElementById","get","minWidth","map","row","border","itemname","image","width","height","shopname","price","veg","tags","tag","addonname","addon","index","addonprice","_id","setQuantity","setItemname","setShopname","setPrice","setAddonname","setAddonprice","totalprice","setTotalprice","readOnly","e","target"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useEffect, useState } from \"react\";\nimport ls from \"local-storage\";\nimport axios from \"axios\";\nimport { Button } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { createTheme } from \"@mui/material/styles\";\nimport { deepOrange } from \"@mui/material/colors\";\nimport { yellow } from \"@mui/material/colors\";\nimport Chip from \"@mui/material/Chip\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport { TextField } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Dialog from \"@mui/material/Dialog\";\n\n\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.object.isRequired,\n};\n\nexport default function Myitem() {\n  const [menu, setMenu] = useState([]);\n  const [sortedmenu, setSortedMenu] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState({});\n\n  const handleClickOpen = (props) => {\n    // console.log(props);\n    //set selected value as props\n    setSelectedValue(props);\n    console.log(selectedValue);\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  // Fill up the rows array with data.\n  useEffect(() => {\n    // Get all documents from the database for item for the particular vendor\n    axios\n      .post(\"http://localhost:4000/buyer/showmenu\")\n      .then((res) => {\n        setMenu(res.data);\n        setSortedMenu(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [refresh]);\n\n  const handlebuy = (key) => {\n    //log the id, quantity, addons\n    var quantity = document.getElementById(key).value;\n    console.log(key);\n    console.log(quantity);\n    console.log(ls.get(\"email\"));\n  };\n\n  return (\n    //Favourites\n\n    //Filters\n\n    //Menu\n    <Box>\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ItemName</TableCell>\n              <TableCell align=\"center\">Image</TableCell>\n              <TableCell align=\"center\">ShopName</TableCell>\n              <TableCell align=\"center\">Price</TableCell>\n              <TableCell align=\"center\">Veg/Non-Veg</TableCell>\n              <TableCell align=\"center\">Tags</TableCell>\n              {/* Buying Stages */}\n              <TableCell align=\"center\">AddOns</TableCell>\n              <TableCell align=\"center\"></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {menu.map((row) => (\n              <TableRow\n                key={row._id}\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.itemname}\n                </TableCell>\n                <TableCell align=\"center\">\n                  <img\n                    src={row.image}\n                    alt=\"food\"\n                    style={{ width: \"120px\", height: \"100px\" }}\n                  />\n                </TableCell>\n                <TableCell align=\"center\">{row.shopname}</TableCell>\n                <TableCell align=\"center\">Rs.{row.price}</TableCell>\n                <TableCell align=\"center\">\n                  {row.veg === true ? \"Veg\" : \"Non-Veg\"}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {row.tags.map((tag) => (\n                    <div spacing={2} key={tag}>\n                      <Stack spacing={2}>\n                        <Chip label={tag} key={tag} />\n                      </Stack>\n                    </div>\n                  ))}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {/* <FormControl fullWidth>\n                  <InputLabel id=\"demo-simple-select-label\">List</InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    // value={row.addonname}\n                    label=\"List\"\n                  >\n                    //map addonname and addonprice simultaneously\n                    {row.addonname.map((addon, index) => (\n                      <MenuItem key={index}>\n                        {addon}: Rs.\n                        {row.addonprice[index]}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl> */}\n                  {row.addonname.map((addon, index) => (\n                    <div spacing={2} key={index}>\n                      <Stack spacing={2}>\n                        {/* Addonname and addonprice */}\n                        <Chip\n                          label={`${addon}: Rs.${row.addonprice[index]}`}\n                          key={index}\n                        />\n                      </Stack>\n                    </div>\n                  ))}\n                </TableCell>\n                <TableCell align=\"center\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={() => handleClickOpen(row)}\n                  >\n                    Buy\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <SimpleDialog\n        selectedValue={selectedValue}\n        open={open}\n        onClose={handleClose}\n      />\n    </Box>\n  );\n}\n\nfunction SimpleDialog(props) {\n  const { onClose, selectedValue, open } = props;\n  const [quantity, setQuantity] = useState(1);\n  const [itemname, setItemname] = useState(selectedValue.itemname);\n  const [shopname, setShopname] = useState(selectedValue.shopname);\n  const [price, setPrice] = useState(0);\n  const [addonname, setAddonname] = useState(selectedValue.addonname);\n  const [addonprice, setAddonprice] = useState(selectedValue.addonprice);\n  const [totalprice, setTotalprice] = useState(0);\n  const handleClose = () => {\n    onClose();\n  };\n  const [refresh, setRefresh] = useState(false);\n\n  // useEffect(() => {\n  //   axios\n  //     .post(\"http://localhost:4000/buyer/getitem\", {\n  //       _id: selectedValue,\n  //     })\n  //     .then((res) => {\n  //       setItemname(res.data.itemname);\n  //       setShopname(res.data.shopname);\n  //       setPrice(res.data.price);\n  //       setAddonname(res.data.addonname);\n  //       setAddonprice(res.data.addonprice);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  //     setRefresh(true);\n  // }, [refresh]);\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>A few more steps...</DialogTitle>\n      <br></br>\n      {/* Details of the product */}\n      {selectedValue}\n      <Box>\n        <Stack spacing={2}>\n          <TextField\n            id=\"outlined-basic\"\n            label=\"ItemName\"\n            variant=\"outlined\"\n            value={itemname}\n            InputProps={{\n              readOnly: true,\n            }}\n          />\n          <TextField\n            id=\"outlined-basic\"\n            label=\"ShopName\"\n            variant=\"outlined\"\n            value={shopname}\n            InputProps={{\n              readOnly: true,\n            }}\n          />\n        </Stack>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Price\"\n          variant=\"outlined\"\n          value={price}\n          InputProps={{\n            readOnly: true,\n          }}\n        />\n        <TextField\n          id=\"quantity\"\n          label=\"Quantity\"\n          type=\"number\"\n          variant=\"outlined\"\n          defaultValue={1}\n          onChange={(e) => {\n            setQuantity(e.target.value);\n          }}\n        />\n      </Box>\n      <br></br>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleClose}>\n        Buy\n      </Button>\n      {/* Set quantity to order */}\n    </Dialog>\n  );\n}"]},"metadata":{},"sourceType":"module"}