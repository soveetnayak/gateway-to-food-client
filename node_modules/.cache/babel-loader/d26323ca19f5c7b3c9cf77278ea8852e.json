{"ast":null,"code":"var _jsxFileName = \"/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/BuyerDashboard.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useEffect, useState } from \"react\";\nimport ls from \"local-storage\";\nimport axios from \"axios\";\nimport { Button } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { createTheme } from \"@mui/material/styles\";\nimport { deepOrange } from \"@mui/material/colors\";\nimport { yellow } from \"@mui/material/colors\";\nimport Chip from \"@mui/material/Chip\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport { TextField } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Dialog from \"@mui/material/Dialog\";\nimport Checkbox from '@mui/material/Checkbox';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};\nexport default function Myitem() {\n  _s();\n\n  const [menu, setMenu] = useState([]);\n  const [sortedmenu, setSortedMenu] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [minprice, setMinPrice] = useState(0);\n  const [maxprice, setMaxPrice] = useState(1000);\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  const [vegtrue, setVegtrue] = useState(true);\n  const [nonvegtrue, setNonvegtrue] = useState(true);\n\n  const handleClickOpen = props => {\n    // console.log(props);\n    //set selected value as props\n    setSelectedValue(props);\n    console.log(selectedValue);\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  }; // Fill up the rows array with data.\n\n\n  useEffect(() => {\n    // Get all documents from the database for item for the particular vendor\n    axios.post(\"http://localhost:4000/buyer/showmenu\").then(res => {\n      setMenu(res.data);\n      setSortedMenu(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [refresh]);\n\n  const handlebuy = key => {\n    //log the id, quantity, addons\n    var quantity = document.getElementById(key).value;\n    console.log(key);\n    console.log(quantity);\n    console.log(ls.get(\"email\"));\n  };\n\n  const handlefavourite = key => {\n    //add to favourites\n    axios.post(\"http://localhost:4000/buyer/addfavourite\", {\n      _id: key,\n      email: ls.get(\"email\")\n    }).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }; // const handlecheckboxes = (prop, bool) => {\n  //   if (prop === \"veg\") {\n  //     setVegtrue(bool);\n  //   } else if (prop === \"nonveg\") {\n  //     setNonvegtrue(bool);\n  //   }\n  //   if((vegtrue && nonvegtrue) || (!vegtrue && !nonvegtrue)){\n  //     //funny\n  //   }\n  //   else if(vegtrue){\n  //     setSortedMenu(sortedmenu.filter(item => item.veg === true));\n  //   }\n  //   else if(nonvegtrue){\n  //     setSortedMenu(sortedmenu.filter(item => item.veg === false));\n  //   }\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          \"& > :not(style)\": {\n            m: 1,\n            width: \"25ch\"\n          }\n        },\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Search\",\n          variant: \"outlined\",\n          onChange: e => {\n            if (e.target.value === \"\") {\n              setSortedMenu(menu);\n            } else {\n              setSearch(e.target.value);\n              setSortedMenu(sortedmenu.filter(item => {\n                return item.itemname.toLowerCase().includes(e.target.value.toLowerCase());\n              }));\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: vegtrue,\n              label: \"Veg\",\n              onChange: e => {\n                setVegtrue(e.target.checked);\n\n                if (e.target.checked) {\n                  setSortedMenu(sortedmenu.filter(item => {\n                    return item.veg === true;\n                  }));\n                }\n              },\n              inputProps: {\n                \"aria-label\": \"primary checkbox\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 11\n            }, this),\n            label: \"Veg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: nonvegtrue,\n              label: \"Non-Veg\",\n              onChange: e => {\n                setNonvegtrue(e.target.checked);\n\n                if (e.target.checked) {\n                  setSortedMenu(sortedmenu.filter(item => {\n                    return item.veg === false;\n                  }));\n                }\n              },\n              inputProps: {\n                \"aria-label\": \"primary checkbox\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 11\n            }, this),\n            label: \"Non-Veg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          \"& > :not(style)\": {\n            m: 1,\n            width: \"25ch\",\n            height: \"7ch\"\n          }\n        },\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Minimum Price\",\n          variant: \"outlined\",\n          type: \"number\",\n          onChange: e => {\n            setMinPrice(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Maximum Price\",\n          variant: \"outlined\",\n          type: \"number\",\n          onChange: e => {\n            setMaxPrice(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => {\n            setSortedMenu(sortedmenu.filter(item => {\n              return item.price >= minprice && item.price <= maxprice;\n            }));\n          },\n          children: \"Apply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          \"& > :not(style)\": {\n            m: 1,\n            width: \"25ch\",\n            height: \"7ch\"\n          }\n        },\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => {\n            setSortedMenu(sortedmenu.sort((a, b) => {\n              return a.price - b.price;\n            }));\n          },\n          children: \"Ascending by Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => {\n            setSortedMenu(sortedmenu.sort((a, b) => {\n              return b.price - a.price;\n            }));\n          },\n          children: \"Descending by Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => {\n            setSortedMenu(sortedmenu.sort((a, b) => {\n              return a.rating - b.rating;\n            }));\n          },\n          children: \"Ascending by Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => {\n            setSortedMenu(sortedmenu.sort((a, b) => {\n              return b.rating - a.rating;\n            }));\n          },\n          children: \"Descending by Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"ItemName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"ShopName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Veg/Non-Veg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Tags\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"AddOns\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: sortedmenu.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                \"&:last-child td, &:last-child th\": {\n                  border: 0\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: row.itemname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: row.image,\n                  alt: \"food\",\n                  style: {\n                    width: \"120px\",\n                    height: \"100px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.shopname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: [\"Rs.\", row.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.veg === true ? \"Veg\" : \"Non-Veg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.tags.map(tag => /*#__PURE__*/_jsxDEV(\"div\", {\n                  spacing: 2,\n                  children: /*#__PURE__*/_jsxDEV(Stack, {\n                    spacing: 2,\n                    children: /*#__PURE__*/_jsxDEV(Chip, {\n                      label: tag\n                    }, tag, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 354,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 25\n                  }, this)\n                }, tag, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.addonname.map((addon, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  spacing: 2,\n                  children: /*#__PURE__*/_jsxDEV(Stack, {\n                    spacing: 2,\n                    children: /*#__PURE__*/_jsxDEV(Chip, {\n                      label: `${addon}: Rs.${row.addonprice[index]}`\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 381,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 25\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"secondary\",\n                  onClick: () => handlefavourite(row._id),\n                  children: \"Add to Favourites\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"secondary\",\n                  onClick: () => handleClickOpen(row._id),\n                  children: \"Buy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 19\n              }, this)]\n            }, row._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SimpleDialog, {\n        selectedValue: selectedValue,\n        open: open,\n        onClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Myitem, \"rYeGDgED50/Qjy54ljffp/zsgIw=\");\n\n_c = Myitem;\n\nfunction SimpleDialog(props) {\n  _s2();\n\n  const {\n    onClose,\n    selectedValue,\n    open\n  } = props;\n  const [quantity, setQuantity] = useState(1);\n  const [itemname, setItemname] = useState(\"\");\n  const [shopname, setShopname] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [addonname, setAddonname] = useState([]);\n  const [addonprice, setAddonprice] = useState([]);\n  const [totalprice, setTotalprice] = useState(0);\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const [refresh, setRefresh] = useState(false);\n  useEffect(() => {\n    axios.post(\"http://localhost:4000/buyer/getitem\", {\n      _id: selectedValue\n    }).then(res => {\n      setItemname(res.data.itemname);\n      setShopname(res.data.shopname);\n      setPrice(res.data.price);\n      setAddonname(res.data.addonname);\n      setAddonprice(res.data.addonprice);\n    }).catch(err => {\n      console.log(err);\n    });\n    setRefresh(true);\n  }, [refresh]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"A few more steps...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 7\n    }, this), selectedValue, /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"ItemName\",\n          variant: \"outlined\",\n          value: itemname,\n          InputProps: {\n            readOnly: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"ShopName\",\n          variant: \"outlined\",\n          value: shopname,\n          InputProps: {\n            readOnly: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Price\",\n        variant: \"outlined\",\n        value: price,\n        InputProps: {\n          readOnly: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"quantity\",\n        label: \"Quantity\",\n        type: \"number\",\n        variant: \"outlined\",\n        defaultValue: 1,\n        onChange: e => {\n          setQuantity(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleClose,\n      children: \"Buy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 455,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(SimpleDialog, \"25aoJc8CF/UkVAOqmcEK1eFotYM=\");\n\n_c2 = SimpleDialog;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Myitem\");\n$RefreshReg$(_c2, \"SimpleDialog\");","map":{"version":3,"sources":["/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/BuyerDashboard.js"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useEffect","useState","ls","axios","Button","Box","Stack","InputLabel","MenuItem","FormControl","Select","createTheme","deepOrange","yellow","Chip","OutlinedInput","TextField","PropTypes","DialogTitle","Dialog","Checkbox","FormGroup","FormControlLabel","SimpleDialog","propTypes","onClose","func","isRequired","open","bool","selectedValue","string","Myitem","menu","setMenu","sortedmenu","setSortedMenu","refresh","setRefresh","search","setSearch","minprice","setMinPrice","maxprice","setMaxPrice","setOpen","setSelectedValue","vegtrue","setVegtrue","nonvegtrue","setNonvegtrue","handleClickOpen","props","console","log","handleClose","value","post","then","res","data","catch","err","handlebuy","key","quantity","document","getElementById","get","handlefavourite","_id","email","m","width","e","target","filter","item","itemname","toLowerCase","includes","checked","veg","height","price","sort","a","b","rating","minWidth","map","row","border","image","shopname","tags","tag","addonname","addon","index","addonprice","setQuantity","setItemname","setShopname","setPrice","setAddonname","setAddonprice","totalprice","setTotalprice","readOnly"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useEffect, useState } from \"react\";\nimport ls from \"local-storage\";\nimport axios from \"axios\";\nimport { Button } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { createTheme } from \"@mui/material/styles\";\nimport { deepOrange } from \"@mui/material/colors\";\nimport { yellow } from \"@mui/material/colors\";\nimport Chip from \"@mui/material/Chip\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport { TextField } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Dialog from \"@mui/material/Dialog\";\nimport Checkbox from '@mui/material/Checkbox';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\nexport default function Myitem() {\n  const [menu, setMenu] = useState([]);\n  const [sortedmenu, setSortedMenu] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [minprice, setMinPrice] = useState(0);\n  const [maxprice, setMaxPrice] = useState(1000);\n\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  const [vegtrue, setVegtrue] = useState(true);\n  const [nonvegtrue, setNonvegtrue] = useState(true);\n\n  const handleClickOpen = (props) => {\n    // console.log(props);\n    //set selected value as props\n    setSelectedValue(props);\n    console.log(selectedValue);\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  // Fill up the rows array with data.\n  useEffect(() => {\n    // Get all documents from the database for item for the particular vendor\n    axios\n      .post(\"http://localhost:4000/buyer/showmenu\")\n      .then((res) => {\n        setMenu(res.data);\n        setSortedMenu(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [refresh]);\n\n  const handlebuy = (key) => {\n    //log the id, quantity, addons\n    var quantity = document.getElementById(key).value;\n    console.log(key);\n    console.log(quantity);\n    console.log(ls.get(\"email\"));\n  };\n\n  const handlefavourite = (key) => { \n    //add to favourites\n    axios\n      .post(\"http://localhost:4000/buyer/addfavourite\", {\n        _id: key,\n        email: ls.get(\"email\"),\n      })\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // const handlecheckboxes = (prop, bool) => {\n  //   if (prop === \"veg\") {\n  //     setVegtrue(bool);\n  //   } else if (prop === \"nonveg\") {\n  //     setNonvegtrue(bool);\n  //   }\n\n  //   if((vegtrue && nonvegtrue) || (!vegtrue && !nonvegtrue)){\n  //     //funny\n  //   }\n  //   else if(vegtrue){\n  //     setSortedMenu(sortedmenu.filter(item => item.veg === true));\n  //   }\n  //   else if(nonvegtrue){\n  //     setSortedMenu(sortedmenu.filter(item => item.veg === false));\n\n  //   }\n  // };\n\n\n\n\n\n  return (\n    <div>\n      {/* Favourites */}\n\n      {/* Filters */}\n      <div>\n        <Box\n          component=\"form\"\n          sx={{\n            \"& > :not(style)\": { m: 1, width: \"25ch\" },\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Search\"\n              variant=\"outlined\"\n              onChange={(e) => {\n                if(e.target.value === \"\"){\n                  setSortedMenu(menu);\n                }\n                else{\n                setSearch(e.target.value);\n                setSortedMenu(\n                  sortedmenu.filter((item) => {\n                    return item.itemname\n                      .toLowerCase()\n                      .includes(e.target.value.toLowerCase());\n                  })\n                );\n                }\n              }}\n            />\n            <FormGroup>\n              <FormControlLabel \n                control={\n          <Checkbox\n            checked={vegtrue}\n            label=\"Veg\"\n            onChange={(e) => {\n              setVegtrue(e.target.checked);\n              if (e.target.checked) {\n                setSortedMenu(\n                  sortedmenu.filter((item) => {\n                    return item.veg === true;\n                  })\n                );\n              }\n            }}\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\n          />\n        }\n        label=\"Veg\"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={nonvegtrue}\n            label=\"Non-Veg\"\n            onChange={(e) => {\n              setNonvegtrue(e.target.checked);\n              if (e.target.checked) {\n                setSortedMenu(\n                  sortedmenu.filter((item) => {\n                    return item.veg === false;\n                  })\n                );\n              }\n            }}\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\n          />\n        }\n        label=\"Non-Veg\"\n      />\n        </FormGroup>\n        </Box>\n        <br />\n        {/* Price range having minimum and maximum values */}\n        <Box\n          component=\"form\"\n          sx={{\n            \"& > :not(style)\": { m: 1, width: \"25ch\", height: \"7ch\" },\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Minimum Price\"\n            variant=\"outlined\"\n            type=\"number\"\n            onChange={(e) => {\n              setMinPrice(e.target.value);\n            }}\n          />\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Maximum Price\"\n            variant=\"outlined\"\n            type=\"number\"\n            onChange={(e) => {\n              setMaxPrice(e.target.value);\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setSortedMenu(\n                sortedmenu.filter((item) => {\n                  return item.price >= minprice && item.price <= maxprice;\n                })\n              );\n            }}\n          >\n            Apply\n          </Button>\n        </Box>\n        <br />\n        <Box\n          component=\"form\"\n          sx={{\n            \"& > :not(style)\": { m: 1, width: \"25ch\", height: \"7ch\" },\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n          {/* Ascending by price button */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setSortedMenu(\n                sortedmenu.sort((a, b) => {\n                  return a.price - b.price;\n                })\n              );\n            }}\n          >\n            Ascending by Price\n          </Button>\n          {/* Descending by price button */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setSortedMenu(\n                sortedmenu.sort((a, b) => {\n                  return b.price - a.price;\n                })\n              );\n            }}\n          >\n            Descending by Price\n          </Button>\n          {/* Ascending by rating */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setSortedMenu(\n                sortedmenu.sort((a, b) => {\n                  return a.rating - b.rating;\n                })\n              );\n            }}\n          >\n            Ascending by Rating\n          </Button>\n          {/* Descending by rating */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setSortedMenu(\n                sortedmenu.sort((a, b) => {\n                  return b.rating - a.rating;\n                })\n              );\n            }}\n          >\n            Descending by Rating\n          </Button>\n        </Box>\n      </div>\n\n      {/* Menu */}\n      <Box>\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>ItemName</TableCell>\n                <TableCell align=\"center\">Image</TableCell>\n                <TableCell align=\"center\">ShopName</TableCell>\n                <TableCell align=\"center\">Price</TableCell>\n                <TableCell align=\"center\">Veg/Non-Veg</TableCell>\n                <TableCell align=\"center\">Tags</TableCell>\n                {/* Buying Stages */}\n                <TableCell align=\"center\">AddOns</TableCell>\n                <TableCell align=\"center\"></TableCell>\n                <TableCell align=\"center\"></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {sortedmenu.map((row) => (\n                <TableRow\n                  key={row._id}\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.itemname}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <img\n                      src={row.image}\n                      alt=\"food\"\n                      style={{ width: \"120px\", height: \"100px\" }}\n                    />\n                  </TableCell>\n                  <TableCell align=\"center\">{row.shopname}</TableCell>\n                  <TableCell align=\"center\">Rs.{row.price}</TableCell>\n                  <TableCell align=\"center\">\n                    {row.veg === true ? \"Veg\" : \"Non-Veg\"}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {row.tags.map((tag) => (\n                      <div spacing={2} key={tag}>\n                        <Stack spacing={2}>\n                          <Chip label={tag} key={tag} />\n                        </Stack>\n                      </div>\n                    ))}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {/* <FormControl fullWidth>\n                  <InputLabel id=\"demo-simple-select-label\">List</InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    // value={row.addonname}\n                    label=\"List\"\n                  >\n                    //map addonname and addonprice simultaneously\n                    {row.addonname.map((addon, index) => (\n                      <MenuItem key={index}>\n                        {addon}: Rs.\n                        {row.addonprice[index]}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl> */}\n                    {row.addonname.map((addon, index) => (\n                      <div spacing={2} key={index}>\n                        <Stack spacing={2}>\n                          {/* Addonname and addonprice */}\n                          <Chip\n                            label={`${addon}: Rs.${row.addonprice[index]}`}\n                            key={index}\n                          />\n                        </Stack>\n                      </div>\n                    ))}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={() => handlefavourite(row._id)}\n                    >\n                      Add to Favourites\n                    </Button>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={() => handleClickOpen(row._id)}\n                    >\n                      Buy\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <SimpleDialog\n          selectedValue={selectedValue}\n          open={open}\n          onClose={handleClose}\n        />\n      </Box>\n    </div>\n  );\n}\n\nfunction SimpleDialog(props) {\n  const { onClose, selectedValue, open } = props;\n  const [quantity, setQuantity] = useState(1);\n  const [itemname, setItemname] = useState(\"\");\n  const [shopname, setShopname] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [addonname, setAddonname] = useState([]);\n  const [addonprice, setAddonprice] = useState([]);\n  const [totalprice, setTotalprice] = useState(0);\n  const handleClose = () => {\n    onClose();\n  };\n  const [refresh, setRefresh] = useState(false);\n\n  useEffect(() => {\n    axios\n      .post(\"http://localhost:4000/buyer/getitem\", {\n        _id: selectedValue,\n      })\n      .then((res) => {\n        setItemname(res.data.itemname);\n        setShopname(res.data.shopname);\n        setPrice(res.data.price);\n        setAddonname(res.data.addonname);\n        setAddonprice(res.data.addonprice);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    setRefresh(true);\n  }, [refresh]);\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>A few more steps...</DialogTitle>\n      <br></br>\n      {/* Details of the product */}\n      {selectedValue}\n      <Box>\n        <Stack spacing={2}>\n          <TextField\n            id=\"outlined-basic\"\n            label=\"ItemName\"\n            variant=\"outlined\"\n            value={itemname}\n            InputProps={{\n              readOnly: true,\n            }}\n          />\n          <TextField\n            id=\"outlined-basic\"\n            label=\"ShopName\"\n            variant=\"outlined\"\n            value={shopname}\n            InputProps={{\n              readOnly: true,\n            }}\n          />\n        </Stack>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Price\"\n          variant=\"outlined\"\n          value={price}\n          InputProps={{\n            readOnly: true,\n          }}\n        />\n        <TextField\n          id=\"quantity\"\n          label=\"Quantity\"\n          type=\"number\"\n          variant=\"outlined\"\n          defaultValue={1}\n          onChange={(e) => {\n            setQuantity(e.target.value);\n          }}\n        />\n      </Box>\n      <br></br>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleClose}>\n        Buy\n      </Button>\n      {/* Set quantity to order */}\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}