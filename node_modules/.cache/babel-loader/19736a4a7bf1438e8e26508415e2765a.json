{"ast":null,"code":"var _jsxFileName = \"/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/vendor/Orders.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useEffect, useState } from \"react\";\nimport ls, { set } from \"local-storage\";\nimport axios from \"axios\";\nimport { Button } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createData(_id, ItemName, PlacedTime, Quantity, BuyerName, AddOns, Status) {\n  return {\n    _id,\n    ItemName,\n    PlacedTime,\n    Quantity,\n    BuyerName,\n    AddOns,\n    Status\n  };\n}\n\nconst initialrows = [createData(\"dgg\", \"Frozen yoghurt\", 159, 6.0, \"Me\", 24, \"ACCEPTED\"), createData(\"dfdg\", \"Frozen yoghurt\", 159, 6.0, \"Me\", 24, \"PLACED\")];\nexport default function BasicTable() {\n  _s();\n\n  const [rows, setRows] = useState(initialrows);\n  const [orders, setOrders] = useState([]);\n  const [sortedorders, setSortedOrders] = useState([]);\n  const [refresh, setRefresh] = useState(false); // Fill up the rows array with data.\n\n  useEffect(() => {\n    // Get all documents from the database for orders for the particular vendor\n    axios.post(\"http://localhost:4000/vendor/showorders\", {\n      manageremail: ls.get(\"email\")\n    }).then(response => {\n      setOrders(response.data);\n      setSortedOrders(response.data);\n      console.log(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [refresh]);\n\n  const handlenextstage = props => {\n    axios.post(\"http://localhost:4000/vendor/updateorderstatus\", {\n      _id: props._id,\n      aorr: \"a\"\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    setRefresh(!refresh);\n  };\n\n  const handlecancel = props => {\n    axios.post(\"http://localhost:4000/vendor/updateorderstatus\", {\n      _id: props._id,\n      aorr: \"r\"\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    setRefresh(!refresh);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 650\n      },\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"ItemName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"PlacedTime\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"BuyerName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"AddOns\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: orders.map(orders => /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            \"&:last-child td, &:last-child th\": {\n              border: 0\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: orders.itemname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: new Date(orders.placedtime).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: orders.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: orders.buyername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: orders.addonname.map(addons => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: addons\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: [\"Rs.\", orders.totalprice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: orders.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), orders.status === \"REJECTED\" || order.status === 'READY FOR PICKUP' || order.status === 'COMPLETED' ? /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              disabled: true,\n              children: \"Next Stage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => handlenextstage(orders),\n              children: \"Next stage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this), orders.status === \"PLACED\" ? /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => handlecancel(orders),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              disabled: true,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this)]\n        }, orders._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BasicTable, \"Zgn305ehVRMeeGksPNgc7cRCyHo=\");\n\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/vendor/Orders.js"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useEffect","useState","ls","set","axios","Button","Box","createData","_id","ItemName","PlacedTime","Quantity","BuyerName","AddOns","Status","initialrows","BasicTable","rows","setRows","orders","setOrders","sortedorders","setSortedOrders","refresh","setRefresh","post","manageremail","get","then","response","data","console","log","catch","error","handlenextstage","props","aorr","handlecancel","minWidth","map","border","itemname","Date","placedtime","toLocaleString","quantity","buyername","addonname","addons","totalprice","status","order"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useEffect, useState } from \"react\";\nimport ls, { set } from \"local-storage\";\nimport axios from \"axios\";\nimport { Button } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\n\nfunction createData(\n  _id,\n  ItemName,\n  PlacedTime,\n  Quantity,\n  BuyerName,\n  AddOns,\n  Status\n) {\n  return { _id, ItemName, PlacedTime, Quantity, BuyerName, AddOns, Status };\n}\n\nconst initialrows = [\n  createData(\"dgg\", \"Frozen yoghurt\", 159, 6.0, \"Me\", 24, \"ACCEPTED\"),\n  createData(\"dfdg\", \"Frozen yoghurt\", 159, 6.0, \"Me\", 24, \"PLACED\"),\n];\n\nexport default function BasicTable() {\n  const [rows, setRows] = useState(initialrows);\n  const [orders, setOrders] = useState([]);\n  const [sortedorders, setSortedOrders] = useState([]);\n\n  const [refresh, setRefresh] = useState(false);\n  // Fill up the rows array with data.\n  useEffect(() => {\n    // Get all documents from the database for orders for the particular vendor\n    axios\n      .post(\"http://localhost:4000/vendor/showorders\", {\n        manageremail: ls.get(\"email\"),\n      })\n      .then((response) => {\n        setOrders(response.data);\n        setSortedOrders(response.data);\n        console.log(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [refresh]);\n\n  const handlenextstage = (props) => {\n    axios\n      .post(\"http://localhost:4000/vendor/updateorderstatus\", {\n        _id: props._id,\n        aorr: \"a\",\n      })\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    setRefresh(!refresh);\n  };\n\n  const handlecancel = (props) => {\n    axios\n      .post(\"http://localhost:4000/vendor/updateorderstatus\", {\n        _id: props._id,\n        aorr: \"r\",\n      })\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    setRefresh(!refresh);\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ItemName</TableCell>\n            <TableCell align=\"right\">PlacedTime</TableCell>\n            <TableCell align=\"right\">Quantity</TableCell>\n            <TableCell align=\"right\">BuyerName</TableCell>\n            <TableCell align=\"right\">AddOns</TableCell>\n            <TableCell align=\"right\">Total</TableCell>\n            <TableCell align=\"right\">Status</TableCell>\n            <TableCell align=\"right\">Action</TableCell>\n            <TableCell align=\"right\">Cancel</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {orders.map((orders) => (\n            <TableRow\n              key={orders._id}\n              sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {orders.itemname}\n              </TableCell>\n              {/* Convert number to unix time */}\n              <TableCell align=\"right\">\n                {new Date(orders.placedtime).toLocaleString()}\n              </TableCell>\n              <TableCell align=\"right\">{orders.quantity}</TableCell>\n              <TableCell align=\"right\">{orders.buyername}</TableCell>\n              <TableCell align=\"right\">\n                {/* map the list of addonname */}\n                {orders.addonname.map((addons) => (\n                  <div>{addons}</div>\n                ))}\n              </TableCell>\n              <TableCell align=\"right\">Rs.{orders.totalprice}</TableCell>\n              <TableCell align=\"right\">{orders.status}</TableCell>\n\n              {orders.status === \"REJECTED\" || order.status === 'READY FOR PICKUP' || order.status === 'COMPLETED' ? (\n                <TableCell align=\"right\">\n                  <Button variant=\"contained\" color=\"primary\" disabled>\n                    Next Stage\n                  </Button>\n                </TableCell>\n              ) : (\n                <TableCell align=\"right\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => handlenextstage(orders)}\n                  >\n                    Next stage\n                  </Button>\n                </TableCell>\n              )}\n              {orders.status === \"PLACED\" ? (\n                <TableCell align=\"right\">\n                  <Button\n                    variant=\"contained\"\n                    onClick={() => handlecancel(orders)}\n                  >\n                    Cancel\n                  </Button>\n                </TableCell>\n              ) : (\n                <TableCell align=\"right\">\n                  <Button variant=\"contained\" disabled>\n                    Cancel\n                  </Button>\n                </TableCell>\n              )}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}