{"ast":null,"code":"var _jsxFileName = \"/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/BuyerDashboard.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useEffect, useState } from \"react\";\nimport ls, { set } from \"local-storage\";\nimport axios from \"axios\";\nimport { Button } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { createTheme } from \"@mui/material/styles\";\nimport { deepOrange } from \"@mui/material/colors\";\nimport { yellow } from \"@mui/material/colors\";\nimport Chip from \"@mui/material/Chip\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport { TextField } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Dialog from \"@mui/material/Dialog\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Rating from \"@mui/material/Rating\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};\nexport default function Myitem() {\n  _s();\n\n  const [menu, setMenu] = useState([]);\n  const [sortedmenu, setSortedMenu] = useState([]);\n  const [menuaftersearch, setMenuaftersearch] = useState([]);\n  const [menuafterveg, setMenuafterveg] = useState([]);\n  const [menuafterprice, setMenuafterprice] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  const [openshops, setOpenshops] = useState([]);\n  const [closedshops, setClosedshops] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [minprice, setMinPrice] = useState(0);\n  const [maxprice, setMaxPrice] = useState(1000);\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  const [vegtrue, setVegtrue] = useState(true);\n  const [nonvegtrue, setNonvegtrue] = useState(true);\n  const [wallet, setWallet] = useState(0);\n\n  const handleClickOpen = props => {\n    // console.log(props);\n    //set selected value as props\n    setSelectedValue(props);\n    console.log(selectedValue);\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  }; // Fill up the rows array with data.\n\n\n  useEffect(() => {\n    // Get all documents from the database for item for the particular vendor\n    //Get time string in HH:MM format\n    var today = new Date();\n    var time = today.getHours() + \":\" + today.getMinutes();\n    console.log(time);\n    axios.post(\"http://localhost:4000/buyer/showmenu\").then(res => {\n      setMenu(res.data);\n      const time = new Date(); //hours in 24 hrs format\n\n      let hours = time.getHours(); //minutes\n\n      let minutes = time.getMinutes(); //All items\n\n      setSortedMenu(res.data);\n      setMenuaftersearch(res.data);\n      setMenuafterveg(res.data);\n      setMenuafterprice(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n    axios.post(\"http://localhost:4000/buyer/walletdetails\", {\n      email: ls.get(\"email\")\n    }).then(res => {\n      setWallet(res.data.wallet);\n      ls.set(\"wallet\", res.data.wallet);\n    }).catch(err => {\n      console.log(err);\n    }); //If time is between openingtime and closingtime of the shop, then the shop is open\n    // setOpenshops(menu.filter(item => item.openingtime <= time && item.closingtime >= time));\n    //If time is not between openingtime and closingtime of the shop, then the shop is closed\n    // setClosedshops(menu.filter(item => item.openingtime > time || item.closingtime < time));\n  }, [refresh]);\n\n  const handlefavourite = key => {\n    //add to favourites\n    axios.post(\"http://localhost:4000/buyer/addfavourite\", {\n      _id: key,\n      email: ls.get(\"email\")\n    }).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }; // const handlecheckboxes = (prop, bool) => {\n  //   if (prop === \"veg\") {\n  //     setVegtrue(bool);\n  //   } else if (prop === \"nonveg\") {\n  //     setNonvegtrue(bool);\n  //   }\n  //   setMenuafterveg(menuaftersearch);\n  //   setMenuafterprice(menuaftersearch);\n  //   if (prop === \"veg\" && bool === true) {\n  //     if (nonvegtrue === false) {\n  //       setMenuafterveg(menuaftersearch.filter((item) => item.veg === true));\n  //     }\n  //   }\n  //   if (prop === \"nonveg\" && bool === true) {\n  //     if (vegtrue === false) {\n  //       setMenuafterveg(menuaftersearch.filter((item) => item.veg === false));\n  //     }\n  //   }\n  //   if (prop === \"veg\" && bool === false) {\n  //     if (nonvegtrue === true) {\n  //       setMenuafterveg(menuaftersearch.filter((item) => item.veg === false));\n  //     }\n  //   }\n  //   if (prop === \"nonveg\" && bool === false) {\n  //     if (vegtrue === true) {\n  //       setMenuafterveg(menuaftersearch.filter((item) => item.veg === true));\n  //     }\n  //   }\n  //   setMenuafterprice(menuafterveg);\n  // };\n\n\n  const handlefilter = () => {\n    //filter according to search keyword irrespective of case\n    if (search !== \"\") {\n      setSortedMenu(menu.filter(item => item.itemname.toLowerCase().includes(search.toLowerCase())));\n    } else {\n      setSortedMenu(menu);\n    } //filter according to veg and nonveg\n\n\n    if (vegtrue === true && nonvegtrue === false) {\n      setSortedMenu(sortedmenu.filter(item => item.veg === true));\n    } else if (vegtrue === false && nonvegtrue === true) {\n      setSortedMenu(sortedmenu.filter(item => item.veg === false));\n    } //filter according to price\n\n\n    if (minprice !== '' && maxprice !== '') {\n      setSortedMenu(sortedmenu.filter(item => item.price >= minprice && item.price <= maxprice));\n    } else if (minprice !== '') {\n      setSortedMenu(sortedmenu.filter(item => item.price >= minprice));\n    } else if (maxprice !== '') {\n      setSortedMenu(sortedmenu.filter(item => item.price <= maxprice));\n    } //filter according to shopname\n    //filter accoring to tags\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"right\",\n        justifyContent: \"right\",\n        p: 1,\n        m: 1,\n        css: {\n          maxWidth: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Wallet\",\n          variant: \"filled\",\n          value: wallet,\n          InputProps: {\n            readOnly: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          \"& > :not(style)\": {\n            m: 1,\n            width: \"25ch\"\n          }\n        },\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Search\",\n          variant: \"outlined\" //Search for items which includes the word and refresh the menu\n          //lowercase\n          ,\n          onChange: e => {\n            setSearch(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: vegtrue,\n              label: \"Veg\" //pass checkbox value to handlecheckboxes\n              ,\n              onChange: e => {\n                setVegtrue(e.target.checked);\n              },\n              inputProps: {\n                \"aria-label\": \"primary checkbox\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this),\n            label: \"Veg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: nonvegtrue,\n              label: \"Non-Veg\",\n              onChange: e => {\n                setNonvegtrue(e.target.checked);\n              },\n              inputProps: {\n                \"aria-label\": \"primary checkbox\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this),\n            label: \"Non-Veg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          \"& > :not(style)\": {\n            m: 1,\n            width: \"25ch\",\n            height: \"7ch\"\n          }\n        },\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Minimum Price\",\n          variant: \"outlined\",\n          type: \"number\",\n          onChange: e => {\n            setMinPrice(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Maximum Price\",\n          variant: \"outlined\",\n          type: \"number\",\n          onChange: e => {\n            setMaxPrice(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: handlesort,\n        children: \"Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          \"& > :not(style)\": {\n            m: 1,\n            width: \"25ch\",\n            height: \"7ch\"\n          }\n        },\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => {\n            setSortedMenu(sortedmenu.sort((a, b) => {\n              return a.price - b.price;\n            }));\n          },\n          children: \"Ascending by Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => {\n            setSortedMenu(sortedmenu.sort((a, b) => {\n              return b.price - a.price;\n            }));\n          },\n          children: \"Descending by Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => {\n            setSortedMenu(sortedmenu.sort((a, b) => {\n              return a.rating - b.rating;\n            }));\n          },\n          children: \"Ascending by Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => {\n            setSortedMenu(sortedmenu.sort((a, b) => {\n              return b.rating - a.rating;\n            }));\n          },\n          children: \"Descending by Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"ItemName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"ShopName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Veg/Non-Veg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Tags\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"AddOns\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Rating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: sortedmenu.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                \"&:last-child td, &:last-child th\": {\n                  border: 0\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: row.itemname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: row.image,\n                  alt: \"food\",\n                  style: {\n                    width: \"120px\",\n                    height: \"100px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.shopname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: [\"Rs.\", row.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.veg === true ? \"Veg\" : \"Non-Veg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.tags.map(tag => /*#__PURE__*/_jsxDEV(\"div\", {\n                  spacing: 2,\n                  children: /*#__PURE__*/_jsxDEV(Stack, {\n                    spacing: 2,\n                    children: /*#__PURE__*/_jsxDEV(Chip, {\n                      label: tag\n                    }, tag, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 449,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 448,\n                    columnNumber: 25\n                  }, this)\n                }, tag, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.addonname.map((addon, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  spacing: 2,\n                  children: /*#__PURE__*/_jsxDEV(Stack, {\n                    spacing: 2,\n                    children: /*#__PURE__*/_jsxDEV(Chip, {\n                      label: `${addon}: Rs.${row.addonprice[index]}`\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 459,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 457,\n                    columnNumber: 25\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Rating, {\n                  name: \"read-only\",\n                  value: row.rating,\n                  readOnly: true,\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"secondary\",\n                  onClick: () => handlefavourite(row._id),\n                  children: \"Add to Favourites\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"secondary\",\n                  onClick: () => handleClickOpen(row._id),\n                  children: \"Buy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 19\n              }, this)]\n            }, row._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this), open ? /*#__PURE__*/_jsxDEV(SimpleDialog, {\n        selectedValue: selectedValue,\n        open: open,\n        onClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Myitem, \"auwiCu1j8pwaAWFlVNepmYIfY10=\");\n\n_c = Myitem;\n\nfunction SimpleDialog(props) {\n  _s2();\n\n  const {\n    onClose,\n    selectedValue,\n    open\n  } = props;\n  const [quantity, setQuantity] = useState(1);\n  const [itemname, setItemname] = useState(\"\");\n  const [shopname, setShopname] = useState(\"\");\n  const [vendoremail, setVendoremail] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [addonname, setAddonname] = useState([]);\n  const [addonprice, setAddonprice] = useState([]);\n  const [selectedaddonname, setSelectedaddonname] = useState([]);\n  const [selectedaddonprice, setSelectedaddonprice] = useState([]);\n  const [totalprice, setTotalprice] = useState(0);\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handlebuy = () => {\n    //get time in int\n    const time = new Date().getTime(); // convert quantity to int\n\n    const q = parseInt(quantity);\n    var p = parseInt(price); // run loop on addonprice\n\n    for (let i = 0; i < selectedaddonprice.length; i++) {\n      // convert addonprice to int\n      const ap = parseInt(selectedaddonprice[i]); // add addonprice to p\n\n      p = p + ap;\n    } // add quantity to p\n\n\n    p = p * q;\n\n    if (p > ls.get(\"wallet\")) {\n      alert(\"Insufficient Balance\");\n      onClose();\n    } else {\n      console.log({\n        itemname: itemname,\n        shopname: shopname,\n        price: price,\n        addonname: selectedaddonname,\n        addonprice: selectedaddonprice,\n        quantity: q,\n        totalprice: p,\n        time: time\n      });\n      axios.post(\"http://localhost:4000/buyer/orderitem\", {\n        itemname: itemname,\n        vendoremail: vendoremail,\n        shopname: shopname,\n        buyeremail: ls.get(\"email\"),\n        buyername: ls.get(\"username\"),\n        placedtime: time,\n        quantity: q,\n        addonname: selectedaddonname,\n        addonprice: selectedaddonprice,\n        totalprice: p\n      }).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      }); //deduct money\n\n      axios.post(\"http://localhost:4000/buyer/deductmoney\", {\n        email: ls.get(\"email\"),\n        amount: p\n      }).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n      onClose();\n    }\n  };\n\n  const [refresh, setRefresh] = useState(false);\n  useEffect(() => {\n    axios.post(\"http://localhost:4000/buyer/getitem\", {\n      _id: selectedValue\n    }).then(res => {\n      setItemname(res.data.itemname);\n      setShopname(res.data.shopname);\n      setPrice(res.data.price);\n      setAddonname(res.data.addonname);\n      setAddonprice(res.data.addonprice);\n      setVendoremail(res.data.manageremail);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    if (selectedValue === \"\" || selectedValue === undefined) {\n      setRefresh(!refresh);\n    }\n  }, [refresh]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"A few more steps...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"ItemName\",\n          variant: \"outlined\",\n          value: itemname,\n          InputProps: {\n            readOnly: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"ShopName\",\n          variant: \"outlined\",\n          value: shopname,\n          InputProps: {\n            readOnly: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Price\",\n          variant: \"outlined\",\n          value: price,\n          InputProps: {\n            readOnly: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"quantity\",\n          label: \"Quantity\",\n          type: \"number\",\n          variant: \"outlined\",\n          defaultValue: 1,\n          onChange: e => {\n            setQuantity(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-outlined-label\",\n            children: \"AddOns\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-simple-select-outlined-label\",\n            id: \"demo-simple-select-outlined\",\n            multiple: true,\n            value: selectedaddonname,\n            onChange: e => {\n              setSelectedaddonname(e.target.value); // Set selectedaddonprice as the same index as selectedaddonname\n\n              setSelectedaddonprice(e.target.value.map(addon => {\n                return addonprice[addonname.indexOf(addon)];\n              }));\n            },\n            label: \"AddOns\",\n            variant: \"outlined\",\n            children: addonname.map(addon => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: addon,\n              children: addon\n            }, addon, false, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handlebuy,\n      children: \"Buy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 614,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(SimpleDialog, \"wUsPwNzkySTK8d9h8V/e7YQdc6I=\");\n\n_c2 = SimpleDialog;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Myitem\");\n$RefreshReg$(_c2, \"SimpleDialog\");","map":{"version":3,"sources":["/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/BuyerDashboard.js"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useEffect","useState","ls","set","axios","Button","Box","Stack","InputLabel","MenuItem","FormControl","Select","createTheme","deepOrange","yellow","Chip","OutlinedInput","TextField","PropTypes","DialogTitle","Dialog","Checkbox","FormGroup","FormControlLabel","Rating","SimpleDialog","propTypes","onClose","func","isRequired","open","bool","selectedValue","string","Myitem","menu","setMenu","sortedmenu","setSortedMenu","menuaftersearch","setMenuaftersearch","menuafterveg","setMenuafterveg","menuafterprice","setMenuafterprice","refresh","setRefresh","openshops","setOpenshops","closedshops","setClosedshops","search","setSearch","minprice","setMinPrice","maxprice","setMaxPrice","setOpen","setSelectedValue","vegtrue","setVegtrue","nonvegtrue","setNonvegtrue","wallet","setWallet","handleClickOpen","props","console","log","handleClose","value","today","Date","time","getHours","getMinutes","post","then","res","data","hours","minutes","catch","err","email","get","handlefavourite","key","_id","handlefilter","filter","item","itemname","toLowerCase","includes","veg","price","maxWidth","readOnly","m","width","e","target","checked","height","handlesort","sort","a","b","rating","minWidth","map","row","border","image","shopname","tags","tag","addonname","addon","index","addonprice","quantity","setQuantity","setItemname","setShopname","vendoremail","setVendoremail","setPrice","setAddonname","setAddonprice","selectedaddonname","setSelectedaddonname","selectedaddonprice","setSelectedaddonprice","totalprice","setTotalprice","handlebuy","getTime","q","parseInt","p","i","length","ap","alert","buyeremail","buyername","placedtime","amount","manageremail","undefined","indexOf"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,EAAP,IAAaC,GAAb,QAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEAC,YAAY,CAACC,SAAb,GAAyB;AACvBC,EAAAA,OAAO,EAAET,SAAS,CAACU,IAAV,CAAeC,UADD;AAEvBC,EAAAA,IAAI,EAAEZ,SAAS,CAACa,IAAV,CAAeF,UAFE;AAGvBG,EAAAA,aAAa,EAAEd,SAAS,CAACe,MAAV,CAAiBJ;AAHT,CAAzB;AAMA,eAAe,SAASK,MAAT,GAAkB;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBnC,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACoC,UAAD,EAAaC,aAAb,IAA8BrC,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACsC,eAAD,EAAkBC,kBAAlB,IAAwCvC,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACwC,YAAD,EAAeC,eAAf,IAAkCzC,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC0C,cAAD,EAAiBC,iBAAjB,IAAsC3C,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAAC4C,OAAD,EAAUC,UAAV,IAAwB7C,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM,CAAC8C,SAAD,EAAYC,YAAZ,IAA4B/C,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACgD,WAAD,EAAcC,cAAd,IAAgCjD,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAM,CAACkD,MAAD,EAASC,SAAT,IAAsBnD,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACoD,QAAD,EAAWC,WAAX,IAA0BrD,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACsD,QAAD,EAAWC,WAAX,IAA0BvD,QAAQ,CAAC,IAAD,CAAxC;AAEA,QAAM,CAAC6B,IAAD,EAAO2B,OAAP,IAAkBxD,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAAC+B,aAAD,EAAgB0B,gBAAhB,IAAoCzD,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAAC0D,OAAD,EAAUC,UAAV,IAAwB3D,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAAC4D,UAAD,EAAaC,aAAb,IAA8B7D,QAAQ,CAAC,IAAD,CAA5C;AAEA,QAAM,CAAC8D,MAAD,EAASC,SAAT,IAAsB/D,QAAQ,CAAC,CAAD,CAApC;;AACA,QAAMgE,eAAe,GAAIC,KAAD,IAAW;AACjC;AACA;AACAR,IAAAA,gBAAgB,CAACQ,KAAD,CAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYpC,aAAZ;AACAyB,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAND;;AAQA,QAAMY,WAAW,GAAIC,KAAD,IAAW;AAC7Bb,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAC,IAAAA,gBAAgB,CAACY,KAAD,CAAhB;AACD,GAHD,CA7B+B,CAkC/B;;;AACAtE,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA,QAAIuE,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,QAAIC,IAAI,GAAGF,KAAK,CAACG,QAAN,KAAmB,GAAnB,GAAyBH,KAAK,CAACI,UAAN,EAApC;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACArE,IAAAA,KAAK,CACFwE,IADH,CACQ,sCADR,EAEGC,IAFH,CAESC,GAAD,IAAS;AACb1C,MAAAA,OAAO,CAAC0C,GAAG,CAACC,IAAL,CAAP;AACA,YAAMN,IAAI,GAAG,IAAID,IAAJ,EAAb,CAFa,CAGb;;AACA,UAAIQ,KAAK,GAAGP,IAAI,CAACC,QAAL,EAAZ,CAJa,CAKb;;AACA,UAAIO,OAAO,GAAGR,IAAI,CAACE,UAAL,EAAd,CANa,CAQb;;AAEArC,MAAAA,aAAa,CAACwC,GAAG,CAACC,IAAL,CAAb;AACAvC,MAAAA,kBAAkB,CAACsC,GAAG,CAACC,IAAL,CAAlB;AACArC,MAAAA,eAAe,CAACoC,GAAG,CAACC,IAAL,CAAf;AACAnC,MAAAA,iBAAiB,CAACkC,GAAG,CAACC,IAAL,CAAjB;AACD,KAhBH,EAiBGG,KAjBH,CAiBUC,GAAD,IAAS;AACdhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AACD,KAnBH;AAqBA/E,IAAAA,KAAK,CACFwE,IADH,CACQ,2CADR,EACqD;AACjDQ,MAAAA,KAAK,EAAElF,EAAE,CAACmF,GAAH,CAAO,OAAP;AAD0C,KADrD,EAIGR,IAJH,CAISC,GAAD,IAAS;AACbd,MAAAA,SAAS,CAACc,GAAG,CAACC,IAAJ,CAAShB,MAAV,CAAT;AACA7D,MAAAA,EAAE,CAACC,GAAH,CAAO,QAAP,EAAiB2E,GAAG,CAACC,IAAJ,CAAShB,MAA1B;AACD,KAPH,EAQGmB,KARH,CAQUC,GAAD,IAAS;AACdhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AACD,KAVH,EA3Bc,CAuCd;AACA;AACA;AACA;AACD,GA3CQ,EA2CN,CAACtC,OAAD,CA3CM,CAAT;;AA6CA,QAAMyC,eAAe,GAAIC,GAAD,IAAS;AAC/B;AACAnF,IAAAA,KAAK,CACFwE,IADH,CACQ,0CADR,EACoD;AAChDY,MAAAA,GAAG,EAAED,GAD2C;AAEhDH,MAAAA,KAAK,EAAElF,EAAE,CAACmF,GAAH,CAAO,OAAP;AAFyC,KADpD,EAKGR,IALH,CAKSC,GAAD,IAAS;AACbX,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACD,KAPH,EAQGI,KARH,CAQUC,GAAD,IAAS;AACdhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AACD,KAVH;AAWD,GAbD,CAhF+B,CA+F/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMM,YAAY,GAAG,MAAM;AACzB;AACA,QAAItC,MAAM,KAAK,EAAf,EAAmB;AACjBb,MAAAA,aAAa,CACXH,IAAI,CAACuD,MAAL,CAAaC,IAAD,IACVA,IAAI,CAACC,QAAL,CAAcC,WAAd,GAA4BC,QAA5B,CAAqC3C,MAAM,CAAC0C,WAAP,EAArC,CADF,CADW,CAAb;AAKD,KAND,MAMO;AACLvD,MAAAA,aAAa,CAACH,IAAD,CAAb;AACD,KAVwB,CAWzB;;;AACA,QAAIwB,OAAO,KAAK,IAAZ,IAAoBE,UAAU,KAAK,KAAvC,EAA8C;AAC5CvB,MAAAA,aAAa,CACXD,UAAU,CAACqD,MAAX,CAAmBC,IAAD,IAAUA,IAAI,CAACI,GAAL,KAAa,IAAzC,CADW,CAAb;AAGD,KAJD,MAIO,IAAIpC,OAAO,KAAK,KAAZ,IAAqBE,UAAU,KAAK,IAAxC,EAA8C;AACnDvB,MAAAA,aAAa,CACXD,UAAU,CAACqD,MAAX,CAAmBC,IAAD,IAAUA,IAAI,CAACI,GAAL,KAAa,KAAzC,CADW,CAAb;AAGD,KApBwB,CAqBzB;;;AACA,QAAG1C,QAAQ,KAAK,EAAb,IAAmBE,QAAQ,KAAK,EAAnC,EAAsC;AACpCjB,MAAAA,aAAa,CACXD,UAAU,CAACqD,MAAX,CAAmBC,IAAD,IAAUA,IAAI,CAACK,KAAL,IAAc3C,QAAd,IAA0BsC,IAAI,CAACK,KAAL,IAAczC,QAApE,CADW,CAAb;AAGD,KAJD,MAKK,IAAGF,QAAQ,KAAK,EAAhB,EAAmB;AACtBf,MAAAA,aAAa,CACXD,UAAU,CAACqD,MAAX,CAAmBC,IAAD,IAAUA,IAAI,CAACK,KAAL,IAAc3C,QAA1C,CADW,CAAb;AAGD,KAJI,MAKA,IAAGE,QAAQ,KAAK,EAAhB,EAAmB;AACtBjB,MAAAA,aAAa,CACXD,UAAU,CAACqD,MAAX,CAAmBC,IAAD,IAAUA,IAAI,CAACK,KAAL,IAAczC,QAA1C,CADW,CAAb;AAGD,KApCwB,CAqCzB;AACA;;AAED,GAxCD;;AA0CA,sBACE;AAAA,4BAIE;AAAA,6BACE,QAAC,GAAD;AACE,QAAA,OAAO,EAAC,MADV;AAEE,QAAA,aAAa,EAAC,KAFhB;AAGE,QAAA,UAAU,EAAC,OAHb;AAIE,QAAA,cAAc,EAAC,OAJjB;AAKE,QAAA,CAAC,EAAE,CALL;AAME,QAAA,CAAC,EAAE,CANL;AAOE,QAAA,GAAG,EAAE;AAAE0C,UAAAA,QAAQ,EAAE;AAAZ,SAPP;AAAA,+BASE,QAAC,SAAD;AACE,UAAA,EAAE,EAAC,gBADL;AAEE,UAAA,KAAK,EAAC,QAFR;AAGE,UAAA,OAAO,EAAC,QAHV;AAIE,UAAA,KAAK,EAAElC,MAJT;AAKE,UAAA,UAAU,EAAE;AACVmC,YAAAA,QAAQ,EAAE;AADA;AALd;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eAyBE;AAAA,8BACE,QAAC,GAAD;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,EAAE,EAAE;AACF,6BAAmB;AAAEC,YAAAA,CAAC,EAAE,CAAL;AAAQC,YAAAA,KAAK,EAAE;AAAf;AADjB,SAFN;AAKE,QAAA,UAAU,MALZ;AAME,QAAA,YAAY,EAAC,KANf;AAAA,gCAQE,QAAC,SAAD;AACE,UAAA,EAAE,EAAC,gBADL;AAEE,UAAA,KAAK,EAAC,QAFR;AAGE,UAAA,OAAO,EAAC,UAHV,CAIE;AACA;AALF;AAME,UAAA,QAAQ,EAAGC,CAAD,IAAO;AACfjD,YAAAA,SAAS,CAACiD,CAAC,CAACC,MAAF,CAAShC,KAAV,CAAT;AACD;AARH;AAAA;AAAA;AAAA;AAAA,gBARF,eAmBE,QAAC,SAAD;AAAA,kCACE,QAAC,gBAAD;AACE,YAAA,OAAO,eACL,QAAC,QAAD;AACE,cAAA,OAAO,EAAEX,OADX;AAEE,cAAA,KAAK,EAAC,KAFR,CAGE;AAHF;AAIE,cAAA,QAAQ,EAAG0C,CAAD,IAAO;AACfzC,gBAAAA,UAAU,CAACyC,CAAC,CAACC,MAAF,CAASC,OAAV,CAAV;AACD,eANH;AAOE,cAAA,UAAU,EAAE;AAAE,8BAAc;AAAhB;AAPd;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAYE,YAAA,KAAK,EAAC;AAZR;AAAA;AAAA;AAAA;AAAA,kBADF,eAeE,QAAC,gBAAD;AACE,YAAA,OAAO,eACL,QAAC,QAAD;AACE,cAAA,OAAO,EAAE1C,UADX;AAEE,cAAA,KAAK,EAAC,SAFR;AAGE,cAAA,QAAQ,EAAGwC,CAAD,IAAO;AACfvC,gBAAAA,aAAa,CAACuC,CAAC,CAACC,MAAF,CAASC,OAAV,CAAb;AACD,eALH;AAME,cAAA,UAAU,EAAE;AAAE,8BAAc;AAAhB;AANd;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAWE,YAAA,KAAK,EAAC;AAXR;AAAA;AAAA;AAAA;AAAA,kBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAkDE;AAAA;AAAA;AAAA;AAAA,cAlDF,eAoDE,QAAC,GAAD;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,EAAE,EAAE;AACF,6BAAmB;AAAEJ,YAAAA,CAAC,EAAE,CAAL;AAAQC,YAAAA,KAAK,EAAE,MAAf;AAAuBI,YAAAA,MAAM,EAAE;AAA/B;AADjB,SAFN;AAKE,QAAA,UAAU,MALZ;AAME,QAAA,YAAY,EAAC,KANf;AAAA,gCAQE,QAAC,SAAD;AACE,UAAA,EAAE,EAAC,gBADL;AAEE,UAAA,KAAK,EAAC,eAFR;AAGE,UAAA,OAAO,EAAC,UAHV;AAIE,UAAA,IAAI,EAAC,QAJP;AAKE,UAAA,QAAQ,EAAGH,CAAD,IAAO;AACf/C,YAAAA,WAAW,CAAC+C,CAAC,CAACC,MAAF,CAAShC,KAAV,CAAX;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,gBARF,eAiBE,QAAC,SAAD;AACE,UAAA,EAAE,EAAC,gBADL;AAEE,UAAA,KAAK,EAAC,eAFR;AAGE,UAAA,OAAO,EAAC,UAHV;AAIE,UAAA,IAAI,EAAC,QAJP;AAKE,UAAA,QAAQ,EAAG+B,CAAD,IAAO;AACf7C,YAAAA,WAAW,CAAC6C,CAAC,CAACC,MAAF,CAAShC,KAAV,CAAX;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,cApDF,eAqGE;AAAA;AAAA;AAAA;AAAA,cArGF,eAsGE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,WAAlC;AAA8C,QAAA,OAAO,EAAEmC,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtGF,eAyGE,QAAC,GAAD;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,EAAE,EAAE;AACF,6BAAmB;AAAEN,YAAAA,CAAC,EAAE,CAAL;AAAQC,YAAAA,KAAK,EAAE,MAAf;AAAuBI,YAAAA,MAAM,EAAE;AAA/B;AADjB,SAFN;AAKE,QAAA,UAAU,MALZ;AAME,QAAA,YAAY,EAAC,KANf;AAAA,gCASE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,WADV;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,OAAO,EAAE,MAAM;AACblE,YAAAA,aAAa,CACXD,UAAU,CAACqE,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxB,qBAAOD,CAAC,CAACX,KAAF,GAAUY,CAAC,CAACZ,KAAnB;AACD,aAFD,CADW,CAAb;AAKD,WATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAuBE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,WADV;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,OAAO,EAAE,MAAM;AACb1D,YAAAA,aAAa,CACXD,UAAU,CAACqE,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxB,qBAAOA,CAAC,CAACZ,KAAF,GAAUW,CAAC,CAACX,KAAnB;AACD,aAFD,CADW,CAAb;AAKD,WATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBF,eAqCE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,WADV;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,OAAO,EAAE,MAAM;AACb1D,YAAAA,aAAa,CACXD,UAAU,CAACqE,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxB,qBAAOD,CAAC,CAACE,MAAF,GAAWD,CAAC,CAACC,MAApB;AACD,aAFD,CADW,CAAb;AAKD,WATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArCF,eAmDE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,WADV;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,OAAO,EAAE,MAAM;AACbvE,YAAAA,aAAa,CACXD,UAAU,CAACqE,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxB,qBAAOA,CAAC,CAACC,MAAF,GAAWF,CAAC,CAACE,MAApB;AACD,aAFD,CADW,CAAb;AAKD,WATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnDF;AAAA;AAAA;AAAA;AAAA;AAAA,cAzGF;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBF,eAsME,QAAC,GAAD;AAAA,8BACE,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAE9G,KAA3B;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,EAAE,EAAE;AAAE+G,YAAAA,QAAQ,EAAE;AAAZ,WAAX;AAA8B,wBAAW,cAAzC;AAAA,kCACE,QAAC,SAAD;AAAA,mCACE,QAAC,QAAD;AAAA,sCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF,eAME,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,eAQE,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARF,eASE,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,eAUE,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,sBAVF,eAWE,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,sBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAgBE,QAAC,SAAD;AAAA,sBACGzE,UAAU,CAAC0E,GAAX,CAAgBC,GAAD,iBACd,QAAC,QAAD;AAEE,cAAA,EAAE,EAAE;AAAE,oDAAoC;AAAEC,kBAAAA,MAAM,EAAE;AAAV;AAAtC,eAFN;AAAA,sCAIE,QAAC,SAAD;AAAW,gBAAA,SAAS,EAAC,IAArB;AAA0B,gBAAA,KAAK,EAAC,KAAhC;AAAA,0BACGD,GAAG,CAACpB;AADP;AAAA;AAAA;AAAA;AAAA,sBAJF,eAOE,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,QAAjB;AAAA,uCACE;AACE,kBAAA,GAAG,EAAEoB,GAAG,CAACE,KADX;AAEE,kBAAA,GAAG,EAAC,MAFN;AAGE,kBAAA,KAAK,EAAE;AAAEd,oBAAAA,KAAK,EAAE,OAAT;AAAkBI,oBAAAA,MAAM,EAAE;AAA1B;AAHT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAPF,eAcE,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,QAAjB;AAAA,0BAA2BQ,GAAG,CAACG;AAA/B;AAAA;AAAA;AAAA;AAAA,sBAdF,eAeE,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,QAAjB;AAAA,kCAA8BH,GAAG,CAAChB,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,sBAfF,eAgBE,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,QAAjB;AAAA,0BACGgB,GAAG,CAACjB,GAAJ,KAAY,IAAZ,GAAmB,KAAnB,GAA2B;AAD9B;AAAA;AAAA;AAAA;AAAA,sBAhBF,eAmBE,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,QAAjB;AAAA,0BACGiB,GAAG,CAACI,IAAJ,CAASL,GAAT,CAAcM,GAAD,iBACZ;AAAK,kBAAA,OAAO,EAAE,CAAd;AAAA,yCACE,QAAC,KAAD;AAAO,oBAAA,OAAO,EAAE,CAAhB;AAAA,2CACE,QAAC,IAAD;AAAM,sBAAA,KAAK,EAAEA;AAAb,uBAAuBA,GAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBAAsBA,GAAtB;AAAA;AAAA;AAAA;AAAA,wBADD;AADH;AAAA;AAAA;AAAA;AAAA,sBAnBF,eA4BE,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,QAAjB;AAAA,0BACGL,GAAG,CAACM,SAAJ,CAAcP,GAAd,CAAkB,CAACQ,KAAD,EAAQC,KAAR,kBACjB;AAAK,kBAAA,OAAO,EAAE,CAAd;AAAA,yCACE,QAAC,KAAD;AAAO,oBAAA,OAAO,EAAE,CAAhB;AAAA,2CAEE,QAAC,IAAD;AACE,sBAAA,KAAK,EAAG,GAAED,KAAM,QAAOP,GAAG,CAACS,UAAJ,CAAeD,KAAf,CAAsB;AAD/C,uBAEOA,KAFP;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF,mBAAsBA,KAAtB;AAAA;AAAA;AAAA;AAAA,wBADD;AADH;AAAA;AAAA;AAAA;AAAA,sBA5BF,eAyCE,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,QAAjB;AAAA,uCAEE,QAAC,MAAD;AACE,kBAAA,IAAI,EAAC,WADP;AAEE,kBAAA,KAAK,EAAER,GAAG,CAACH,MAFb;AAGE,kBAAA,QAAQ,MAHV;AAIE,kBAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,sBAzCF,eAkDE,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,QAAjB;AAAA,uCACE,QAAC,MAAD;AACE,kBAAA,OAAO,EAAC,WADV;AAEE,kBAAA,KAAK,EAAC,WAFR;AAGE,kBAAA,OAAO,EAAE,MAAMvB,eAAe,CAAC0B,GAAG,CAACxB,GAAL,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAlDF,eA2DE,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,QAAjB;AAAA,uCACE,QAAC,MAAD;AACE,kBAAA,OAAO,EAAC,WADV;AAEE,kBAAA,KAAK,EAAC,WAFR;AAGE,kBAAA,OAAO,EAAE,MAAMvB,eAAe,CAAC+C,GAAG,CAACxB,GAAL,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBA3DF;AAAA,eACOwB,GAAG,CAACxB,GADX;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA,kBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EA6FG1D,IAAI,gBACH,QAAC,YAAD;AACE,QAAA,aAAa,EAAEE,aADjB;AAEE,QAAA,IAAI,EAAEF,IAFR;AAGE,QAAA,OAAO,EAAEuC;AAHX;AAAA;AAAA;AAAA;AAAA,cADG,GAMD,IAnGN;AAAA;AAAA;AAAA;AAAA;AAAA,YAtMF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8SD;;GAtduBnC,M;;KAAAA,M;;AAwdxB,SAAST,YAAT,CAAsByC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM;AAAEvC,IAAAA,OAAF;AAAWK,IAAAA,aAAX;AAA0BF,IAAAA;AAA1B,MAAmCoC,KAAzC;AACA,QAAM,CAACwD,QAAD,EAAWC,WAAX,IAA0B1H,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAAC2F,QAAD,EAAWgC,WAAX,IAA0B3H,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACkH,QAAD,EAAWU,WAAX,IAA0B5H,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC6H,WAAD,EAAcC,cAAd,IAAgC9H,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC+F,KAAD,EAAQgC,QAAR,IAAoB/H,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACqH,SAAD,EAAYW,YAAZ,IAA4BhI,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACwH,UAAD,EAAaS,aAAb,IAA8BjI,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACkI,iBAAD,EAAoBC,oBAApB,IAA4CnI,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACoI,kBAAD,EAAqBC,qBAArB,IAA8CrI,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACsI,UAAD,EAAaC,aAAb,IAA8BvI,QAAQ,CAAC,CAAD,CAA5C;;AACA,QAAMoE,WAAW,GAAG,MAAM;AACxB1C,IAAAA,OAAO;AACR,GAFD;;AAGA,QAAM8G,SAAS,GAAG,MAAM;AACtB;AACA,UAAMhE,IAAI,GAAG,IAAID,IAAJ,GAAWkE,OAAX,EAAb,CAFsB,CAGtB;;AACA,UAAMC,CAAC,GAAGC,QAAQ,CAAClB,QAAD,CAAlB;AACA,QAAImB,CAAC,GAAGD,QAAQ,CAAC5C,KAAD,CAAhB,CALsB,CAMtB;;AACA,SAAK,IAAI8C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,kBAAkB,CAACU,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AAClD;AACA,YAAME,EAAE,GAAGJ,QAAQ,CAACP,kBAAkB,CAACS,CAAD,CAAnB,CAAnB,CAFkD,CAGlD;;AACAD,MAAAA,CAAC,GAAGA,CAAC,GAAGG,EAAR;AACD,KAZqB,CAatB;;;AACAH,IAAAA,CAAC,GAAGA,CAAC,GAAGF,CAAR;;AACA,QAAIE,CAAC,GAAG3I,EAAE,CAACmF,GAAH,CAAO,QAAP,CAAR,EAA0B;AACxB4D,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACAtH,MAAAA,OAAO;AACR,KAHD,MAGO;AACLwC,MAAAA,OAAO,CAACC,GAAR,CAAY;AACVwB,QAAAA,QAAQ,EAAEA,QADA;AAEVuB,QAAAA,QAAQ,EAAEA,QAFA;AAGVnB,QAAAA,KAAK,EAAEA,KAHG;AAIVsB,QAAAA,SAAS,EAAEa,iBAJD;AAKVV,QAAAA,UAAU,EAAEY,kBALF;AAMVX,QAAAA,QAAQ,EAAEiB,CANA;AAOVJ,QAAAA,UAAU,EAAEM,CAPF;AAQVpE,QAAAA,IAAI,EAAEA;AARI,OAAZ;AAUArE,MAAAA,KAAK,CACFwE,IADH,CACQ,uCADR,EACiD;AAC7CgB,QAAAA,QAAQ,EAAEA,QADmC;AAE7CkC,QAAAA,WAAW,EAAEA,WAFgC;AAG7CX,QAAAA,QAAQ,EAAEA,QAHmC;AAI7C+B,QAAAA,UAAU,EAAEhJ,EAAE,CAACmF,GAAH,CAAO,OAAP,CAJiC;AAK7C8D,QAAAA,SAAS,EAAEjJ,EAAE,CAACmF,GAAH,CAAO,UAAP,CALkC;AAM7C+D,QAAAA,UAAU,EAAE3E,IANiC;AAO7CiD,QAAAA,QAAQ,EAAEiB,CAPmC;AAQ7CrB,QAAAA,SAAS,EAAEa,iBARkC;AAS7CV,QAAAA,UAAU,EAAEY,kBATiC;AAU7CE,QAAAA,UAAU,EAAEM;AAViC,OADjD,EAaGhE,IAbH,CAaSC,GAAD,IAAS;AACbX,QAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACD,OAfH,EAgBGI,KAhBH,CAgBUC,GAAD,IAAS;AACdhB,QAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AACD,OAlBH,EAXK,CA8BL;;AACA/E,MAAAA,KAAK,CACFwE,IADH,CACQ,yCADR,EACmD;AAC/CQ,QAAAA,KAAK,EAAElF,EAAE,CAACmF,GAAH,CAAO,OAAP,CADwC;AAE/CgE,QAAAA,MAAM,EAAER;AAFuC,OADnD,EAKGhE,IALH,CAKSC,GAAD,IAAS;AACbX,QAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACD,OAPH,EAQGI,KARH,CAQUC,GAAD,IAAS;AACdhB,QAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AACD,OAVH;AAWAxD,MAAAA,OAAO;AACR;AACF,GA9DD;;AAgEA,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwB7C,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,KAAK,CACFwE,IADH,CACQ,qCADR,EAC+C;AAC3CY,MAAAA,GAAG,EAAExD;AADsC,KAD/C,EAIG6C,IAJH,CAISC,GAAD,IAAS;AACb8C,MAAAA,WAAW,CAAC9C,GAAG,CAACC,IAAJ,CAASa,QAAV,CAAX;AACAiC,MAAAA,WAAW,CAAC/C,GAAG,CAACC,IAAJ,CAASoC,QAAV,CAAX;AACAa,MAAAA,QAAQ,CAAClD,GAAG,CAACC,IAAJ,CAASiB,KAAV,CAAR;AACAiC,MAAAA,YAAY,CAACnD,GAAG,CAACC,IAAJ,CAASuC,SAAV,CAAZ;AACAY,MAAAA,aAAa,CAACpD,GAAG,CAACC,IAAJ,CAAS0C,UAAV,CAAb;AACAM,MAAAA,cAAc,CAACjD,GAAG,CAACC,IAAJ,CAASuE,YAAV,CAAd;AACD,KAXH,EAYGpE,KAZH,CAYUC,GAAD,IAAS;AACdhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AACD,KAdH;;AAeA,QAAInD,aAAa,KAAK,EAAlB,IAAwBA,aAAa,KAAKuH,SAA9C,EAAyD;AACvDzG,MAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD;AACF,GAnBQ,EAmBN,CAACA,OAAD,CAnBM,CAAT;AAqBA,sBACE,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEwB,WAAjB;AAA8B,IAAA,IAAI,EAAEvC,IAApC;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,GAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE,CAAhB;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,EAAE,EAAC,gBADL;AAEE,UAAA,KAAK,EAAC,UAFR;AAGE,UAAA,OAAO,EAAC,UAHV;AAIE,UAAA,KAAK,EAAE8D,QAJT;AAKE,UAAA,UAAU,EAAE;AACVM,YAAAA,QAAQ,EAAE;AADA;AALd;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,QAAC,SAAD;AACE,UAAA,EAAE,EAAC,gBADL;AAEE,UAAA,KAAK,EAAC,UAFR;AAGE,UAAA,OAAO,EAAC,UAHV;AAIE,UAAA,KAAK,EAAEiB,QAJT;AAKE,UAAA,UAAU,EAAE;AACVjB,YAAAA,QAAQ,EAAE;AADA;AALd;AAAA;AAAA;AAAA;AAAA,gBAVF,eAmBE,QAAC,SAAD;AACE,UAAA,EAAE,EAAC,gBADL;AAEE,UAAA,KAAK,EAAC,OAFR;AAGE,UAAA,OAAO,EAAC,UAHV;AAIE,UAAA,KAAK,EAAEF,KAJT;AAKE,UAAA,UAAU,EAAE;AACVE,YAAAA,QAAQ,EAAE;AADA;AALd;AAAA;AAAA;AAAA;AAAA,gBAnBF,eA4BE,QAAC,SAAD;AACE,UAAA,EAAE,EAAC,UADL;AAEE,UAAA,KAAK,EAAC,UAFR;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,UAAA,OAAO,EAAC,UAJV;AAKE,UAAA,YAAY,EAAE,CALhB;AAME,UAAA,QAAQ,EAAGG,CAAD,IAAO;AACfsB,YAAAA,WAAW,CAACtB,CAAC,CAACC,MAAF,CAAShC,KAAV,CAAX;AACD;AARH;AAAA;AAAA;AAAA;AAAA,gBA5BF,eAuCE,QAAC,WAAD;AAAa,UAAA,OAAO,EAAC,UAArB;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,EAAE,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,mCADV;AAEE,YAAA,EAAE,EAAC,6BAFL;AAGE,YAAA,QAAQ,MAHV;AAIE,YAAA,KAAK,EAAE6D,iBAJT;AAKE,YAAA,QAAQ,EAAG9B,CAAD,IAAO;AACf+B,cAAAA,oBAAoB,CAAC/B,CAAC,CAACC,MAAF,CAAShC,KAAV,CAApB,CADe,CAEf;;AACAgE,cAAAA,qBAAqB,CACnBjC,CAAC,CAACC,MAAF,CAAShC,KAAT,CAAeyC,GAAf,CAAoBQ,KAAD,IAAW;AAC5B,uBAAOE,UAAU,CAACH,SAAS,CAACkC,OAAV,CAAkBjC,KAAlB,CAAD,CAAjB;AACD,eAFD,CADmB,CAArB;AAKD,aAbH;AAcE,YAAA,KAAK,EAAC,QAdR;AAeE,YAAA,OAAO,EAAC,UAfV;AAAA,sBAiBGD,SAAS,CAACP,GAAV,CAAeQ,KAAD,iBACb,QAAC,QAAD;AAAsB,cAAA,KAAK,EAAEA,KAA7B;AAAA,wBACGA;AADH,eAAeA,KAAf;AAAA;AAAA;AAAA;AAAA,oBADD;AAjBH;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF,eA2EE;AAAA;AAAA;AAAA;AAAA,YA3EF,eA4EE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,OAAO,EAAEkB,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA5EF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmFD;;IAzLQhH,Y;;MAAAA,Y","sourcesContent":["import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useEffect, useState } from \"react\";\nimport ls, { set } from \"local-storage\";\nimport axios from \"axios\";\nimport { Button } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { createTheme } from \"@mui/material/styles\";\nimport { deepOrange } from \"@mui/material/colors\";\nimport { yellow } from \"@mui/material/colors\";\nimport Chip from \"@mui/material/Chip\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport { TextField } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Dialog from \"@mui/material/Dialog\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Rating from \"@mui/material/Rating\";\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\nexport default function Myitem() {\n  const [menu, setMenu] = useState([]);\n  const [sortedmenu, setSortedMenu] = useState([]);\n  const [menuaftersearch, setMenuaftersearch] = useState([]);\n  const [menuafterveg, setMenuafterveg] = useState([]);\n  const [menuafterprice, setMenuafterprice] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n\n  const [openshops, setOpenshops] = useState([]);\n  const [closedshops, setClosedshops] = useState([]);\n\n  const [search, setSearch] = useState(\"\");\n  const [minprice, setMinPrice] = useState(0);\n  const [maxprice, setMaxPrice] = useState(1000);\n\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  const [vegtrue, setVegtrue] = useState(true);\n  const [nonvegtrue, setNonvegtrue] = useState(true);\n\n  const [wallet, setWallet] = useState(0);\n  const handleClickOpen = (props) => {\n    // console.log(props);\n    //set selected value as props\n    setSelectedValue(props);\n    console.log(selectedValue);\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  // Fill up the rows array with data.\n  useEffect(() => {\n    // Get all documents from the database for item for the particular vendor\n    //Get time string in HH:MM format\n    var today = new Date();\n    var time = today.getHours() + \":\" + today.getMinutes();\n    console.log(time);\n    axios\n      .post(\"http://localhost:4000/buyer/showmenu\")\n      .then((res) => {\n        setMenu(res.data);\n        const time = new Date();\n        //hours in 24 hrs format\n        let hours = time.getHours();\n        //minutes\n        let minutes = time.getMinutes();\n\n        //All items\n\n        setSortedMenu(res.data);\n        setMenuaftersearch(res.data);\n        setMenuafterveg(res.data);\n        setMenuafterprice(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    axios\n      .post(\"http://localhost:4000/buyer/walletdetails\", {\n        email: ls.get(\"email\"),\n      })\n      .then((res) => {\n        setWallet(res.data.wallet);\n        ls.set(\"wallet\", res.data.wallet);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    //If time is between openingtime and closingtime of the shop, then the shop is open\n    // setOpenshops(menu.filter(item => item.openingtime <= time && item.closingtime >= time));\n    //If time is not between openingtime and closingtime of the shop, then the shop is closed\n    // setClosedshops(menu.filter(item => item.openingtime > time || item.closingtime < time));\n  }, [refresh]);\n\n  const handlefavourite = (key) => {\n    //add to favourites\n    axios\n      .post(\"http://localhost:4000/buyer/addfavourite\", {\n        _id: key,\n        email: ls.get(\"email\"),\n      })\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // const handlecheckboxes = (prop, bool) => {\n  //   if (prop === \"veg\") {\n  //     setVegtrue(bool);\n  //   } else if (prop === \"nonveg\") {\n  //     setNonvegtrue(bool);\n  //   }\n  //   setMenuafterveg(menuaftersearch);\n  //   setMenuafterprice(menuaftersearch);\n  //   if (prop === \"veg\" && bool === true) {\n  //     if (nonvegtrue === false) {\n  //       setMenuafterveg(menuaftersearch.filter((item) => item.veg === true));\n  //     }\n  //   }\n  //   if (prop === \"nonveg\" && bool === true) {\n  //     if (vegtrue === false) {\n  //       setMenuafterveg(menuaftersearch.filter((item) => item.veg === false));\n  //     }\n  //   }\n  //   if (prop === \"veg\" && bool === false) {\n  //     if (nonvegtrue === true) {\n  //       setMenuafterveg(menuaftersearch.filter((item) => item.veg === false));\n  //     }\n  //   }\n  //   if (prop === \"nonveg\" && bool === false) {\n  //     if (vegtrue === true) {\n  //       setMenuafterveg(menuaftersearch.filter((item) => item.veg === true));\n  //     }\n  //   }\n  //   setMenuafterprice(menuafterveg);\n  // };\n\n  const handlefilter = () => {\n    //filter according to search keyword irrespective of case\n    if (search !== \"\") {\n      setSortedMenu(\n        menu.filter((item) =>\n          item.itemname.toLowerCase().includes(search.toLowerCase())\n        )\n      );\n    } else {\n      setSortedMenu(menu);\n    }\n    //filter according to veg and nonveg\n    if (vegtrue === true && nonvegtrue === false) {\n      setSortedMenu(\n        sortedmenu.filter((item) => item.veg === true)\n      );\n    } else if (vegtrue === false && nonvegtrue === true) {\n      setSortedMenu(\n        sortedmenu.filter((item) => item.veg === false)\n      );\n    }\n    //filter according to price\n    if(minprice !== '' && maxprice !== ''){\n      setSortedMenu(\n        sortedmenu.filter((item) => item.price >= minprice && item.price <= maxprice)\n      );\n    }\n    else if(minprice !== ''){\n      setSortedMenu(\n        sortedmenu.filter((item) => item.price >= minprice)\n      );\n    }\n    else if(maxprice !== ''){\n      setSortedMenu(\n        sortedmenu.filter((item) => item.price <= maxprice)\n      );\n    }\n    //filter according to shopname\n    //filter accoring to tags\n      \n  };\n\n  return (\n    <div>\n      {/* Favourites */}\n\n      {/* Filters */}\n      <div>\n        <Box\n          display=\"flex\"\n          flexDirection=\"row\"\n          alignItems=\"right\"\n          justifyContent=\"right\"\n          p={1}\n          m={1}\n          css={{ maxWidth: \"100%\" }}\n        >\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Wallet\"\n            variant=\"filled\"\n            value={wallet}\n            InputProps={{\n              readOnly: true,\n            }}\n          />\n        </Box>\n      </div>\n      <div>\n        <Box\n          component=\"form\"\n          sx={{\n            \"& > :not(style)\": { m: 1, width: \"25ch\" },\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Search\"\n            variant=\"outlined\"\n            //Search for items which includes the word and refresh the menu\n            //lowercase\n            onChange={(e) => {\n              setSearch(e.target.value);\n            }}\n          />\n\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={vegtrue}\n                  label=\"Veg\"\n                  //pass checkbox value to handlecheckboxes\n                  onChange={(e) => {\n                    setVegtrue(e.target.checked);\n                  }}\n                  inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                />\n              }\n              label=\"Veg\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={nonvegtrue}\n                  label=\"Non-Veg\"\n                  onChange={(e) => {\n                    setNonvegtrue(e.target.checked);\n                  }}\n                  inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                />\n              }\n              label=\"Non-Veg\"\n            />\n          </FormGroup>\n        </Box>\n        <br />\n        {/* Price range having minimum and maximum values */}\n        <Box\n          component=\"form\"\n          sx={{\n            \"& > :not(style)\": { m: 1, width: \"25ch\", height: \"7ch\" },\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Minimum Price\"\n            variant=\"outlined\"\n            type=\"number\"\n            onChange={(e) => {\n              setMinPrice(e.target.value);\n            }}\n          />\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Maximum Price\"\n            variant=\"outlined\"\n            type=\"number\"\n            onChange={(e) => {\n              setMaxPrice(e.target.value);\n            }}\n          />\n          {/* <Box\n          component=\"form\"\n          sx={{\n            \"& > :not(style)\": { m: 1, width: \"25ch\" },\n          }}\n          noValidate\n          autoComplete=\"off\"\n          >\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setMenuafterprice(\n                menuafterveg.filter((item) => {\n                  return item.price >= minprice && item.price <= maxprice;\n                })\n              );\n            }}\n          >\n            Apply\n          </Button>\n        </Box> */}\n        </Box>\n        <br />\n        <Button variant=\"contained\" color=\"secondary\" onClick={handlesort}>\n          Filter\n        </Button>\n        <Box\n          component=\"form\"\n          sx={{\n            \"& > :not(style)\": { m: 1, width: \"25ch\", height: \"7ch\" },\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n          {/* Ascending by price button */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setSortedMenu(\n                sortedmenu.sort((a, b) => {\n                  return a.price - b.price;\n                })\n              );\n            }}\n          >\n            Ascending by Price\n          </Button>\n          {/* Descending by price button */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setSortedMenu(\n                sortedmenu.sort((a, b) => {\n                  return b.price - a.price;\n                })\n              );\n            }}\n          >\n            Descending by Price\n          </Button>\n          {/* Ascending by rating */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setSortedMenu(\n                sortedmenu.sort((a, b) => {\n                  return a.rating - b.rating;\n                })\n              );\n            }}\n          >\n            Ascending by Rating\n          </Button>\n          {/* Descending by rating */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setSortedMenu(\n                sortedmenu.sort((a, b) => {\n                  return b.rating - a.rating;\n                })\n              );\n            }}\n          >\n            Descending by Rating\n          </Button>\n        </Box>\n      </div>\n\n      {/* Menu */}\n      <Box>\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>ItemName</TableCell>\n                <TableCell align=\"center\">Image</TableCell>\n                <TableCell align=\"center\">ShopName</TableCell>\n                <TableCell align=\"center\">Price</TableCell>\n                <TableCell align=\"center\">Veg/Non-Veg</TableCell>\n                <TableCell align=\"center\">Tags</TableCell>\n                {/* Buying Stages */}\n                <TableCell align=\"center\">AddOns</TableCell>\n                <TableCell align=\"center\">Rating</TableCell>\n                <TableCell align=\"center\"></TableCell>\n                <TableCell align=\"center\"></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {sortedmenu.map((row) => (\n                <TableRow\n                  key={row._id}\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.itemname}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <img\n                      src={row.image}\n                      alt=\"food\"\n                      style={{ width: \"120px\", height: \"100px\" }}\n                    />\n                  </TableCell>\n                  <TableCell align=\"center\">{row.shopname}</TableCell>\n                  <TableCell align=\"center\">Rs.{row.price}</TableCell>\n                  <TableCell align=\"center\">\n                    {row.veg === true ? \"Veg\" : \"Non-Veg\"}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {row.tags.map((tag) => (\n                      <div spacing={2} key={tag}>\n                        <Stack spacing={2}>\n                          <Chip label={tag} key={tag} />\n                        </Stack>\n                      </div>\n                    ))}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {row.addonname.map((addon, index) => (\n                      <div spacing={2} key={index}>\n                        <Stack spacing={2}>\n                          {/* Addonname and addonprice */}\n                          <Chip\n                            label={`${addon}: Rs.${row.addonprice[index]}`}\n                            key={index}\n                          />\n                        </Stack>\n                      </div>\n                    ))}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {/* Rating */}\n                    <Rating\n                      name=\"read-only\"\n                      value={row.rating}\n                      readOnly\n                      size=\"small\"\n                    />\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={() => handlefavourite(row._id)}\n                    >\n                      Add to Favourites\n                    </Button>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={() => handleClickOpen(row._id)}\n                    >\n                      Buy\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        {open ? (\n          <SimpleDialog\n            selectedValue={selectedValue}\n            open={open}\n            onClose={handleClose}\n          />\n        ) : null}\n      </Box>\n    </div>\n  );\n}\n\nfunction SimpleDialog(props) {\n  const { onClose, selectedValue, open } = props;\n  const [quantity, setQuantity] = useState(1);\n  const [itemname, setItemname] = useState(\"\");\n  const [shopname, setShopname] = useState(\"\");\n  const [vendoremail, setVendoremail] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [addonname, setAddonname] = useState([]);\n  const [addonprice, setAddonprice] = useState([]);\n  const [selectedaddonname, setSelectedaddonname] = useState([]);\n  const [selectedaddonprice, setSelectedaddonprice] = useState([]);\n  const [totalprice, setTotalprice] = useState(0);\n  const handleClose = () => {\n    onClose();\n  };\n  const handlebuy = () => {\n    //get time in int\n    const time = new Date().getTime();\n    // convert quantity to int\n    const q = parseInt(quantity);\n    var p = parseInt(price);\n    // run loop on addonprice\n    for (let i = 0; i < selectedaddonprice.length; i++) {\n      // convert addonprice to int\n      const ap = parseInt(selectedaddonprice[i]);\n      // add addonprice to p\n      p = p + ap;\n    }\n    // add quantity to p\n    p = p * q;\n    if (p > ls.get(\"wallet\")) {\n      alert(\"Insufficient Balance\");\n      onClose();\n    } else {\n      console.log({\n        itemname: itemname,\n        shopname: shopname,\n        price: price,\n        addonname: selectedaddonname,\n        addonprice: selectedaddonprice,\n        quantity: q,\n        totalprice: p,\n        time: time,\n      });\n      axios\n        .post(\"http://localhost:4000/buyer/orderitem\", {\n          itemname: itemname,\n          vendoremail: vendoremail,\n          shopname: shopname,\n          buyeremail: ls.get(\"email\"),\n          buyername: ls.get(\"username\"),\n          placedtime: time,\n          quantity: q,\n          addonname: selectedaddonname,\n          addonprice: selectedaddonprice,\n          totalprice: p,\n        })\n        .then((res) => {\n          console.log(res);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      //deduct money\n      axios\n        .post(\"http://localhost:4000/buyer/deductmoney\", {\n          email: ls.get(\"email\"),\n          amount: p,\n        })\n        .then((res) => {\n          console.log(res);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      onClose();\n    }\n  };\n\n  const [refresh, setRefresh] = useState(false);\n\n  useEffect(() => {\n    axios\n      .post(\"http://localhost:4000/buyer/getitem\", {\n        _id: selectedValue,\n      })\n      .then((res) => {\n        setItemname(res.data.itemname);\n        setShopname(res.data.shopname);\n        setPrice(res.data.price);\n        setAddonname(res.data.addonname);\n        setAddonprice(res.data.addonprice);\n        setVendoremail(res.data.manageremail);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    if (selectedValue === \"\" || selectedValue === undefined) {\n      setRefresh(!refresh);\n    }\n  }, [refresh]);\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>A few more steps...</DialogTitle>\n      <br></br>\n      {/* Details of the product */}\n      {/* {selectedValue} */}\n      <Box>\n        <Stack spacing={2}>\n          <TextField\n            id=\"outlined-basic\"\n            label=\"ItemName\"\n            variant=\"outlined\"\n            value={itemname}\n            InputProps={{\n              readOnly: true,\n            }}\n          />\n          <TextField\n            id=\"outlined-basic\"\n            label=\"ShopName\"\n            variant=\"outlined\"\n            value={shopname}\n            InputProps={{\n              readOnly: true,\n            }}\n          />\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Price\"\n            variant=\"outlined\"\n            value={price}\n            InputProps={{\n              readOnly: true,\n            }}\n          />\n          <TextField\n            id=\"quantity\"\n            label=\"Quantity\"\n            type=\"number\"\n            variant=\"outlined\"\n            defaultValue={1}\n            onChange={(e) => {\n              setQuantity(e.target.value);\n            }}\n          />\n          {/* Multi select AddOns */}\n          <FormControl variant=\"outlined\">\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              AddOns\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              multiple\n              value={selectedaddonname}\n              onChange={(e) => {\n                setSelectedaddonname(e.target.value);\n                // Set selectedaddonprice as the same index as selectedaddonname\n                setSelectedaddonprice(\n                  e.target.value.map((addon) => {\n                    return addonprice[addonname.indexOf(addon)];\n                  })\n                );\n              }}\n              label=\"AddOns\"\n              variant=\"outlined\"\n            >\n              {addonname.map((addon) => (\n                <MenuItem key={addon} value={addon}>\n                  {addon}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Stack>\n      </Box>\n      <br></br>\n      <Button variant=\"contained\" color=\"primary\" onClick={handlebuy}>\n        Buy\n      </Button>\n      {/* Set quantity to order */}\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}