{"ast":null,"code":"var _jsxFileName = \"/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/Orders.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useEffect, useState } from \"react\";\nimport ls from \"local-storage\";\nimport axios from \"axios\";\nimport { Button } from \"@mui/material\";\nimport Rating from \"@mui/material/Rating\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyOrders() {\n  _s();\n\n  const [orders, setOrders] = useState([]);\n  const [sortedorders, setSortedOrders] = useState([]);\n  const [rating, setRating] = useState(0);\n  const [ratingbool, setRatingbool] = useState(false); // Fill up the rows array with data.\n\n  useEffect(() => {\n    // Get all documents from the database for orders for the particular vendor\n    axios.post(\"http://localhost:4000/buyer/getallorders\", {\n      buyeremail: ls.get(\"email\")\n    }).then(response => {\n      setOrders(response.data);\n      rating = response.data.rating;\n      setSortedOrders(response.data);\n      console.log(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  const handlenextstage = props => {\n    const _id = props;\n    axios.post(\"http://localhost:4000/buyer/pickuporder\", {\n      _id: _id\n    }).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handlerating = props => {\n    // setRatingbool(true);\n    console.log(rating); //post request\n\n    axios.post(\"http://localhost:4000/buyer/ratethefood\", {\n      _id: props,\n      rating: rating\n    }).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 650\n      },\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"ItemName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: \"PlacedTime\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: \"BuyerName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: \"AddOns\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: orders.map(orders => /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            \"&:last-child td, &:last-child th\": {\n              border: 0\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: orders.itemname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: new Date(orders.placedtime).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: orders.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: orders.buyername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: orders.addonname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: [\"Rs.\", orders.totalprice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: orders.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), orders.status !== \"READY FOR PICKUP\" ? /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              disabled: true,\n              children: \"Pick Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => handlenextstage(orders._id),\n              children: \"Pick Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), orders.status === \"COMPLETED\" ? /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Rating, {\n              name: \"simple-controlled\",\n              value: rating,\n              onChange: (event, newValue) => {\n                setRating(newValue);\n                handlerating(orders);\n              },\n              disabled: ratingbool\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Rating, {\n              name: \"disabled\",\n              value: 0,\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)]\n        }, orders._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyOrders, \"y+ViKRlNw+LSxmo1GFExg7TlD7Q=\");\n\n_c = MyOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyOrders\");","map":{"version":3,"sources":["/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/Orders.js"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useEffect","useState","ls","axios","Button","Rating","MyOrders","orders","setOrders","sortedorders","setSortedOrders","rating","setRating","ratingbool","setRatingbool","post","buyeremail","get","then","response","data","console","log","catch","error","handlenextstage","props","_id","handlerating","minWidth","map","border","itemname","Date","placedtime","toLocaleString","quantity","buyername","addonname","totalprice","status","event","newValue"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useEffect, useState } from \"react\";\nimport ls from \"local-storage\";\nimport axios from \"axios\";\nimport { Button } from \"@mui/material\";\nimport Rating from \"@mui/material/Rating\";\n\nexport default function MyOrders() {\n  const [orders, setOrders] = useState([]);\n  const [sortedorders, setSortedOrders] = useState([]);\n  const [rating, setRating] = useState(0);\n  const [ratingbool, setRatingbool] = useState(false);\n\n  // Fill up the rows array with data.\n  useEffect(() => {\n    // Get all documents from the database for orders for the particular vendor\n    axios\n      .post(\"http://localhost:4000/buyer/getallorders\", {\n        buyeremail: ls.get(\"email\"),\n      })\n      .then((response) => {\n        setOrders(response.data);\n        rating = response.data.rating;\n        setSortedOrders(response.data);\n        console.log(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const handlenextstage = (props) => {\n    const _id = props;\n    \n    axios\n      .post(\"http://localhost:4000/buyer/pickuporder\", {\n        _id: _id,\n      })\n      .then((response) => { \n        console.log(response);\n      }\n      )\n      .catch((error) => {\n        console.log(error);\n      }\n      );\n  };\n\n  const handlerating = (props) => {\n    // setRatingbool(true);\n    console.log(rating);\n    //post request\n    axios\n      .post(\"http://localhost:4000/buyer/ratethefood\", {\n        _id: props,\n        rating: rating,\n      })\n      .then((response) => {\n        console.log(response);\n      }\n      )\n      .catch((error) => {\n        console.log(error);\n      }\n      );\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ItemName</TableCell>\n            <TableCell align=\"center\">PlacedTime</TableCell>\n            <TableCell align=\"center\">Quantity</TableCell>\n            <TableCell align=\"center\">BuyerName</TableCell>\n            <TableCell align=\"center\">AddOns</TableCell>\n            <TableCell align=\"center\">Total</TableCell>\n            <TableCell align=\"center\">Status</TableCell>\n            <TableCell align=\"center\">Action</TableCell>\n            <TableCell align=\"center\">Rating</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {orders.map((orders) => (\n            <TableRow\n              key={orders._id}\n              sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {orders.itemname}\n              </TableCell>\n              {/* Convert number to unix time */}\n              <TableCell align=\"center\">\n                {new Date(orders.placedtime).toLocaleString()}\n              </TableCell>\n              <TableCell align=\"center\">{orders.quantity}</TableCell>\n              <TableCell align=\"center\">{orders.buyername}</TableCell>\n              <TableCell align=\"center\">{orders.addonname}</TableCell>\n              <TableCell align=\"center\">Rs.{orders.totalprice}</TableCell>\n              <TableCell align=\"center\">{orders.status}</TableCell>\n\n              {orders.status !== \"READY FOR PICKUP\" ? (\n                <TableCell align=\"center\">\n                  <Button variant=\"contained\" color=\"primary\" disabled>\n                    Pick Up\n                  </Button>\n                </TableCell>\n              ) : (\n                <TableCell align=\"center\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => handlenextstage(orders._id)}\n                  >\n                    Pick Up\n                  </Button>\n                </TableCell>\n              )}\n              {orders.status === \"COMPLETED\" ? (\n                <TableCell align=\"center\">\n                  <Rating\n                    name=\"simple-controlled\"\n                    value={rating}\n                    onChange={(event, newValue) => {\n                      setRating(newValue);\n                      handlerating(orders);\n                    }}\n                    disabled = {ratingbool}\n                  />\n                </TableCell>\n              ) : (\n                <TableCell align=\"center\">\n                  <Rating name=\"disabled\" value={0} disabled />\n                </TableCell>\n              )}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}"]},"metadata":{},"sourceType":"module"}