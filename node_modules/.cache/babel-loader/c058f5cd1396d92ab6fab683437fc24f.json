{"ast":null,"code":"var _jsxFileName = \"/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/BuyerDashboard.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useEffect, useState } from \"react\";\nimport ls from \"local-storage\";\nimport axios from \"axios\";\nimport { Button } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { createTheme } from \"@mui/material/styles\";\nimport { deepOrange } from \"@mui/material/colors\";\nimport { yellow } from \"@mui/material/colors\";\nimport Chip from \"@mui/material/Chip\";\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport { TextField } from \"@mui/material\";\nimport PropTypes from 'prop-types';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nfunction getStyles(name, nameselected, theme) {\n  return {\n    fontWeight: nameselected.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\n\nfunction SimpleDialog(props) {\n  const {\n    onClose,\n    selectedValue,\n    open\n  } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = value => {\n    onClose(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Set backup account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), \"Hoi \", selectedValue]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_c = SimpleDialog;\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};\nexport default function Myitem() {\n  _s();\n\n  const [nameselected, setNameselected] = React.useState([]);\n  const [menu, setMenu] = useState([]);\n  const [sortedmenu, setSortedMenu] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState('');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setNameselected( // On autofill we get a stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  }; // Fill up the rows array with data.\n\n\n  useEffect(() => {\n    // Get all documents from the database for item for the particular vendor\n    axios.post(\"http://localhost:4000/buyer/showmenu\").then(res => {\n      setMenu(res.data);\n      setSortedMenu(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [refresh]);\n\n  const handlebuy = key => {\n    //log the id, quantity, addons\n    var quantity = document.getElementById(key).value;\n    console.log(key);\n    console.log(quantity);\n    console.log(ls.get(\"email\"));\n  };\n\n  return (\n    /*#__PURE__*/\n    //Favourites\n    //Filters\n    //Menu\n    _jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"ItemName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"ShopName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Veg/Non-Veg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Tags\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"AddOns\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: menu.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                \"&:last-child td, &:last-child th\": {\n                  border: 0\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: row.itemname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: row.image,\n                  alt: \"food\",\n                  style: {\n                    width: \"120px\",\n                    height: \"100px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.shopname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: [\"Rs.\", row.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.veg === true ? \"Veg\" : \"Non-Veg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.tags.map(tag => /*#__PURE__*/_jsxDEV(\"div\", {\n                  spacing: 2,\n                  children: /*#__PURE__*/_jsxDEV(Stack, {\n                    spacing: 2,\n                    children: /*#__PURE__*/_jsxDEV(Chip, {\n                      label: tag\n                    }, tag, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 21\n                  }, this)\n                }, tag, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    sx: {\n                      m: 1,\n                      width: 300\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Select, {\n                      labelId: \"demo-multiple-chip-label\",\n                      id: \"addon\",\n                      multiple: true,\n                      value: nameselected,\n                      onChange: handleChange,\n                      input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                        id: \"select-multiple-chip\",\n                        label: \"Chip\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 218,\n                        columnNumber: 28\n                      }, this),\n                      renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          display: 'flex',\n                          flexWrap: 'wrap',\n                          gap: 0.5\n                        },\n                        children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                          label: value\n                        }, value, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 222,\n                          columnNumber: 27\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 23\n                      }, this),\n                      MenuProps: MenuProps,\n                      children: row.addonname.map((addon, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: addon,\n                        children: [addon, \": Rs. \", row.addonprice[index]]\n                      }, addon, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 238,\n                        columnNumber: 23\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(TextField //id = quantity.id\n                , {\n                  id: row._id,\n                  label: \"Quantity\",\n                  type: \"number\",\n                  defaultValue: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: [\"//Buy button\", /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"secondary\",\n                  onClick: handleClickOpen,\n                  children: \"Buy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 15\n              }, this)]\n            }, row._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SimpleDialog, {\n        selectedValue: selectedValue,\n        open: open,\n        onClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(Myitem, \"ioeEKw68spwc1m7VEm/XgQW7DmI=\");\n\n_c2 = Myitem;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SimpleDialog\");\n$RefreshReg$(_c2, \"Myitem\");","map":{"version":3,"sources":["/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/BuyerDashboard.js"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useEffect","useState","ls","axios","Button","Box","Stack","InputLabel","MenuItem","FormControl","Select","createTheme","deepOrange","yellow","Chip","OutlinedInput","TextField","PropTypes","DialogTitle","Dialog","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","getStyles","name","nameselected","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","SimpleDialog","props","onClose","selectedValue","open","handleClose","handleListItemClick","value","propTypes","func","isRequired","bool","string","Myitem","setNameselected","menu","setMenu","sortedmenu","setSortedMenu","refresh","setRefresh","setOpen","setSelectedValue","handleClickOpen","handleChange","event","target","split","post","then","res","data","catch","err","console","log","handlebuy","key","quantity","document","getElementById","get","minWidth","map","row","border","itemname","image","height","shopname","price","veg","tags","tag","m","selected","display","flexWrap","gap","addonname","addon","index","addonprice","_id"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useEffect, useState } from \"react\";\nimport ls from \"local-storage\";\nimport axios from \"axios\";\nimport { Button } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { createTheme } from \"@mui/material/styles\";\nimport { deepOrange } from \"@mui/material/colors\";\nimport { yellow } from \"@mui/material/colors\";\nimport Chip from \"@mui/material/Chip\";\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport { TextField } from \"@mui/material\";\nimport PropTypes from 'prop-types';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nfunction getStyles(name, nameselected, theme) {\n  return {\n    fontWeight:\n      nameselected.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nfunction SimpleDialog(props) {\n  const { onClose, selectedValue, open } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = (value) => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>Set backup account</DialogTitle>\n      Hoi {selectedValue}\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\nexport default function Myitem() {\n  const [nameselected, setNameselected] = React.useState([]);\n  const [menu, setMenu] = useState([]);\n  const [sortedmenu, setSortedMenu] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState('');\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNameselected(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n\n  // Fill up the rows array with data.\n  useEffect(() => {\n    // Get all documents from the database for item for the particular vendor\n    axios\n      .post(\"http://localhost:4000/buyer/showmenu\")\n      .then((res) => {\n        setMenu(res.data);\n        setSortedMenu(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [refresh]);\n\n  const handlebuy = (key) => {\n    //log the id, quantity, addons\n    var quantity = document.getElementById(key).value;\n    console.log(key);\n    console.log(quantity);\n    console.log(ls.get(\"email\"));\n  }\n\n\n  return (\n    //Favourites\n\n    //Filters\n\n    //Menu\n    <Box>\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ItemName</TableCell>\n            <TableCell align=\"center\">Image</TableCell>\n            <TableCell align=\"center\">ShopName</TableCell>\n            <TableCell align=\"center\">Price</TableCell>\n            <TableCell align=\"center\">Veg/Non-Veg</TableCell>\n            <TableCell align=\"center\">Tags</TableCell>\n            {/* Buying Stages */}\n            <TableCell align=\"center\">AddOns</TableCell>\n            <TableCell align=\"center\">Quantity</TableCell>\n            <TableCell align=\"center\"></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {menu.map((row) => (\n            <TableRow\n              key={row._id}\n              sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {row.itemname}\n              </TableCell>\n              <TableCell align=\"center\">\n                <img\n                  src={row.image}\n                  alt=\"food\"\n                  style={{ width: \"120px\", height: \"100px\" }}\n                />\n              </TableCell>\n              <TableCell align=\"center\">{row.shopname}</TableCell>\n              <TableCell align=\"center\">Rs.{row.price}</TableCell>\n              <TableCell align=\"center\">\n                {row.veg === true ? \"Veg\" : \"Non-Veg\"}\n              </TableCell>\n              <TableCell align=\"center\">\n                {/* <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">List</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      label=\"List\"\n                    >\n                      {row.tags.map((tag) => (\n                        <MenuItem key={tag}>{tag}</MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl> */}\n                {row.tags.map((tag) => (\n\n                  <div spacing={2} key={tag}>\n                    <Stack spacing={2}>\n                    <Chip label={tag}\n                    key={tag}\n                    />\n                    </Stack>\n                  </div>\n                ))}\n              </TableCell>\n              <TableCell align=\"center\">\n                {/* <FormControl fullWidth>\n                  <InputLabel id=\"demo-simple-select-label\">List</InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    // value={row.addonname}\n                    label=\"List\"\n                  >\n                    //map addonname and addonprice simultaneously\n                    {row.addonname.map((addon, index) => (\n                      <MenuItem key={index}>\n                        {addon}: Rs.\n                        {row.addonprice[index]}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl> */}\n                <div>\n                <FormControl sx={{ m: 1, width: 300 }}>\n                  <Select\n                    labelId=\"demo-multiple-chip-label\"\n                    id=\"addon\"\n                    multiple\n                    value={nameselected}\n                    onChange={handleChange}\n                    input={<OutlinedInput id=\"select-multiple-chip\" label=\"Chip\" />}\n                    renderValue={(selected) => (\n                      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                        {selected.map((value) => (\n                          <Chip key={value} label={value} />\n                        ))}\n                      </Box>\n                    )}\n                    MenuProps={MenuProps}\n                  >\n                    {/* {names.map((name) => (\n                      <MenuItem\n                        key={name}\n                        value={name}\n                        style={getStyles(name, nameselected, theme)}\n                      >\n                        {name}\n                      </MenuItem>\n                    ))} */}\n                    {row.addonname.map((addon, index) => (\n                      <MenuItem key={addon} value={addon}>\n                        {addon}: Rs. {row.addonprice[index]}\n                      </MenuItem>\n                    ))}   \n                  </Select>\n                </FormControl>\n              </div>\n              </TableCell>\n              <TableCell align=\"center\">\n                <TextField\n                  //id = quantity.id\n                  id= {row._id}\n                  label=\"Quantity\"\n                  type=\"number\"\n                  defaultValue=\"1\"\n                  />\n              </TableCell>\n              <TableCell align=\"center\">\n                //Buy button\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={handleClickOpen}\n                > \n                  Buy\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    <SimpleDialog\n    selectedValue={selectedValue}\n    open={open}\n    onClose={handleClose}\n  />\n  </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}