{"ast":null,"code":"var _jsxFileName = \"/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/BuyerDashboard.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useEffect, useState } from \"react\";\nimport ls from \"local-storage\";\nimport axios from \"axios\";\nimport { Button } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { createTheme } from \"@mui/material/styles\";\nimport { deepOrange } from \"@mui/material/colors\";\nimport { yellow } from \"@mui/material/colors\";\nimport Chip from \"@mui/material/Chip\";\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nfunction getStyles(name, nameselected, theme) {\n  return {\n    fontWeight: nameselected.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\n\nexport default function Myitem() {\n  _s();\n\n  const [nameselected, setNameselected] = React.useState([]);\n  const [menu, setMenu] = useState([]);\n  const [sortedmenu, setSortedMenu] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setNameselected( // On autofill we get a stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  }; // Fill up the rows array with data.\n\n\n  useEffect(() => {\n    // Get all documents from the database for item for the particular vendor\n    axios.post(\"http://localhost:4000/buyer/showmenu\").then(res => {\n      setMenu(res.data);\n      setSortedMenu(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [refresh]);\n\n  const handlebuy = key => {\n    //log the id, quantity, addons\n    var quantity = document.getElementById(key).value;\n    console.log(key);\n    console.log(quantity);\n    console.log(ls.get(\"email\"));\n  };\n\n  return (\n    /*#__PURE__*/\n    //Favourites\n    //Filters\n    //Menu\n    _jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 650\n        },\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"ItemName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"ShopName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Veg/Non-Veg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Tags\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"AddOns\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: menu.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              \"&:last-child td, &:last-child th\": {\n                border: 0\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.itemname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: row.image,\n                alt: \"food\",\n                style: {\n                  width: \"120px\",\n                  height: \"100px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: row.shopname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: [\"Rs.\", row.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: row.veg === true ? \"Veg\" : \"Non-Veg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: row.tags.map(tag => /*#__PURE__*/_jsxDEV(\"div\", {\n                spacing: 2,\n                children: /*#__PURE__*/_jsxDEV(Stack, {\n                  spacing: 2,\n                  children: /*#__PURE__*/_jsxDEV(Chip, {\n                    label: tag\n                  }, tag, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 21\n                }, this)\n              }, tag, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  sx: {\n                    m: 1,\n                    width: 300\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Select, {\n                    labelId: \"demo-multiple-chip-label\",\n                    id: \"addon\",\n                    multiple: true,\n                    value: nameselected,\n                    onChange: handleChange,\n                    input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                      id: \"select-multiple-chip\",\n                      label: \"Chip\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 28\n                    }, this),\n                    renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        flexWrap: 'wrap',\n                        gap: 0.5\n                      },\n                      children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                        label: value\n                      }, value, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 181,\n                        columnNumber: 27\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 23\n                    }, this),\n                    MenuProps: MenuProps,\n                    children: row.addonname.map((addon, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: addon,\n                      children: [addon, \": Rs. \", row.addonprice[index]]\n                    }, addon, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 23\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: [\"//take quantity from user (int)\", /*#__PURE__*/_jsxDEV(TextField //id = quantity.id\n              , {\n                id: row._id,\n                label: \"Quantity\",\n                type: \"number\",\n                defaultValue: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: [\"//Buy button\", /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"secondary\",\n                onClick: () => {\n                  handlebuy(row._id);\n                },\n                children: \"Buy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this)]\n          }, row._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(Myitem, \"wdvve99ZsKEHaMKoWhHWb8qGR1Q=\");\n\n_c = Myitem;\n\nvar _c;\n\n$RefreshReg$(_c, \"Myitem\");","map":{"version":3,"sources":["/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/BuyerDashboard.js"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useEffect","useState","ls","axios","Button","Box","Stack","InputLabel","MenuItem","FormControl","Select","createTheme","deepOrange","yellow","Chip","OutlinedInput","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","getStyles","name","nameselected","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","Myitem","setNameselected","menu","setMenu","sortedmenu","setSortedMenu","refresh","setRefresh","handleChange","event","target","value","split","post","then","res","data","catch","err","console","log","handlebuy","key","quantity","document","getElementById","get","minWidth","map","row","border","itemname","image","height","shopname","price","veg","tags","tag","m","selected","display","flexWrap","gap","addonname","addon","index","addonprice","_id"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useEffect, useState } from \"react\";\nimport ls from \"local-storage\";\nimport axios from \"axios\";\nimport { Button } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { createTheme } from \"@mui/material/styles\";\nimport { deepOrange } from \"@mui/material/colors\";\nimport { yellow } from \"@mui/material/colors\";\nimport Chip from \"@mui/material/Chip\";\nimport OutlinedInput from '@mui/material/OutlinedInput';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nfunction getStyles(name, nameselected, theme) {\n  return {\n    fontWeight:\n      nameselected.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport default function Myitem() {\n  const [nameselected, setNameselected] = React.useState([]);\n  const [menu, setMenu] = useState([]);\n  const [sortedmenu, setSortedMenu] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNameselected(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n\n  // Fill up the rows array with data.\n  useEffect(() => {\n    // Get all documents from the database for item for the particular vendor\n    axios\n      .post(\"http://localhost:4000/buyer/showmenu\")\n      .then((res) => {\n        setMenu(res.data);\n        setSortedMenu(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [refresh]);\n\n  const handlebuy = (key) => {\n    //log the id, quantity, addons\n    var quantity = document.getElementById(key).value;\n    console.log(key);\n    console.log(quantity);\n    console.log(ls.get(\"email\"));\n  }\n\n\n  return (\n    //Favourites\n\n    //Filters\n\n    //Menu\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ItemName</TableCell>\n            <TableCell align=\"center\">Image</TableCell>\n            <TableCell align=\"center\">ShopName</TableCell>\n            <TableCell align=\"center\">Price</TableCell>\n            <TableCell align=\"center\">Veg/Non-Veg</TableCell>\n            <TableCell align=\"center\">Tags</TableCell>\n            {/* Buying Stages */}\n            <TableCell align=\"center\">AddOns</TableCell>\n            <TableCell align=\"center\">Quantity</TableCell>\n            <TableCell align=\"center\"></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {menu.map((row) => (\n            <TableRow\n              key={row._id}\n              sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {row.itemname}\n              </TableCell>\n              <TableCell align=\"center\">\n                <img\n                  src={row.image}\n                  alt=\"food\"\n                  style={{ width: \"120px\", height: \"100px\" }}\n                />\n              </TableCell>\n              <TableCell align=\"center\">{row.shopname}</TableCell>\n              <TableCell align=\"center\">Rs.{row.price}</TableCell>\n              <TableCell align=\"center\">\n                {row.veg === true ? \"Veg\" : \"Non-Veg\"}\n              </TableCell>\n              <TableCell align=\"center\">\n                {/* <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">List</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      label=\"List\"\n                    >\n                      {row.tags.map((tag) => (\n                        <MenuItem key={tag}>{tag}</MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl> */}\n                {row.tags.map((tag) => (\n\n                  <div spacing={2} key={tag}>\n                    <Stack spacing={2}>\n                    <Chip label={tag}\n                    key={tag}\n                    />\n                    </Stack>\n                  </div>\n                ))}\n              </TableCell>\n              <TableCell align=\"center\">\n                {/* <FormControl fullWidth>\n                  <InputLabel id=\"demo-simple-select-label\">List</InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    // value={row.addonname}\n                    label=\"List\"\n                  >\n                    //map addonname and addonprice simultaneously\n                    {row.addonname.map((addon, index) => (\n                      <MenuItem key={index}>\n                        {addon}: Rs.\n                        {row.addonprice[index]}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl> */}\n                <div>\n                <FormControl sx={{ m: 1, width: 300 }}>\n                  <Select\n                    labelId=\"demo-multiple-chip-label\"\n                    id=\"addon\"\n                    multiple\n                    value={nameselected}\n                    onChange={handleChange}\n                    input={<OutlinedInput id=\"select-multiple-chip\" label=\"Chip\" />}\n                    renderValue={(selected) => (\n                      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                        {selected.map((value) => (\n                          <Chip key={value} label={value} />\n                        ))}\n                      </Box>\n                    )}\n                    MenuProps={MenuProps}\n                  >\n                    {/* {names.map((name) => (\n                      <MenuItem\n                        key={name}\n                        value={name}\n                        style={getStyles(name, nameselected, theme)}\n                      >\n                        {name}\n                      </MenuItem>\n                    ))} */}\n                    {row.addonname.map((addon, index) => (\n                      <MenuItem key={addon} value={addon}>\n                        {addon}: Rs. {row.addonprice[index]}\n                      </MenuItem>\n                    ))}   \n                  </Select>\n                </FormControl>\n              </div>\n              </TableCell>\n              <TableCell align=\"center\">\n                //take quantity from user (int)\n                <TextField\n                  //id = quantity.id\n                  id= {row._id}\n                  label=\"Quantity\"\n                  type=\"number\"\n                  defaultValue=\"1\"\n                  />\n              </TableCell>\n              <TableCell align=\"center\">\n                //Buy button\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => {handlebuy(row._id)}}\n                >\n                  Buy\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}