{"ast":null,"code":"var _jsxFileName = \"/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/vendor/Statistics.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from \"react\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Divider from \"@mui/material/Divider\";\nimport ls from \"local-storage\";\nimport Box from \"@mui/material/Box\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Button, ListSubheader, TextField } from \"@mui/material\";\nimport Stack from \"@mui/material/Stack\";\nimport { ArgumentAxis, ValueAxis, Chart, BarSeries } from \"@devexpress/dx-react-chart-material-ui\";\nimport { RemoveFromQueue } from \"@mui/icons-material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar databatch = [];\nvar dataage = [];\nvar freqbatch = [0, 0, 0, 0, 0, 0, 0];\nvar freqage = [];\n\nfunction Creategraph() {\n  _s();\n\n  var data1 = [{\n    argument: 0,\n    value: 0\n  }, {\n    argument: 1,\n    value: 0\n  }, {\n    argument: 2,\n    value: 0\n  }, {\n    argument: 3,\n    value: 0\n  }, {\n    argument: 4,\n    value: 0\n  }, {\n    argument: 5,\n    value: 0\n  }, {\n    argument: 6,\n    value: 0\n  }];\n  var data2 = [];\n  useEffect(() => {\n    // upload the count of a particular batch in data1\n    for (let i = 0; i < freqbatch.length; i++) {\n      data1[freqbatch[i].batch].value = freqbatch[i].count;\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    style: {\n      height: \"100px\",\n      width: \"500px\"\n    },\n    data: data1,\n    children: [/*#__PURE__*/_jsxDEV(ArgumentAxis, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValueAxis, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarSeries, {\n      valueField: \"value\",\n      argumentField: \"argument\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n} //argument and value fields\n//for creating the graph\n\n\n_s(Creategraph, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Creategraph;\nexport default function VStatistics() {\n  _s2();\n\n  const [completedemails, setCompletedEmails] = useState([]);\n  const [allbuyers, setAllBuyers] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  const [placedorders, setPlacedOrders] = useState([]);\n  const [pendingorders, setPendingOrders] = useState([]);\n  const [completeorders, setCompleteOrders] = useState([]);\n  const [array_5, setArray_5] = useState([\"\", \"\", \"\", \"\", \"\"]);\n  useEffect(() => {\n    axios.post(\"http://localhost:4000/vendor/allemails\", {\n      email: ls.get(\"email\")\n    }).then(response => {\n      setCompletedEmails(response.data.emails);\n    }).catch(error => {\n      console.log(error);\n    });\n    axios.post(\"http://localhost:4000/vendor/allbuyers\").then(response => {\n      setAllBuyers(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n    axios.post(\"http://localhost:4000/vendor/statsplaced\", {\n      email: ls.get(\"email\")\n    }).then(res => {\n      setPlacedOrders(res.data.placed);\n    }).catch(err => {\n      console.log(err);\n    });\n    axios.post(\"http://localhost:4000/vendor/statspending\", {\n      email: ls.get(\"email\")\n    }).then(res => {\n      setPendingOrders(res.data.pending);\n    }).catch(err => {\n      console.log(err);\n    });\n    axios.post(\"http://localhost:4000/vendor/statscompleted\", {\n      email: ls.get(\"email\")\n    }).then(res => {\n      setCompleteOrders(res.data.completed);\n    }).catch(err => {\n      console.log(err);\n    });\n    axios.post(\"http://localhost:4000/vendor/statstop\", {\n      email: ls.get(\"email\")\n    }).then(res => {\n      setArray_5(res.data.item);\n    }).catch(err => {\n      console.log(err);\n    }); //compare emails with allbuyers\n\n    for (let i = 0; i < completedemails.length; i++) {\n      for (let j = 0; j < allbuyers.emails.length; j++) {\n        if (completedemails[i] === allbuyers.emails[j]) {\n          databatch.push({\n            argument: allbuyers.batch[j],\n            value: 1\n          });\n          dataage.push({\n            argument: allbuyers.age[j],\n            value: 1\n          });\n          freqbatch[allbuyers.batch[j]]++;\n          freqage.push(allbuyers.age[j]);\n        }\n      }\n    }\n  }, [refresh]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n          children: /*#__PURE__*/_jsxDEV(\"center\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Most ordered food items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Item 1\",\n            secondary: array_5[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Item 2\",\n            secondary: array_5[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Item 3\",\n            secondary: array_5[2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Item 4\",\n            secondary: array_5[3]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Item 5\",\n            secondary: array_5[4]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      p: 2,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"Orders Placed:\",\n              secondary: placedorders\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"Orders Pending:\",\n              secondary: pendingorders\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"Orders Completed:\",\n              secondary: completeorders\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"creategraph\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(VStatistics, \"Ajga39xPGRiLnhk3LnicOxnrxqM=\");\n\n_c2 = VStatistics;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Creategraph\");\n$RefreshReg$(_c2, \"VStatistics\");","map":{"version":3,"sources":["/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/vendor/Statistics.js"],"names":["React","List","ListItem","ListItemText","Divider","ls","Box","axios","useState","useEffect","Button","ListSubheader","TextField","Stack","ArgumentAxis","ValueAxis","Chart","BarSeries","RemoveFromQueue","databatch","dataage","freqbatch","freqage","Creategraph","data1","argument","value","data2","i","length","batch","count","height","width","VStatistics","completedemails","setCompletedEmails","allbuyers","setAllBuyers","refresh","setRefresh","placedorders","setPlacedOrders","pendingorders","setPendingOrders","completeorders","setCompleteOrders","array_5","setArray_5","post","email","get","then","response","data","emails","catch","error","console","log","res","placed","err","pending","completed","item","j","push","age","flexGrow"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,EAAP,MAAe,eAAf;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,EAAiBC,aAAjB,EAAgCC,SAAhC,QAAiD,eAAjD;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SACEC,YADF,EAEEC,SAFF,EAGEC,KAHF,EAIEC,SAJF,QAKO,wCALP;AAMA,SAASC,eAAT,QAAgC,qBAAhC;;AAEA,IAAIC,SAAS,GAAG,EAAhB;AACA,IAAIC,OAAO,GAAG,EAAd;AAEA,IAAIC,SAAS,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,CAAhB;AACA,IAAIC,OAAO,GAAG,EAAd;;AACA,SAASC,WAAT,GAAuB;AAAA;;AACnB,MAAIC,KAAK,GAAG,CAAC;AAACC,IAAAA,QAAQ,EAAE,CAAX;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAAD,EAA0B;AAACD,IAAAA,QAAQ,EAAE,CAAX;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAA1B,EAAmD;AAACD,IAAAA,QAAQ,EAAE,CAAX;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAAnD,EAA4E;AAACD,IAAAA,QAAQ,EAAE,CAAX;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAA5E,EAAqG;AAACD,IAAAA,QAAQ,EAAE,CAAX;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAArG,EAA8H;AAACD,IAAAA,QAAQ,EAAE,CAAX;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAA9H,EAAuJ;AAACD,IAAAA,QAAQ,EAAE,CAAX;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAAvJ,CAAZ;AACA,MAAIC,KAAK,GAAG,EAAZ;AACFlB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,SAAI,IAAImB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGP,SAAS,CAACQ,MAA7B,EAAqCD,CAAC,EAAtC,EAAyC;AACvCJ,MAAAA,KAAK,CAACH,SAAS,CAACO,CAAD,CAAT,CAAaE,KAAd,CAAL,CAA0BJ,KAA1B,GAAkCL,SAAS,CAACO,CAAD,CAAT,CAAaG,KAA/C;AACD;AAEF,GANQ,EAMN,EANM,CAAT;AAQA,sBACE,QAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KAAd;AAAmD,IAAA,IAAI,EAAET,KAAzD;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,SAAD;AAAW,MAAA,UAAU,EAAC,OAAtB;AAA8B,MAAA,aAAa,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,C,CACD;AACA;;;GApBSD,W;;KAAAA,W;AAsBT,eAAe,SAASW,WAAT,GAAuB;AAAA;;AACpC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwC5B,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAAC6B,SAAD,EAAYC,YAAZ,IAA4B9B,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC+B,OAAD,EAAUC,UAAV,IAAwBhC,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACiC,YAAD,EAAeC,eAAf,IAAkClC,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACmC,aAAD,EAAgBC,gBAAhB,IAAoCpC,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACqC,cAAD,EAAiBC,iBAAjB,IAAsCtC,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACuC,OAAD,EAAUC,UAAV,IAAwBxC,QAAQ,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdF,IAAAA,KAAK,CACF0C,IADH,CACQ,wCADR,EACkD;AAC9CC,MAAAA,KAAK,EAAE7C,EAAE,CAAC8C,GAAH,CAAO,OAAP;AADuC,KADlD,EAIGC,IAJH,CAISC,QAAD,IAAc;AAClBjB,MAAAA,kBAAkB,CAACiB,QAAQ,CAACC,IAAT,CAAcC,MAAf,CAAlB;AACD,KANH,EAOGC,KAPH,CAOUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KATH;AAUAlD,IAAAA,KAAK,CACF0C,IADH,CACQ,wCADR,EAEGG,IAFH,CAESC,QAAD,IAAc;AAClBf,MAAAA,YAAY,CAACe,QAAQ,CAACC,IAAV,CAAZ;AACD,KAJH,EAKGE,KALH,CAKUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAPH;AAQAlD,IAAAA,KAAK,CACF0C,IADH,CACQ,0CADR,EACoD;AAChDC,MAAAA,KAAK,EAAE7C,EAAE,CAAC8C,GAAH,CAAO,OAAP;AADyC,KADpD,EAIGC,IAJH,CAISQ,GAAD,IAAS;AACblB,MAAAA,eAAe,CAACkB,GAAG,CAACN,IAAJ,CAASO,MAAV,CAAf;AACD,KANH,EAOGL,KAPH,CAOUM,GAAD,IAAS;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,KATH;AAUAvD,IAAAA,KAAK,CACF0C,IADH,CACQ,2CADR,EACqD;AACjDC,MAAAA,KAAK,EAAE7C,EAAE,CAAC8C,GAAH,CAAO,OAAP;AAD0C,KADrD,EAIGC,IAJH,CAISQ,GAAD,IAAS;AACbhB,MAAAA,gBAAgB,CAACgB,GAAG,CAACN,IAAJ,CAASS,OAAV,CAAhB;AACD,KANH,EAOGP,KAPH,CAOUM,GAAD,IAAS;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,KATH;AAUAvD,IAAAA,KAAK,CACF0C,IADH,CACQ,6CADR,EACuD;AACnDC,MAAAA,KAAK,EAAE7C,EAAE,CAAC8C,GAAH,CAAO,OAAP;AAD4C,KADvD,EAIGC,IAJH,CAISQ,GAAD,IAAS;AACbd,MAAAA,iBAAiB,CAACc,GAAG,CAACN,IAAJ,CAASU,SAAV,CAAjB;AACD,KANH,EAOGR,KAPH,CAOUM,GAAD,IAAS;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,KATH;AAUAvD,IAAAA,KAAK,CACF0C,IADH,CACQ,uCADR,EACiD;AAC7CC,MAAAA,KAAK,EAAE7C,EAAE,CAAC8C,GAAH,CAAO,OAAP;AADsC,KADjD,EAIGC,IAJH,CAISQ,GAAD,IAAS;AACbZ,MAAAA,UAAU,CAACY,GAAG,CAACN,IAAJ,CAASW,IAAV,CAAV;AACD,KANH,EAOGT,KAPH,CAOUM,GAAD,IAAS;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,KATH,EAjDc,CA4Dd;;AACA,SAAK,IAAIlC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,eAAe,CAACN,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC/C,WAAK,IAAIsC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7B,SAAS,CAACkB,MAAV,CAAiB1B,MAArC,EAA6CqC,CAAC,EAA9C,EAAkD;AAChD,YAAI/B,eAAe,CAACP,CAAD,CAAf,KAAuBS,SAAS,CAACkB,MAAV,CAAiBW,CAAjB,CAA3B,EAAgD;AAC9C/C,UAAAA,SAAS,CAACgD,IAAV,CAAe;AACb1C,YAAAA,QAAQ,EAAEY,SAAS,CAACP,KAAV,CAAgBoC,CAAhB,CADG;AAEbxC,YAAAA,KAAK,EAAE;AAFM,WAAf;AAKAN,UAAAA,OAAO,CAAC+C,IAAR,CAAa;AACX1C,YAAAA,QAAQ,EAAEY,SAAS,CAAC+B,GAAV,CAAcF,CAAd,CADC;AAEXxC,YAAAA,KAAK,EAAE;AAFI,WAAb;AAKAL,UAAAA,SAAS,CAACgB,SAAS,CAACP,KAAV,CAAgBoC,CAAhB,CAAD,CAAT;AACA5C,UAAAA,OAAO,CAAC6C,IAAR,CAAa9B,SAAS,CAAC+B,GAAV,CAAcF,CAAd,CAAb;AACD;AACF;AACF;AACF,GA/EQ,EA+EN,CAAC3B,OAAD,CA/EM,CAAT;AAiFA,sBACE;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAE8B,QAAAA,QAAQ,EAAE;AAAZ,OAAT;AAAA,6BACE,QAAC,IAAD;AAAA,gCACE,QAAC,aAAD;AAAA,iCACE;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,QAAD;AAAA,kCACE,QAAC,YAAD;AAAc,YAAA,OAAO,EAAC,QAAtB;AAA+B,YAAA,SAAS,EAAEtB,OAAO,CAAC,CAAD;AAAjD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,YAAD;AAAc,YAAA,OAAO,EAAC,QAAtB;AAA+B,YAAA,SAAS,EAAEA,OAAO,CAAC,CAAD;AAAjD;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,YAAD;AAAc,YAAA,OAAO,EAAC,QAAtB;AAA+B,YAAA,SAAS,EAAEA,OAAO,CAAC,CAAD;AAAjD;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,YAAD;AAAc,YAAA,OAAO,EAAC,QAAtB;AAA+B,YAAA,SAAS,EAAEA,OAAO,CAAC,CAAD;AAAjD;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,YAAD;AAAc,YAAA,OAAO,EAAC,QAAtB;AAA+B,YAAA,SAAS,EAAEA,OAAO,CAAC,CAAD;AAAjD;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAcE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAmBE,QAAC,GAAD;AAAK,MAAA,CAAC,EAAE,CAAR;AAAA,6BACE,QAAC,KAAD;AAAA,+BACE,QAAC,IAAD;AAAA,kCACE,QAAC,QAAD;AAAA,mCACE,QAAC,YAAD;AAAc,cAAA,OAAO,EAAC,gBAAtB;AAAuC,cAAA,SAAS,EAAEN;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,QAAD;AAAA,mCACE,QAAC,YAAD;AACE,cAAA,OAAO,EAAC,iBADV;AAEE,cAAA,SAAS,EAAEE;AAFb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBALF,eAWE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBAXF,eAYE,QAAC,QAAD;AAAA,mCACE,QAAC,YAAD;AACE,cAAA,OAAO,EAAC,mBADV;AAEE,cAAA,SAAS,EAAEE;AAFb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAZF,eAkBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAnBF,eA2CE;AAAA;AAAA;AAAA;AAAA,YA3CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+CD;;IAxIuBX,W;;MAAAA,W","sourcesContent":["import * as React from \"react\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Divider from \"@mui/material/Divider\";\nimport ls from \"local-storage\";\nimport Box from \"@mui/material/Box\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Button, ListSubheader, TextField } from \"@mui/material\";\nimport Stack from \"@mui/material/Stack\";\nimport {\n  ArgumentAxis,\n  ValueAxis,\n  Chart,\n  BarSeries,\n} from \"@devexpress/dx-react-chart-material-ui\";\nimport { RemoveFromQueue } from \"@mui/icons-material\";\n\nvar databatch = [];\nvar dataage = [];\n\nvar freqbatch = [0,0,0,0,0,0,0];\nvar freqage = [];\nfunction Creategraph() {\n    var data1 = [{argument: 0, value: 0}, {argument: 1, value: 0}, {argument: 2, value: 0}, {argument: 3, value: 0}, {argument: 4, value: 0}, {argument: 5, value: 0}, {argument: 6, value: 0}];\n    var data2 = [];\n  useEffect(() => {\n    // upload the count of a particular batch in data1\n    for(let i = 0; i < freqbatch.length; i++){\n      data1[freqbatch[i].batch].value = freqbatch[i].count;\n    }\n\n  }, []);\n\n  return (\n    <Chart style={{ height: \"100px\", width: \"500px\" }} data={data1}>\n      <ArgumentAxis />\n      <ValueAxis />\n      <BarSeries valueField=\"value\" argumentField=\"argument\" />\n    </Chart>\n  );\n}\n//argument and value fields\n//for creating the graph\n\nexport default function VStatistics() {\n  const [completedemails, setCompletedEmails] = useState([]);\n  const [allbuyers, setAllBuyers] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  const [placedorders, setPlacedOrders] = useState([]);\n  const [pendingorders, setPendingOrders] = useState([]);\n  const [completeorders, setCompleteOrders] = useState([]);\n  const [array_5, setArray_5] = useState([\"\", \"\", \"\", \"\", \"\"]);\n  useEffect(() => {\n    axios\n      .post(\"http://localhost:4000/vendor/allemails\", {\n        email: ls.get(\"email\"),\n      })\n      .then((response) => {\n        setCompletedEmails(response.data.emails);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    axios\n      .post(\"http://localhost:4000/vendor/allbuyers\")\n      .then((response) => {\n        setAllBuyers(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    axios\n      .post(\"http://localhost:4000/vendor/statsplaced\", {\n        email: ls.get(\"email\"),\n      })\n      .then((res) => {\n        setPlacedOrders(res.data.placed);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    axios\n      .post(\"http://localhost:4000/vendor/statspending\", {\n        email: ls.get(\"email\"),\n      })\n      .then((res) => {\n        setPendingOrders(res.data.pending);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    axios\n      .post(\"http://localhost:4000/vendor/statscompleted\", {\n        email: ls.get(\"email\"),\n      })\n      .then((res) => {\n        setCompleteOrders(res.data.completed);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    axios\n      .post(\"http://localhost:4000/vendor/statstop\", {\n        email: ls.get(\"email\"),\n      })\n      .then((res) => {\n        setArray_5(res.data.item);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    //compare emails with allbuyers\n    for (let i = 0; i < completedemails.length; i++) {\n      for (let j = 0; j < allbuyers.emails.length; j++) {\n        if (completedemails[i] === allbuyers.emails[j]) {\n          databatch.push({\n            argument: allbuyers.batch[j],\n            value: 1,\n          }\n          );\n          dataage.push({\n            argument: allbuyers.age[j],\n            value: 1,\n          }\n          );\n          freqbatch[allbuyers.batch[j]]++;\n          freqage.push(allbuyers.age[j]);\n        }\n      }\n    }\n  }, [refresh]);\n\n  return (\n    <div>\n      <Box sx={{ flexGrow: 1 }}>\n        <List>\n          <ListSubheader>\n            <center>\n              <h3>Most ordered food items</h3>\n            </center>\n          </ListSubheader>\n          <Divider />\n          <ListItem>\n            <ListItemText primary=\"Item 1\" secondary={array_5[0]} />\n            <ListItemText primary=\"Item 2\" secondary={array_5[1]} />\n            <ListItemText primary=\"Item 3\" secondary={array_5[2]} />\n            <ListItemText primary=\"Item 4\" secondary={array_5[3]} />\n            <ListItemText primary=\"Item 5\" secondary={array_5[4]} />\n          </ListItem>\n          <Divider />\n        </List>\n      </Box>\n      <Box p={2}>\n        <Stack>\n          <List>\n            <ListItem>\n              <ListItemText primary=\"Orders Placed:\" secondary={placedorders} />\n            </ListItem>\n            <Divider />\n            <ListItem>\n              <ListItemText\n                primary=\"Orders Pending:\"\n                secondary={pendingorders}\n              />\n            </ListItem>\n            <Divider />\n            <ListItem>\n              <ListItemText\n                primary=\"Orders Completed:\"\n                secondary={completeorders}\n              />\n            </ListItem>\n            <Divider />\n          </List>\n        </Stack>\n      </Box>\n      <creategraph />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}