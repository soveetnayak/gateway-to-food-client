{"ast":null,"code":"var _jsxFileName = \"/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/Favourites.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useEffect, useState } from \"react\";\nimport ls from \"local-storage\";\nimport axios from \"axios\";\nimport { Button } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport Chip from \"@mui/material/Chip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Fav() {\n  _s();\n\n  const [menu, setMenu] = useState([]);\n  const [sortedmenu, setSortedMenu] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(\"\"); // Fill up the rows array with data.\n\n  useEffect(() => {\n    // Get all documents from the database for item for the particular vendor\n    axios.post(\"http://localhost:4000/buyer/getfavourites\", {\n      email: ls.get(\"email\")\n    }).then(response => {\n      setMenu(response.data);\n      setSortedMenu(response.data);\n      console.log(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [refresh]);\n\n  const handlefavourite = key => {\n    axios.post(\"http://localhost:4000/buyer/removefavourite\", {\n      email: ls.get(\"email\"),\n      _id: key\n    }).then(response => {\n      console.log(response);\n      setRefresh(!refresh);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"ItemName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"ShopName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Veg/Non-Veg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Tags\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"AddOns\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: sortedmenu.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                \"&:last-child td, &:last-child th\": {\n                  border: 0\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: row.itemname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: row.image,\n                  alt: \"food\",\n                  style: {\n                    width: \"120px\",\n                    height: \"100px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.shopname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: [\"Rs.\", row.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.veg === true ? \"Veg\" : \"Non-Veg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.tags.map(tag => /*#__PURE__*/_jsxDEV(\"div\", {\n                  spacing: 2,\n                  children: /*#__PURE__*/_jsxDEV(Stack, {\n                    spacing: 2,\n                    children: /*#__PURE__*/_jsxDEV(Chip, {\n                      label: tag\n                    }, tag, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 25\n                  }, this)\n                }, tag, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.addonname.map((addon, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  spacing: 2,\n                  children: /*#__PURE__*/_jsxDEV(Stack, {\n                    spacing: 2,\n                    children: /*#__PURE__*/_jsxDEV(Chip, {\n                      label: `${addon}: Rs.${row.addonprice[index]}`\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 25\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"secondary\",\n                  onClick: () => handlefavourite(row._id),\n                  children: \"Remove from Favourites\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this)]\n            }, row._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Fav, \"41OGuy716Dbd+qO7PuusE1hmsY0=\");\n\n_c = Fav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fav\");","map":{"version":3,"sources":["/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/Favourites.js"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useEffect","useState","ls","axios","Button","Box","Stack","Chip","Fav","menu","setMenu","sortedmenu","setSortedMenu","refresh","setRefresh","open","setOpen","selectedValue","setSelectedValue","post","email","get","then","response","data","console","log","catch","error","handlefavourite","key","_id","minWidth","map","row","border","itemname","image","width","height","shopname","price","veg","tags","tag","addonname","addon","index","addonprice"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useEffect, useState } from \"react\";\nimport ls from \"local-storage\";\nimport axios from \"axios\";\nimport { Button } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\n\nimport Chip from \"@mui/material/Chip\";\n\n\nexport default function Fav() {\n  const [menu, setMenu] = useState([]);\n  const [sortedmenu, setSortedMenu] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(\"\");\n\n\n  // Fill up the rows array with data.\n  useEffect(() => {\n    // Get all documents from the database for item for the particular vendor\n    axios\n      .post(\"http://localhost:4000/buyer/getfavourites\", {\n        email: ls.get(\"email\"),\n      })\n      .then((response) => {\n        setMenu(response.data);\n        setSortedMenu(response.data);\n        console.log(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [refresh]);\n\n  const handlefavourite = (key) => {\n      axios\n        .post(\"http://localhost:4000/buyer/removefavourite\", {\n            email: ls.get(\"email\"),\n            _id: key\n        })\n        .then((response) => {\n            console.log(response);\n            setRefresh(!refresh);\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    };\n\n\n  return (\n    <div>\n      <Box>\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>ItemName</TableCell>\n                <TableCell align=\"center\">Image</TableCell>\n                <TableCell align=\"center\">ShopName</TableCell>\n                <TableCell align=\"center\">Price</TableCell>\n                <TableCell align=\"center\">Veg/Non-Veg</TableCell>\n                <TableCell align=\"center\">Tags</TableCell>\n                {/* Buying Stages */}\n                <TableCell align=\"center\">AddOns</TableCell>\n                <TableCell align=\"center\"></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {sortedmenu.map((row) => (\n                <TableRow\n                  key={row._id}\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.itemname}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <img\n                      src={row.image}\n                      alt=\"food\"\n                      style={{ width: \"120px\", height: \"100px\" }}\n                    />\n                  </TableCell>\n                  <TableCell align=\"center\">{row.shopname}</TableCell>\n                  <TableCell align=\"center\">Rs.{row.price}</TableCell>\n                  <TableCell align=\"center\">\n                    {row.veg === true ? \"Veg\" : \"Non-Veg\"}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {row.tags.map((tag) => (\n                      <div spacing={2} key={tag}>\n                        <Stack spacing={2}>\n                          <Chip label={tag} key={tag} />\n                        </Stack>\n                      </div>\n                    ))}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {row.addonname.map((addon, index) => (\n                      <div spacing={2} key={index}>\n                        <Stack spacing={2}>\n                          {/* Addonname and addonprice */}\n                          <Chip\n                            label={`${addon}: Rs.${row.addonprice[index]}`}\n                            key={index}\n                          />\n                        </Stack>\n                      </div>\n                    ))}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={() => handlefavourite(row._id)}\n                    >\n                      Remove from Favourites\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}