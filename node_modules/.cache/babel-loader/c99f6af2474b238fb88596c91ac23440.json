{"ast":null,"code":"var _jsxFileName = \"/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/BuyerDashboard.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useEffect, useState } from \"react\";\nimport ls, { set } from \"local-storage\";\nimport axios from \"axios\";\nimport { Button } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { createTheme } from \"@mui/material/styles\";\nimport { deepOrange } from \"@mui/material/colors\";\nimport { yellow } from \"@mui/material/colors\";\nimport Chip from \"@mui/material/Chip\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport { TextField } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Dialog from \"@mui/material/Dialog\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Rating from \"@mui/material/Rating\";\nimport Fav from \"./Favourites\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Typography from \"@mui/material/Typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};\n\nfunction Print() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Meh...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Print;\nvar array1 = [];\nvar array2 = [];\nvar arrayopen = [];\nvar arrayclose = [];\nexport default function Myitem() {\n  _s();\n\n  const [menu, setMenu] = useState([]);\n  const [sortedmenu, setSortedMenu] = useState([]);\n  const [menuaftersearch, setMenuaftersearch] = useState([]);\n  const [menuafterveg, setMenuafterveg] = useState([]);\n  const [menuafterprice, setMenuafterprice] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  const [openshops, setOpenshops] = useState([]);\n  const [closedshops, setClosedshops] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [minprice, setMinPrice] = useState(0);\n  const [maxprice, setMaxPrice] = useState(1000);\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  const [vegtrue, setVegtrue] = useState(true);\n  const [nonvegtrue, setNonvegtrue] = useState(true);\n  const [shopnames, setShopnames] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [selectedshopnames, setSelectedshopnames] = useState([]);\n  const [selectedtags, setSelectedtags] = useState([]);\n  const [wallet, setWallet] = useState(0);\n  const [meh, setMeh] = useState(false);\n\n  const handleClickOpen = props => {\n    // console.log(props);\n    //set selected value as props\n    setSelectedValue(props);\n    console.log(selectedValue);\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  }; // Fill up the rows array with data.\n\n\n  useEffect(() => {\n    // Get all documents from the database for item for the particular vendor\n    console.log(time);\n    axios.post(\"http://localhost:4000/buyer/showmenu\").then(res => {\n      setMenu(res.data);\n      array1 = res.data;\n      array2 = res.data;\n      array3 = res.data;\n      setSortedMenu(res.data); //All items\n\n      setShopnames(res.data.map(item => item.shopname)); //Remove duplicates\n\n      const shopnames = [...new Set(res.data.map(item => item.shopname))];\n      setShopnames(shopnames); //List of tags\n\n      var arrtags = [];\n      res.data.forEach(item => {\n        for (var i = 0; i < item.tags.length; i++) {\n          arrtags.push(item.tags[i]);\n        }\n      }); //Remove duplicates from tags\n\n      const xtags = [...new Set(arrtags)];\n      setTags(xtags);\n    }).catch(err => {\n      console.log(err);\n    });\n    axios.post(\"http://localhost:4000/buyer/walletdetails\", {\n      email: ls.get(\"email\")\n    }).then(res => {\n      setWallet(res.data.wallet);\n      ls.set(\"wallet\", res.data.wallet);\n    }).catch(err => {\n      console.log(err);\n    }); //If time is between openingtime and closingtime of the shop, then the shop is open\n    // setOpenshops(menu.filter(item => item.openingtime <= time && item.closingtime >= time));\n    //If time is not between openingtime and closingtime of the shop, then the shop is closed\n    // setClosedshops(menu.filter(item => item.openingtime > time || item.closingtime < time));\n\n    handlefilter();\n  }, [refresh]);\n\n  const handlefavourite = key => {\n    //add to favourites\n    axios.post(\"http://localhost:4000/buyer/addfavourite\", {\n      _id: key,\n      email: ls.get(\"email\")\n    }).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handlefilter = props => {\n    //Time in \"hh:mm\" format\n    var today = new Date();\n    var time = today.getHours() + \":\" + today.getMinutes();\n    console.log(time); //filter according to search keyword irrespective of case\n\n    array2 = array1;\n\n    if (search !== \"\") {\n      array2 = array2.filter(item => item.itemname.toLowerCase().includes(search.toLowerCase()));\n    } //filter according to veg and nonveg\n\n\n    if (vegtrue === true && nonvegtrue === false) {\n      array2 = array2.filter(item => item.veg === true);\n    } else if (vegtrue === false && nonvegtrue === true) {\n      array2 = array2.filter(item => item.veg === false);\n    } // //filter according to price\n\n\n    if (minprice !== \"\" && maxprice !== \"\") {\n      array2 = array2.filter(item => item.price >= minprice && item.price <= maxprice);\n    } else if (minprice !== \"\") {\n      array2 = array2.filter(item => item.price >= minprice);\n    } else if (maxprice !== \"\") {\n      array2 = array2.filter(item => item.price <= maxprice);\n    } else if (minprice === \"\" && maxprice === \"\") {\n      array2 = array2.filter(item => item.price >= 0 && item.price <= 100000);\n    } // //filter according to shopname\n\n\n    if (selectedshopnames.length !== 0) {\n      array2 = array2.filter(item => selectedshopnames.includes(item.shopname));\n    } //filter accoring to tags\n\n\n    if (selectedtags.length !== 0) {\n      array2 = array2.filter(item => {\n        var flag = false;\n\n        for (var i = 0; i < item.tags.length; i++) {\n          if (selectedtags.includes(item.tags[i])) {\n            flag = true;\n          }\n        }\n\n        return flag;\n      });\n    }\n\n    if (props === 1) //ascending by price\n      array2 = array2.sort((a, b) => a.price - b.price);else if (props === 2) //descending by price\n      array2 = array2.sort((a, b) => b.price - a.price);else if (props === 3) //ascending by rating\n      array2 = array2.sort((a, b) => a.rating - b.rating);else if (props === 4) //descending by rating\n      array2 = array2.sort((a, b) => b.rating - a.rating); // Filter out only open shops\n    // array2.filter((item) => {\n    //   if (item.openingtime <= time && item.closingtime >= time) {\n    //     setSortedMenu(item);\n    //   } else {\n    //     // setClosedshops(item);\n    //   }\n    // });\n\n    setSortedMenu(array2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"right\",\n        justifyContent: \"right\",\n        p: 1,\n        m: 1,\n        css: {\n          maxWidth: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Wallet\",\n          variant: \"filled\",\n          value: wallet,\n          InputProps: {\n            readOnly: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(AppBar, {\n          position: \"static\",\n          children: /*#__PURE__*/_jsxDEV(Toolbar, {\n            variant: \"dense\",\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"large\",\n              edge: \"start\",\n              color: \"inherit\",\n              \"aria-label\": \"menu\",\n              sx: {\n                mr: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"div\",\n              sx: {\n                flexGrow: 1\n              },\n              children: \"Favourites\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Fav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          \"& > :not(style)\": {\n            m: 1,\n            width: \"25ch\"\n          }\n        },\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Search\",\n          variant: \"outlined\" //Search for items which includes the word and refresh the menu\n          //lowercase\n          ,\n          onChange: e => {\n            setSearch(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: vegtrue,\n              label: \"Veg\" //pass checkbox value to handlecheckboxes\n              ,\n              onChange: e => {\n                setVegtrue(e.target.checked);\n              },\n              inputProps: {\n                \"aria-label\": \"primary checkbox\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this),\n            label: \"Veg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: nonvegtrue,\n              label: \"Non-Veg\",\n              onChange: e => {\n                setNonvegtrue(e.target.checked);\n              },\n              inputProps: {\n                \"aria-label\": \"primary checkbox\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this),\n            label: \"Non-Veg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          \"& > :not(style)\": {\n            m: 1,\n            width: \"25ch\",\n            height: \"7ch\"\n          }\n        },\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Minimum Price\",\n          variant: \"outlined\",\n          type: \"number\",\n          onChange: e => {\n            setMinPrice(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Maximum Price\",\n          variant: \"outlined\",\n          type: \"number\",\n          onChange: e => {\n            setMaxPrice(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          \"& > :not(style)\": {\n            m: 1,\n            width: \"25ch\"\n          }\n        },\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-outlined-label\",\n            children: \"Select Shop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-simple-select-outlined-label\",\n            id: \"demo-simple-select-outlined\",\n            defaultValue: \"\",\n            multiple: true,\n            value: selectedshopnames,\n            onChange: e => {\n              setSelectedshopnames(e.target.value);\n            },\n            label: \"Select Shop\",\n            children: shopnames.map(item => {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item,\n                children: item\n              }, item, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-outlined-label\",\n            children: \"Select Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-simple-select-outlined-label\",\n            id: \"demo-simple-select-outlined\",\n            defaultValue: \"\",\n            multiple: true,\n            value: selectedtags,\n            onChange: e => {\n              setSelectedtags(e.target.value);\n            },\n            label: \"Select Tags\",\n            children: tags.map(item => {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item,\n                children: item\n              }, item, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          \"& > :not(style)\": {\n            m: 1,\n            width: \"25ch\",\n            height: \"7ch\"\n          }\n        },\n        noValidate: true,\n        autoComplete: \"off\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: () => {\n            handlefilter(0);\n          },\n          children: \"Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          \"& > :not(style)\": {\n            m: 1,\n            width: \"25ch\",\n            height: \"7ch\"\n          }\n        },\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => {\n            handlefilter(1);\n          },\n          children: \"Ascending by Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => {\n            handlefilter(2);\n          },\n          children: \"Descending by Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => {\n            handlefilter(3);\n          },\n          children: \"Ascending by Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => {\n            handlefilter(4);\n          },\n          children: \"Descending by Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(AppBar, {\n          position: \"static\",\n          children: /*#__PURE__*/_jsxDEV(Toolbar, {\n            variant: \"dense\",\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"large\",\n              edge: \"start\",\n              color: \"inherit\",\n              \"aria-label\": \"menu\",\n              sx: {\n                mr: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"div\",\n              sx: {\n                flexGrow: 1\n              },\n              children: \"Menu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Fav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"ItemName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"ShopName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Veg/Non-Veg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Tags\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"AddOns\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Rating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: sortedmenu.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                \"&:last-child td, &:last-child th\": {\n                  border: 0\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: row.itemname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: row.image,\n                  alt: \"food\",\n                  style: {\n                    width: \"120px\",\n                    height: \"100px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 569,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.shopname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: [\"Rs.\", row.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.veg === true ? \"Veg\" : \"Non-Veg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.tags.map(tag => /*#__PURE__*/_jsxDEV(\"div\", {\n                  spacing: 2,\n                  children: /*#__PURE__*/_jsxDEV(Stack, {\n                    spacing: 2,\n                    children: /*#__PURE__*/_jsxDEV(Chip, {\n                      label: tag\n                    }, tag, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 584,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 583,\n                    columnNumber: 25\n                  }, this)\n                }, tag, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.addonname.map((addon, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  spacing: 2,\n                  children: /*#__PURE__*/_jsxDEV(Stack, {\n                    spacing: 2,\n                    children: /*#__PURE__*/_jsxDEV(Chip, {\n                      label: `${addon}: Rs.${row.addonprice[index]}`\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 594,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 592,\n                    columnNumber: 25\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Rating, {\n                  name: \"read-only\",\n                  value: row.rating,\n                  readOnly: true,\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 604,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 602,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"secondary\",\n                  onClick: () => handlefavourite(row._id),\n                  children: \"Add to Favourites\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 612,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"secondary\",\n                  onClick: () => handleClickOpen(row._id),\n                  children: \"Buy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 621,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 19\n              }, this)]\n            }, row._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 9\n      }, this), open ? /*#__PURE__*/_jsxDEV(SimpleDialog, {\n        selectedValue: selectedValue,\n        open: open,\n        onClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Myitem, \"9IcXrUbdagGJvLP9Nx38D9MK+2w=\");\n\n_c2 = Myitem;\n\nfunction SimpleDialog(props) {\n  _s2();\n\n  const {\n    onClose,\n    selectedValue,\n    open\n  } = props;\n  const [quantity, setQuantity] = useState(1);\n  const [itemname, setItemname] = useState(\"\");\n  const [shopname, setShopname] = useState(\"\");\n  const [vendoremail, setVendoremail] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [addonname, setAddonname] = useState([]);\n  const [addonprice, setAddonprice] = useState([]);\n  const [selectedaddonname, setSelectedaddonname] = useState([]);\n  const [selectedaddonprice, setSelectedaddonprice] = useState([]);\n  const [totalprice, setTotalprice] = useState(0);\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handlebuy = () => {\n    //get time in int\n    const time = new Date().getTime(); // convert quantity to int\n\n    const q = parseInt(quantity);\n    var p = parseInt(price); // run loop on addonprice\n\n    for (let i = 0; i < selectedaddonprice.length; i++) {\n      // convert addonprice to int\n      const ap = parseInt(selectedaddonprice[i]); // add addonprice to p\n\n      p = p + ap;\n    } // add quantity to p\n\n\n    p = p * q;\n\n    if (p > ls.get(\"wallet\")) {\n      alert(\"Insufficient Balance\");\n      onClose();\n    } else {\n      console.log({\n        itemname: itemname,\n        shopname: shopname,\n        price: price,\n        addonname: selectedaddonname,\n        addonprice: selectedaddonprice,\n        quantity: q,\n        totalprice: p,\n        time: time\n      });\n      axios.post(\"http://localhost:4000/buyer/orderitem\", {\n        item_id: selectedValue,\n        itemname: itemname,\n        vendoremail: vendoremail,\n        shopname: shopname,\n        buyeremail: ls.get(\"email\"),\n        buyername: ls.get(\"username\"),\n        placedtime: time,\n        quantity: q,\n        addonname: selectedaddonname,\n        addonprice: selectedaddonprice,\n        totalprice: p\n      }).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      }); //deduct money\n\n      axios.post(\"http://localhost:4000/buyer/deductmoney\", {\n        email: ls.get(\"email\"),\n        amount: p\n      }).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n      onClose();\n    }\n  };\n\n  const [refresh, setRefresh] = useState(false);\n  useEffect(() => {\n    axios.post(\"http://localhost:4000/buyer/getitem\", {\n      _id: selectedValue\n    }).then(res => {\n      setItemname(res.data.itemname);\n      setShopname(res.data.shopname);\n      setPrice(res.data.price);\n      setAddonname(res.data.addonname);\n      setAddonprice(res.data.addonprice);\n      setVendoremail(res.data.manageremail);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    if (selectedValue === \"\" || selectedValue === undefined) {\n      setRefresh(!refresh);\n    }\n  }, [refresh]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"A few more steps...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 751,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"ItemName\",\n          variant: \"outlined\",\n          value: itemname,\n          InputProps: {\n            readOnly: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"ShopName\",\n          variant: \"outlined\",\n          value: shopname,\n          InputProps: {\n            readOnly: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Price\",\n          variant: \"outlined\",\n          value: price,\n          InputProps: {\n            readOnly: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"quantity\",\n          label: \"Quantity\",\n          type: \"number\",\n          variant: \"outlined\",\n          defaultValue: 1,\n          onChange: e => {\n            setQuantity(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-outlined-label\",\n            children: \"AddOns\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-simple-select-outlined-label\",\n            id: \"demo-simple-select-outlined\",\n            multiple: true,\n            value: selectedaddonname,\n            onChange: e => {\n              setSelectedaddonname(e.target.value); // Set selectedaddonprice as the same index as selectedaddonname\n\n              setSelectedaddonprice(e.target.value.map(addon => {\n                return addonprice[addonname.indexOf(addon)];\n              }));\n            },\n            label: \"AddOns\",\n            variant: \"outlined\",\n            children: addonname.map(addon => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: addon,\n              children: addon\n            }, addon, false, {\n              fileName: _jsxFileName,\n              lineNumber: 817,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 799,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 825,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handlebuy,\n      children: \"Buy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 826,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 750,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(SimpleDialog, \"wUsPwNzkySTK8d9h8V/e7YQdc6I=\");\n\n_c3 = SimpleDialog;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Print\");\n$RefreshReg$(_c2, \"Myitem\");\n$RefreshReg$(_c3, \"SimpleDialog\");","map":{"version":3,"sources":["/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/BuyerDashboard.js"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useEffect","useState","ls","set","axios","Button","Box","Stack","InputLabel","MenuItem","FormControl","Select","createTheme","deepOrange","yellow","Chip","OutlinedInput","TextField","PropTypes","DialogTitle","Dialog","Checkbox","FormGroup","FormControlLabel","Rating","Fav","AppBar","Toolbar","IconButton","MenuIcon","Typography","SimpleDialog","propTypes","onClose","func","isRequired","open","bool","selectedValue","string","Print","array1","array2","arrayopen","arrayclose","Myitem","menu","setMenu","sortedmenu","setSortedMenu","menuaftersearch","setMenuaftersearch","menuafterveg","setMenuafterveg","menuafterprice","setMenuafterprice","refresh","setRefresh","openshops","setOpenshops","closedshops","setClosedshops","search","setSearch","minprice","setMinPrice","maxprice","setMaxPrice","setOpen","setSelectedValue","vegtrue","setVegtrue","nonvegtrue","setNonvegtrue","shopnames","setShopnames","tags","setTags","selectedshopnames","setSelectedshopnames","selectedtags","setSelectedtags","wallet","setWallet","meh","setMeh","handleClickOpen","props","console","log","handleClose","value","time","post","then","res","data","array3","map","item","shopname","Set","arrtags","forEach","i","length","push","xtags","catch","err","email","get","handlefilter","handlefavourite","key","_id","today","Date","getHours","getMinutes","filter","itemname","toLowerCase","includes","veg","price","flag","sort","a","b","rating","maxWidth","readOnly","flexGrow","mr","m","width","e","target","checked","height","minWidth","row","border","image","tag","addonname","addon","index","addonprice","quantity","setQuantity","setItemname","setShopname","vendoremail","setVendoremail","setPrice","setAddonname","setAddonprice","selectedaddonname","setSelectedaddonname","selectedaddonprice","setSelectedaddonprice","totalprice","setTotalprice","handlebuy","getTime","q","parseInt","p","ap","alert","item_id","buyeremail","buyername","placedtime","amount","manageremail","undefined","indexOf"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useEffect, useState } from \"react\";\nimport ls, { set } from \"local-storage\";\nimport axios from \"axios\";\nimport { Button } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { createTheme } from \"@mui/material/styles\";\nimport { deepOrange } from \"@mui/material/colors\";\nimport { yellow } from \"@mui/material/colors\";\nimport Chip from \"@mui/material/Chip\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport { TextField } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Dialog from \"@mui/material/Dialog\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Rating from \"@mui/material/Rating\";\nimport Fav from \"./Favourites\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Typography from \"@mui/material/Typography\";\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\nfunction Print() {\n  return <div>Meh...</div>;\n}\nvar array1 = [];\nvar array2 = [];\nvar arrayopen = [];\nvar arrayclose = [];\n\nexport default function Myitem() {\n  const [menu, setMenu] = useState([]);\n  const [sortedmenu, setSortedMenu] = useState([]);\n  const [menuaftersearch, setMenuaftersearch] = useState([]);\n  const [menuafterveg, setMenuafterveg] = useState([]);\n  const [menuafterprice, setMenuafterprice] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n\n  const [openshops, setOpenshops] = useState([]);\n  const [closedshops, setClosedshops] = useState([]);\n\n  const [search, setSearch] = useState(\"\");\n  const [minprice, setMinPrice] = useState(0);\n  const [maxprice, setMaxPrice] = useState(1000);\n\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  const [vegtrue, setVegtrue] = useState(true);\n  const [nonvegtrue, setNonvegtrue] = useState(true);\n\n  const [shopnames, setShopnames] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [selectedshopnames, setSelectedshopnames] = useState([]);\n  const [selectedtags, setSelectedtags] = useState([]);\n\n  const [wallet, setWallet] = useState(0);\n\n  const [meh, setMeh] = useState(false);\n\n  const handleClickOpen = (props) => {\n    // console.log(props);\n    //set selected value as props\n    setSelectedValue(props);\n    console.log(selectedValue);\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  // Fill up the rows array with data.\n  useEffect(() => {\n    // Get all documents from the database for item for the particular vendor\n    console.log(time);\n    axios\n      .post(\"http://localhost:4000/buyer/showmenu\")\n      .then((res) => {\n        setMenu(res.data);\n        array1 = res.data;\n        array2 = res.data;\n        array3 = res.data;\n        setSortedMenu(res.data);\n        //All items\n        setShopnames(res.data.map((item) => item.shopname));\n        //Remove duplicates\n        const shopnames = [...new Set(res.data.map((item) => item.shopname))];\n        setShopnames(shopnames);\n        //List of tags\n        var arrtags = [];\n        res.data.forEach((item) => {\n          for (var i = 0; i < item.tags.length; i++) {\n            arrtags.push(item.tags[i]);\n          }\n        });\n        //Remove duplicates from tags\n        const xtags = [...new Set(arrtags)];\n        setTags(xtags);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    axios\n      .post(\"http://localhost:4000/buyer/walletdetails\", {\n        email: ls.get(\"email\"),\n      })\n      .then((res) => {\n        setWallet(res.data.wallet);\n        ls.set(\"wallet\", res.data.wallet);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    //If time is between openingtime and closingtime of the shop, then the shop is open\n    // setOpenshops(menu.filter(item => item.openingtime <= time && item.closingtime >= time));\n    //If time is not between openingtime and closingtime of the shop, then the shop is closed\n    // setClosedshops(menu.filter(item => item.openingtime > time || item.closingtime < time));\n    handlefilter();\n  }, [refresh]);\n\n  const handlefavourite = (key) => {\n    //add to favourites\n    axios\n      .post(\"http://localhost:4000/buyer/addfavourite\", {\n        _id: key,\n        email: ls.get(\"email\"),\n      })\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handlefilter = (props) => {\n    //Time in \"hh:mm\" format\n    var today = new Date();\n    var time = today.getHours() + \":\" + today.getMinutes();\n    console.log(time);\n    //filter according to search keyword irrespective of case\n    array2 = array1;\n    if (search !== \"\") {\n      array2 = array2.filter((item) =>\n        item.itemname.toLowerCase().includes(search.toLowerCase())\n      );\n    }\n\n    //filter according to veg and nonveg\n    if (vegtrue === true && nonvegtrue === false) {\n      array2 = array2.filter((item) => item.veg === true);\n    } else if (vegtrue === false && nonvegtrue === true) {\n      array2 = array2.filter((item) => item.veg === false);\n    }\n    // //filter according to price\n    if (minprice !== \"\" && maxprice !== \"\") {\n      array2 = array2.filter(\n        (item) => item.price >= minprice && item.price <= maxprice\n      );\n    } else if (minprice !== \"\") {\n      array2 = array2.filter((item) => item.price >= minprice);\n    } else if (maxprice !== \"\") {\n      array2 = array2.filter((item) => item.price <= maxprice);\n    } else if (minprice === \"\" && maxprice === \"\") {\n      array2 = array2.filter((item) => item.price >= 0 && item.price <= 100000);\n    }\n    // //filter according to shopname\n    if (selectedshopnames.length !== 0) {\n      array2 = array2.filter((item) =>\n        selectedshopnames.includes(item.shopname)\n      );\n    }\n    //filter accoring to tags\n    if (selectedtags.length !== 0) {\n      array2 = array2.filter((item) => {\n        var flag = false;\n        for (var i = 0; i < item.tags.length; i++) {\n          if (selectedtags.includes(item.tags[i])) {\n            flag = true;\n          }\n        }\n        return flag;\n      });\n    }\n\n    if (props === 1)\n      //ascending by price\n      array2 = array2.sort((a, b) => a.price - b.price);\n    else if (props === 2)\n      //descending by price\n      array2 = array2.sort((a, b) => b.price - a.price);\n    else if (props === 3)\n      //ascending by rating\n      array2 = array2.sort((a, b) => a.rating - b.rating);\n    else if (props === 4)\n      //descending by rating\n      array2 = array2.sort((a, b) => b.rating - a.rating);\n\n    // Filter out only open shops\n    // array2.filter((item) => {\n    //   if (item.openingtime <= time && item.closingtime >= time) {\n    //     setSortedMenu(item);\n    //   } else {\n    //     // setClosedshops(item);\n    //   }\n    // });\n\n    setSortedMenu(array2);\n  };\n  return (\n    <div>\n      <div>\n        <Box\n          display=\"flex\"\n          flexDirection=\"row\"\n          alignItems=\"right\"\n          justifyContent=\"right\"\n          p={1}\n          m={1}\n          css={{ maxWidth: \"100%\" }}\n        >\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Wallet\"\n            variant=\"filled\"\n            value={wallet}\n            InputProps={{\n              readOnly: true,\n            }}\n          />\n        </Box>\n      </div>\n      <div>\n        <Box sx={{ flexGrow: 1 }}>\n          <AppBar position=\"static\">\n            <Toolbar variant=\"dense\">\n              <IconButton\n                size=\"large\"\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"menu\"\n                sx={{ mr: 2 }}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                Favourites\n              </Typography>\n            </Toolbar>\n          </AppBar>\n        </Box>\n        <Fav />\n      </div>\n      {/* Filters */}\n\n      <div>\n        <Box\n          component=\"form\"\n          sx={{\n            \"& > :not(style)\": { m: 1, width: \"25ch\" },\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Search\"\n            variant=\"outlined\"\n            //Search for items which includes the word and refresh the menu\n            //lowercase\n            onChange={(e) => {\n              setSearch(e.target.value);\n            }}\n          />\n\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={vegtrue}\n                  label=\"Veg\"\n                  //pass checkbox value to handlecheckboxes\n                  onChange={(e) => {\n                    setVegtrue(e.target.checked);\n                  }}\n                  inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                />\n              }\n              label=\"Veg\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={nonvegtrue}\n                  label=\"Non-Veg\"\n                  onChange={(e) => {\n                    setNonvegtrue(e.target.checked);\n                  }}\n                  inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                />\n              }\n              label=\"Non-Veg\"\n            />\n          </FormGroup>\n        </Box>\n        <br />\n        {/* Price range having minimum and maximum values */}\n        <Box\n          component=\"form\"\n          sx={{\n            \"& > :not(style)\": { m: 1, width: \"25ch\", height: \"7ch\" },\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Minimum Price\"\n            variant=\"outlined\"\n            type=\"number\"\n            onChange={(e) => {\n              setMinPrice(e.target.value);\n            }}\n          />\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Maximum Price\"\n            variant=\"outlined\"\n            type=\"number\"\n            onChange={(e) => {\n              setMaxPrice(e.target.value);\n            }}\n          />\n          {/* <Box\n          component=\"form\"\n          sx={{\n            \"& > :not(style)\": { m: 1, width: \"25ch\" },\n          }}\n          noValidate\n          autoComplete=\"off\"\n          >\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setMenuafterprice(\n                menuafterveg.filter((item) => {\n                  return item.price >= minprice && item.price <= maxprice;\n                })\n              );\n            }}\n          >\n            Apply\n          </Button>\n        </Box> */}\n        </Box>\n        {/* <br /> */}\n        <Box\n          component=\"form\"\n          sx={{\n            \"& > :not(style)\": { m: 1, width: \"25ch\" },\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n          {/* Create multiselect for selecting shops */}\n          <FormControl variant=\"outlined\">\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Select Shop\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              defaultValue={\"\"}\n              multiple\n              value={selectedshopnames}\n              onChange={(e) => {\n                setSelectedshopnames(e.target.value);\n              }}\n              label=\"Select Shop\"\n            >\n              {shopnames.map((item) => {\n                return (\n                  <MenuItem key={item} value={item}>\n                    {item}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n          {/* </Box>\n        <Box\n          component=\"form\"\n          sx={{\n            \"& > :not(style)\": { m: 1, width: \"25ch\" },\n          }}\n          noValidate\n          autoComplete=\"off\"\n        > */}\n          {/* Create multiselect for selecting tags */}\n          <FormControl variant=\"outlined\">\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Select Tags\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              defaultValue={\"\"}\n              multiple\n              value={selectedtags}\n              onChange={(e) => {\n                setSelectedtags(e.target.value);\n              }}\n              label=\"Select Tags\"\n            >\n              {tags.map((item) => {\n                return (\n                  <MenuItem key={item} value={item}>\n                    {item}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </Box>\n        <Box\n          component=\"form\"\n          sx={{\n            \"& > :not(style)\": { m: 1, width: \"25ch\", height: \"7ch\" },\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              handlefilter(0);\n            }}\n          >\n            Filter\n          </Button>\n        </Box>\n        <Box\n          component=\"form\"\n          sx={{\n            \"& > :not(style)\": { m: 1, width: \"25ch\", height: \"7ch\" },\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n          {/* Ascending by price button */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              handlefilter(1);\n            }}\n          >\n            Ascending by Price\n          </Button>\n          {/* Descending by price button */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              handlefilter(2);\n            }}\n          >\n            Descending by Price\n          </Button>\n          {/* Ascending by rating */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              handlefilter(3);\n            }}\n          >\n            Ascending by Rating\n          </Button>\n          {/* Descending by rating */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              handlefilter(4);\n            }}\n          >\n            Descending by Rating\n          </Button>\n        </Box>\n      </div>\n      <div>\n        <Box sx={{ flexGrow: 1 }}>\n          <AppBar position=\"static\">\n            <Toolbar variant=\"dense\">\n              <IconButton\n                size=\"large\"\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"menu\"\n                sx={{ mr: 2 }}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                Menu\n              </Typography>\n            </Toolbar>\n          </AppBar>\n        </Box>\n        <Fav />\n      </div>\n      {/* Menu */}\n      <Box>\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>ItemName</TableCell>\n                <TableCell align=\"center\">Image</TableCell>\n                <TableCell align=\"center\">ShopName</TableCell>\n                <TableCell align=\"center\">Price</TableCell>\n                <TableCell align=\"center\">Veg/Non-Veg</TableCell>\n                <TableCell align=\"center\">Tags</TableCell>\n                {/* Buying Stages */}\n                <TableCell align=\"center\">AddOns</TableCell>\n                <TableCell align=\"center\">Rating</TableCell>\n                <TableCell align=\"center\"></TableCell>\n                <TableCell align=\"center\"></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {sortedmenu.map((row) => (\n                <TableRow\n                  key={row._id}\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.itemname}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <img\n                      src={row.image}\n                      alt=\"food\"\n                      style={{ width: \"120px\", height: \"100px\" }}\n                    />\n                  </TableCell>\n                  <TableCell align=\"center\">{row.shopname}</TableCell>\n                  <TableCell align=\"center\">Rs.{row.price}</TableCell>\n                  <TableCell align=\"center\">\n                    {row.veg === true ? \"Veg\" : \"Non-Veg\"}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {row.tags.map((tag) => (\n                      <div spacing={2} key={tag}>\n                        <Stack spacing={2}>\n                          <Chip label={tag} key={tag} />\n                        </Stack>\n                      </div>\n                    ))}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {row.addonname.map((addon, index) => (\n                      <div spacing={2} key={index}>\n                        <Stack spacing={2}>\n                          {/* Addonname and addonprice */}\n                          <Chip\n                            label={`${addon}: Rs.${row.addonprice[index]}`}\n                            key={index}\n                          />\n                        </Stack>\n                      </div>\n                    ))}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {/* Rating */}\n                    <Rating\n                      name=\"read-only\"\n                      value={row.rating}\n                      readOnly\n                      size=\"small\"\n                    />\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={() => handlefavourite(row._id)}\n                    >\n                      Add to Favourites\n                    </Button>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={() => handleClickOpen(row._id)}\n                    >\n                      Buy\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        {open ? (\n          <SimpleDialog\n            selectedValue={selectedValue}\n            open={open}\n            onClose={handleClose}\n          />\n        ) : null}\n      </Box>\n    </div>\n  );\n}\n\nfunction SimpleDialog(props) {\n  const { onClose, selectedValue, open } = props;\n  const [quantity, setQuantity] = useState(1);\n  const [itemname, setItemname] = useState(\"\");\n  const [shopname, setShopname] = useState(\"\");\n  const [vendoremail, setVendoremail] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [addonname, setAddonname] = useState([]);\n  const [addonprice, setAddonprice] = useState([]);\n  const [selectedaddonname, setSelectedaddonname] = useState([]);\n  const [selectedaddonprice, setSelectedaddonprice] = useState([]);\n  const [totalprice, setTotalprice] = useState(0);\n  const handleClose = () => {\n    onClose();\n  };\n  const handlebuy = () => {\n    //get time in int\n    const time = new Date().getTime();\n    // convert quantity to int\n    const q = parseInt(quantity);\n    var p = parseInt(price);\n    // run loop on addonprice\n    for (let i = 0; i < selectedaddonprice.length; i++) {\n      // convert addonprice to int\n      const ap = parseInt(selectedaddonprice[i]);\n      // add addonprice to p\n      p = p + ap;\n    }\n    // add quantity to p\n    p = p * q;\n    if (p > ls.get(\"wallet\")) {\n      alert(\"Insufficient Balance\");\n      onClose();\n    } else {\n      console.log({\n        itemname: itemname,\n        shopname: shopname,\n        price: price,\n        addonname: selectedaddonname,\n        addonprice: selectedaddonprice,\n        quantity: q,\n        totalprice: p,\n        time: time,\n      });\n      axios\n        .post(\"http://localhost:4000/buyer/orderitem\", {\n          item_id: selectedValue,\n          itemname: itemname,\n          vendoremail: vendoremail,\n          shopname: shopname,\n          buyeremail: ls.get(\"email\"),\n          buyername: ls.get(\"username\"),\n          placedtime: time,\n          quantity: q,\n          addonname: selectedaddonname,\n          addonprice: selectedaddonprice,\n          totalprice: p,\n        })\n        .then((res) => {\n          console.log(res);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      //deduct money\n      axios\n        .post(\"http://localhost:4000/buyer/deductmoney\", {\n          email: ls.get(\"email\"),\n          amount: p,\n        })\n        .then((res) => {\n          console.log(res);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      onClose();\n    }\n  };\n\n  const [refresh, setRefresh] = useState(false);\n\n  useEffect(() => {\n    axios\n      .post(\"http://localhost:4000/buyer/getitem\", {\n        _id: selectedValue,\n      })\n      .then((res) => {\n        setItemname(res.data.itemname);\n        setShopname(res.data.shopname);\n        setPrice(res.data.price);\n        setAddonname(res.data.addonname);\n        setAddonprice(res.data.addonprice);\n        setVendoremail(res.data.manageremail);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    if (selectedValue === \"\" || selectedValue === undefined) {\n      setRefresh(!refresh);\n    }\n  }, [refresh]);\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>A few more steps...</DialogTitle>\n      <br></br>\n      {/* Details of the product */}\n      {/* {selectedValue} */}\n      <Box>\n        <Stack spacing={2}>\n          <TextField\n            id=\"outlined-basic\"\n            label=\"ItemName\"\n            variant=\"outlined\"\n            value={itemname}\n            InputProps={{\n              readOnly: true,\n            }}\n          />\n          <TextField\n            id=\"outlined-basic\"\n            label=\"ShopName\"\n            variant=\"outlined\"\n            value={shopname}\n            InputProps={{\n              readOnly: true,\n            }}\n          />\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Price\"\n            variant=\"outlined\"\n            value={price}\n            InputProps={{\n              readOnly: true,\n            }}\n          />\n          <TextField\n            id=\"quantity\"\n            label=\"Quantity\"\n            type=\"number\"\n            variant=\"outlined\"\n            defaultValue={1}\n            onChange={(e) => {\n              setQuantity(e.target.value);\n            }}\n          />\n          {/* Multi select AddOns */}\n          <FormControl variant=\"outlined\">\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              AddOns\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              multiple\n              value={selectedaddonname}\n              onChange={(e) => {\n                setSelectedaddonname(e.target.value);\n                // Set selectedaddonprice as the same index as selectedaddonname\n                setSelectedaddonprice(\n                  e.target.value.map((addon) => {\n                    return addonprice[addonname.indexOf(addon)];\n                  })\n                );\n              }}\n              label=\"AddOns\"\n              variant=\"outlined\"\n            >\n              {addonname.map((addon) => (\n                <MenuItem key={addon} value={addon}>\n                  {addon}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Stack>\n      </Box>\n      <br></br>\n      <Button variant=\"contained\" color=\"primary\" onClick={handlebuy}>\n        Buy\n      </Button>\n      {/* Set quantity to order */}\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}