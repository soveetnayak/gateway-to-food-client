{"ast":null,"code":"var _jsxFileName = \"/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/BuyerDashboard.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useEffect, useState } from \"react\";\nimport ls from \"local-storage\";\nimport axios from \"axios\";\nimport { Button } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { createTheme } from \"@mui/material/styles\";\nimport { deepOrange } from \"@mui/material/colors\";\nimport { yellow } from \"@mui/material/colors\";\nimport Chip from \"@mui/material/Chip\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport { TextField } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Dialog from \"@mui/material/Dialog\";\nimport Checkbox from '@mui/material/Checkbox';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Rating from \"@mui/material/Rating\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};\nexport default function Myitem() {\n  _s();\n\n  const [menu, setMenu] = useState([]);\n  const [sortedmenu, setSortedMenu] = useState([]);\n  const [menuaftersearch, setMenuaftersearch] = useState([]);\n  const [menuafterveg, setMenuafterveg] = useState([]);\n  const [menuafterprice, setMenuafterprice] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  const [openshops, setOpenshops] = useState([]);\n  const [closedshops, setClosedshops] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [minprice, setMinPrice] = useState(0);\n  const [maxprice, setMaxPrice] = useState(1000);\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  const [vegtrue, setVegtrue] = useState(true);\n  const [nonvegtrue, setNonvegtrue] = useState(true);\n\n  const handleClickOpen = props => {\n    // console.log(props);\n    //set selected value as props\n    setSelectedValue(props);\n    console.log(selectedValue);\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  }; // Fill up the rows array with data.\n\n\n  useEffect(() => {\n    // Get all documents from the database for item for the particular vendor\n    //Get time string in HH:MM format\n    var today = new Date();\n    var time = today.getHours() + \":\" + today.getMinutes();\n    console.log(time);\n    axios.post(\"http://localhost:4000/buyer/showmenu\").then(res => {\n      setMenu(res.data);\n      const time = new Date(); //hours in 24 hrs format\n\n      let hours = time.getHours(); //minutes\n\n      let minutes = time.getMinutes(); //All items\n\n      setSortedMenu(res.data);\n      setMenuaftersearch(res.data);\n      setMenuafterveg(res.data);\n      setMenuafterprice(res.data);\n    }).catch(err => {\n      console.log(err);\n    }); //If time is between openingtime and closingtime of the shop, then the shop is open\n    // setOpenshops(menu.filter(item => item.openingtime <= time && item.closingtime >= time));\n    //If time is not between openingtime and closingtime of the shop, then the shop is closed\n    // setClosedshops(menu.filter(item => item.openingtime > time || item.closingtime < time));\n  }, [refresh]);\n\n  const handlebuy = key => {\n    //log the id, quantity, addons\n    var quantity = document.getElementById(key).value;\n    console.log(key);\n    console.log(quantity);\n    console.log(ls.get(\"email\"));\n  };\n\n  const handlefavourite = key => {\n    //add to favourites\n    axios.post(\"http://localhost:4000/buyer/addfavourite\", {\n      _id: key,\n      email: ls.get(\"email\")\n    }).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handlecheckboxes = (prop, bool) => {\n    if (prop === \"veg\") {\n      setVegtrue(bool);\n    } else if (prop === \"nonveg\") {\n      setNonvegtrue(bool);\n    }\n\n    setMenuafterveg(menuaftersearch);\n    setMenuafterprice(menuaftersearch);\n\n    if (prop === \"veg\" && bool === true) {\n      if (nonvegtrue === false) {\n        setMenuafterveg(menuaftersearch.filter(item => item.veg === true));\n      }\n    }\n\n    if (prop === \"nonveg\" && bool === true) {\n      if (vegtrue === false) {\n        setMenuafterveg(menuaftersearch.filter(item => item.veg === false));\n      }\n    }\n\n    if (prop === \"veg\" && bool === false) {\n      if (nonvegtrue === true) {\n        setMenuafterveg(menuaftersearch.filter(item => item.veg === false));\n      }\n    }\n\n    if (prop === \"nonveg\" && bool === false) {\n      if (vegtrue === true) {\n        setMenuafterveg(menuaftersearch.filter(item => item.veg === true));\n      }\n    }\n\n    setMenuafterprice(menuafterveg);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          \"& > :not(style)\": {\n            m: 1,\n            width: \"25ch\"\n          }\n        },\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Search\",\n          variant: \"outlined\" //Search for items which includes the word and refresh the menu\n          //lowercase\n          ,\n          onChange: e => {\n            setSearch(e.target.value);\n            setMenuaftersearch(menu.filter(item => item.itemname.toLowerCase().includes(e.target.value.toLowerCase())));\n            setMenuafterveg(menuaftersearch);\n            setMenuafterprice(menuaftersearch);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: vegtrue,\n              label: \"Veg\" //pass checkbox value to handlecheckboxes\n              ,\n              onChange: e => handlecheckboxes(\"veg\", e.target.checked),\n              inputProps: {\n                \"aria-label\": \"primary checkbox\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 11\n            }, this),\n            label: \"Veg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: nonvegtrue,\n              label: \"Non-Veg\",\n              onChange: e => handlecheckboxes(\"nonveg\", e.target.checked),\n              inputProps: {\n                \"aria-label\": \"primary checkbox\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 11\n            }, this),\n            label: \"Non-Veg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          \"& > :not(style)\": {\n            m: 1,\n            width: \"25ch\",\n            height: \"7ch\"\n          }\n        },\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Minimum Price\",\n          variant: \"outlined\",\n          type: \"number\",\n          onChange: e => {\n            setMinPrice(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Maximum Price\",\n          variant: \"outlined\",\n          type: \"number\",\n          onChange: e => {\n            setMaxPrice(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => {\n            setMenuafterprice(menuafterveg.filter(item => {\n              return item.price >= minprice && item.price <= maxprice;\n            }));\n          },\n          children: \"Apply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          \"& > :not(style)\": {\n            m: 1,\n            width: \"25ch\",\n            height: \"7ch\"\n          }\n        },\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => {\n            setSortedMenu(sortedmenu.sort((a, b) => {\n              return a.price - b.price;\n            }));\n          },\n          children: \"Ascending by Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => {\n            setSortedMenu(sortedmenu.sort((a, b) => {\n              return b.price - a.price;\n            }));\n          },\n          children: \"Descending by Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => {\n            setSortedMenu(sortedmenu.sort((a, b) => {\n              return a.rating - b.rating;\n            }));\n          },\n          children: \"Ascending by Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => {\n            setSortedMenu(sortedmenu.sort((a, b) => {\n              return b.rating - a.rating;\n            }));\n          },\n          children: \"Descending by Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"ItemName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"ShopName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Veg/Non-Veg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Tags\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"AddOns\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Rating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: menuafterprice.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                \"&:last-child td, &:last-child th\": {\n                  border: 0\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: row.itemname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: row.image,\n                  alt: \"food\",\n                  style: {\n                    width: \"120px\",\n                    height: \"100px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.shopname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: [\"Rs.\", row.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.veg === true ? \"Veg\" : \"Non-Veg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.tags.map(tag => /*#__PURE__*/_jsxDEV(\"div\", {\n                  spacing: 2,\n                  children: /*#__PURE__*/_jsxDEV(Stack, {\n                    spacing: 2,\n                    children: /*#__PURE__*/_jsxDEV(Chip, {\n                      label: tag\n                    }, tag, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 370,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 25\n                  }, this)\n                }, tag, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.addonname.map((addon, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  spacing: 2,\n                  children: /*#__PURE__*/_jsxDEV(Stack, {\n                    spacing: 2,\n                    children: /*#__PURE__*/_jsxDEV(Chip, {\n                      label: `${addon}: Rs.${row.addonprice[index]}`\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 380,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 25\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Rating, {\n                  name: \"read-only\",\n                  value: row.rating,\n                  readOnly: true,\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"secondary\",\n                  onClick: () => handlefavourite(row._id),\n                  children: \"Add to Favourites\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"secondary\",\n                  onClick: () => handleClickOpen(row._id),\n                  children: \"Buy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 19\n              }, this)]\n            }, row._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SimpleDialog, {\n        selectedValue: selectedValue,\n        open: open,\n        onClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Myitem, \"roiaprDESnmwE+DViAV/NYLZdjI=\");\n\n_c = Myitem;\n\nfunction SimpleDialog(props) {\n  _s2();\n\n  const {\n    onClose,\n    selectedValue,\n    open\n  } = props;\n  const [quantity, setQuantity] = useState(1);\n  const [itemname, setItemname] = useState(\"\");\n  const [shopname, setShopname] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [addonname, setAddonname] = useState([]);\n  const [addonprice, setAddonprice] = useState([]);\n  const [selectedaddonname, setSelectedaddonname] = useState([]);\n  const [selectedaddonprice, setSelectedaddonprice] = useState([]);\n  const [totalprice, setTotalprice] = useState(0);\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const [refresh, setRefresh] = useState(false);\n  useEffect(() => {\n    axios.post(\"http://localhost:4000/buyer/getitem\", {\n      _id: selectedValue\n    }).then(res => {\n      setItemname(res.data.itemname);\n      setShopname(res.data.shopname);\n      setPrice(res.data.price);\n      setAddonname(res.data.addonname);\n      setAddonprice(res.data.addonprice);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    if (selectedValue === \"\" || selectedValue === undefined) {\n      setRefresh(!refresh);\n    }\n  }, [refresh]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"A few more steps...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"ItemName\",\n          variant: \"outlined\",\n          value: itemname,\n          InputProps: {\n            readOnly: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"ShopName\",\n          variant: \"outlined\",\n          value: shopname,\n          InputProps: {\n            readOnly: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Price\",\n          variant: \"outlined\",\n          value: price,\n          InputProps: {\n            readOnly: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"quantity\",\n          label: \"Quantity\",\n          type: \"number\",\n          variant: \"outlined\",\n          defaultValue: 1,\n          onChange: e => {\n            setQuantity(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-outlined-label\",\n            children: \"AddOns\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-simple-select-outlined-label\",\n            id: \"demo-simple-select-outlined\",\n            multiple: true,\n            value: selectedaddonname,\n            onChange: e => {\n              setSelectedaddonname(e.target.value); // Set selectedaddonprice as the same index as selectedaddonname\n\n              setSelectedaddonprice(e.target.value.map(addon => {\n                return addonprice[addonname.indexOf(addon)];\n              }));\n            },\n            label: \"AddOns\",\n            variant: \"outlined\",\n            children: addonname.map(addon => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: addon,\n              children: addon\n            }, addon, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleClose,\n      children: \"Buy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 467,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(SimpleDialog, \"pgc5gl3fUVm9uiUpbX6CmrsJZEs=\");\n\n_c2 = SimpleDialog;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Myitem\");\n$RefreshReg$(_c2, \"SimpleDialog\");","map":{"version":3,"sources":["/home/soveet/Desktop/Study/DASS/Assignment 1/mern-stack-boilerplate-master/frontend/src/components/buyer/BuyerDashboard.js"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useEffect","useState","ls","axios","Button","Box","Stack","InputLabel","MenuItem","FormControl","Select","createTheme","deepOrange","yellow","Chip","OutlinedInput","TextField","PropTypes","DialogTitle","Dialog","Checkbox","FormGroup","FormControlLabel","Rating","SimpleDialog","propTypes","onClose","func","isRequired","open","bool","selectedValue","string","Myitem","menu","setMenu","sortedmenu","setSortedMenu","menuaftersearch","setMenuaftersearch","menuafterveg","setMenuafterveg","menuafterprice","setMenuafterprice","refresh","setRefresh","openshops","setOpenshops","closedshops","setClosedshops","search","setSearch","minprice","setMinPrice","maxprice","setMaxPrice","setOpen","setSelectedValue","vegtrue","setVegtrue","nonvegtrue","setNonvegtrue","handleClickOpen","props","console","log","handleClose","value","today","Date","time","getHours","getMinutes","post","then","res","data","hours","minutes","catch","err","handlebuy","key","quantity","document","getElementById","get","handlefavourite","_id","email","handlecheckboxes","prop","filter","item","veg","m","width","e","target","itemname","toLowerCase","includes","checked","height","price","sort","a","b","rating","minWidth","map","row","border","image","shopname","tags","tag","addonname","addon","index","addonprice","setQuantity","setItemname","setShopname","setPrice","setAddonname","setAddonprice","selectedaddonname","setSelectedaddonname","selectedaddonprice","setSelectedaddonprice","totalprice","setTotalprice","undefined","readOnly","indexOf"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useEffect, useState } from \"react\";\nimport ls from \"local-storage\";\nimport axios from \"axios\";\nimport { Button } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { createTheme } from \"@mui/material/styles\";\nimport { deepOrange } from \"@mui/material/colors\";\nimport { yellow } from \"@mui/material/colors\";\nimport Chip from \"@mui/material/Chip\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport { TextField } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Dialog from \"@mui/material/Dialog\";\nimport Checkbox from '@mui/material/Checkbox';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Rating from \"@mui/material/Rating\";\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\nexport default function Myitem() {\n  const [menu, setMenu] = useState([]);\n  const [sortedmenu, setSortedMenu] = useState([]);\n  const [menuaftersearch, setMenuaftersearch] = useState([]);\n  const [menuafterveg, setMenuafterveg] = useState([]);\n  const [menuafterprice, setMenuafterprice] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n\n  const [openshops, setOpenshops] = useState([]);\n  const [closedshops, setClosedshops] = useState([]);\n\n  const [search, setSearch] = useState(\"\");\n  const [minprice, setMinPrice] = useState(0);\n  const [maxprice, setMaxPrice] = useState(1000);\n\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  const [vegtrue, setVegtrue] = useState(true);\n  const [nonvegtrue, setNonvegtrue] = useState(true);\n\n  const handleClickOpen = (props) => {\n    // console.log(props);\n    //set selected value as props\n    setSelectedValue(props);\n    console.log(selectedValue);\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  // Fill up the rows array with data.\n  useEffect(() => {\n    // Get all documents from the database for item for the particular vendor\n    //Get time string in HH:MM format\n    var today = new Date();\n    var time =\n      today.getHours() + \":\" + today.getMinutes();\n    console.log(time);\n    axios\n      .post(\"http://localhost:4000/buyer/showmenu\")\n      .then((res) => {\n        setMenu(res.data);\n        const time = new Date();\n        //hours in 24 hrs format\n        let hours = time.getHours();\n        //minutes\n        let minutes = time.getMinutes();\n\n        //All items\n\n        setSortedMenu(res.data);\n        setMenuaftersearch(res.data);\n        setMenuafterveg(res.data);\n        setMenuafterprice(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n      //If time is between openingtime and closingtime of the shop, then the shop is open\n      // setOpenshops(menu.filter(item => item.openingtime <= time && item.closingtime >= time));\n      //If time is not between openingtime and closingtime of the shop, then the shop is closed\n      // setClosedshops(menu.filter(item => item.openingtime > time || item.closingtime < time));\n  }, [refresh]);\n\n  const handlebuy = (key) => {\n    //log the id, quantity, addons\n    var quantity = document.getElementById(key).value;\n    console.log(key);\n    console.log(quantity);\n    console.log(ls.get(\"email\"));\n  };\n\n  const handlefavourite = (key) => { \n    //add to favourites\n    axios\n      .post(\"http://localhost:4000/buyer/addfavourite\", {\n        _id: key,\n        email: ls.get(\"email\"),\n      })\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handlecheckboxes = (prop, bool) => {\n    if (prop === \"veg\") {\n      setVegtrue(bool);\n    } else if (prop === \"nonveg\") {\n      setNonvegtrue(bool);\n    }\n    setMenuafterveg(menuaftersearch);\n    setMenuafterprice(menuaftersearch);\n    if(prop === \"veg\" && bool === true){\n     if(nonvegtrue === false){\n       setMenuafterveg(menuaftersearch.filter(item => item.veg === true));\n     }\n    }\n    if(prop === \"nonveg\" && bool === true){\n      if(vegtrue === false){\n        setMenuafterveg(menuaftersearch.filter(item => item.veg === false));\n      }\n    }\n    if(prop === \"veg\" && bool === false){\n      if(nonvegtrue === true){\n        setMenuafterveg(menuaftersearch.filter(item => item.veg === false));\n      }\n    }\n    if(prop === \"nonveg\" && bool === false){\n      if(vegtrue === true){\n        setMenuafterveg(menuaftersearch.filter(item => item.veg === true));\n      }\n    }\n    setMenuafterprice(menuafterveg);\n  };\n\n  return (\n    <div>\n      {/* Favourites */}\n\n      {/* Filters */}\n      <div>\n        <Box\n          component=\"form\"\n          sx={{\n            \"& > :not(style)\": { m: 1, width: \"25ch\" },\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Search\"\n              variant=\"outlined\"\n              //Search for items which includes the word and refresh the menu\n              //lowercase\n              onChange={(e) => {\n                setSearch(e.target.value);\n                setMenuaftersearch(menu.filter(item => item.itemname.toLowerCase().includes(e.target.value.toLowerCase())));\n                setMenuafterveg(menuaftersearch);\n                setMenuafterprice(menuaftersearch);\n\n              }}\n            />\n            \n            <FormGroup>\n              <FormControlLabel \n                control={\n          <Checkbox\n            checked={vegtrue}\n            label=\"Veg\"\n            //pass checkbox value to handlecheckboxes\n            onChange={(e) => handlecheckboxes(\"veg\", e.target.checked)}\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\n          />\n        }\n        label=\"Veg\"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={nonvegtrue}\n            label=\"Non-Veg\"\n            onChange={(e) => handlecheckboxes(\"nonveg\", e.target.checked)}\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\n          />\n        }\n        label=\"Non-Veg\"\n      />\n        </FormGroup>\n        </Box>\n        <br />\n        {/* Price range having minimum and maximum values */}\n        <Box\n          component=\"form\"\n          sx={{\n            \"& > :not(style)\": { m: 1, width: \"25ch\", height: \"7ch\" },\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Minimum Price\"\n            variant=\"outlined\"\n            type=\"number\"\n            onChange={(e) => {\n              setMinPrice(e.target.value);\n            }}\n          />\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Maximum Price\"\n            variant=\"outlined\"\n            type=\"number\"\n            onChange={(e) => {\n              setMaxPrice(e.target.value);\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setMenuafterprice(\n                menuafterveg.filter((item) => {\n                  return item.price >= minprice && item.price <= maxprice;\n                })\n              );\n            }}\n          >\n            Apply\n          </Button>\n        </Box>\n        <br />\n        <Box\n          component=\"form\"\n          sx={{\n            \"& > :not(style)\": { m: 1, width: \"25ch\", height: \"7ch\" },\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n          {/* Ascending by price button */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setSortedMenu(\n                sortedmenu.sort((a, b) => {\n                  return a.price - b.price;\n                })\n              );\n            }}\n          >\n            Ascending by Price\n          </Button>\n          {/* Descending by price button */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setSortedMenu(\n                sortedmenu.sort((a, b) => {\n                  return b.price - a.price;\n                })\n              );\n            }}\n          >\n            Descending by Price\n          </Button>\n          {/* Ascending by rating */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setSortedMenu(\n                sortedmenu.sort((a, b) => {\n                  return a.rating - b.rating;\n                })\n              );\n            }}\n          >\n            Ascending by Rating\n          </Button>\n          {/* Descending by rating */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setSortedMenu(\n                sortedmenu.sort((a, b) => {\n                  return b.rating - a.rating;\n                })\n              );\n            }}\n          >\n            Descending by Rating\n          </Button>\n        </Box>\n      </div>\n\n      {/* Menu */}\n      <Box>\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>ItemName</TableCell>\n                <TableCell align=\"center\">Image</TableCell>\n                <TableCell align=\"center\">ShopName</TableCell>\n                <TableCell align=\"center\">Price</TableCell>\n                <TableCell align=\"center\">Veg/Non-Veg</TableCell>\n                <TableCell align=\"center\">Tags</TableCell>\n                {/* Buying Stages */}\n                <TableCell align=\"center\">AddOns</TableCell>\n                <TableCell align=\"center\">Rating</TableCell>\n                <TableCell align=\"center\"></TableCell>\n                <TableCell align=\"center\"></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {menuafterprice.map((row) => (\n                <TableRow\n                  key={row._id}\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.itemname}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <img\n                      src={row.image}\n                      alt=\"food\"\n                      style={{ width: \"120px\", height: \"100px\" }}\n                    />\n                  </TableCell>\n                  <TableCell align=\"center\">{row.shopname}</TableCell>\n                  <TableCell align=\"center\">Rs.{row.price}</TableCell>\n                  <TableCell align=\"center\">\n                    {row.veg === true ? \"Veg\" : \"Non-Veg\"}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {row.tags.map((tag) => (\n                      <div spacing={2} key={tag}>\n                        <Stack spacing={2}>\n                          <Chip label={tag} key={tag} />\n                        </Stack>\n                      </div>\n                    ))}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {row.addonname.map((addon, index) => (\n                      <div spacing={2} key={index}>\n                        <Stack spacing={2}>\n                          {/* Addonname and addonprice */}\n                          <Chip\n                            label={`${addon}: Rs.${row.addonprice[index]}`}\n                            key={index}\n                          />\n                        </Stack>\n                      </div>\n                    ))}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {/* Rating */}\n                    <Rating\n                      name=\"read-only\"\n                      value={row.rating}\n                      readOnly\n                      size=\"small\"\n                    />\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={() => handlefavourite(row._id)}\n                    >\n                      Add to Favourites\n                    </Button>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={() => handleClickOpen(row._id)}\n                    >\n                      Buy\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <SimpleDialog\n          selectedValue={selectedValue}\n          open={open}\n          onClose={handleClose}\n        />\n      </Box>\n    </div>\n  );\n}\n\nfunction SimpleDialog(props) {\n  const { onClose, selectedValue, open } = props;\n  const [quantity, setQuantity] = useState(1);\n  const [itemname, setItemname] = useState(\"\");\n  const [shopname, setShopname] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [addonname, setAddonname] = useState([]);\n  const [addonprice, setAddonprice] = useState([]);\n  const [selectedaddonname, setSelectedaddonname] = useState([]);\n  const [selectedaddonprice, setSelectedaddonprice] = useState([]);\n  const [totalprice, setTotalprice] = useState(0);\n  const handleClose = () => {\n    onClose();\n  };\n  const [refresh, setRefresh] = useState(false);\n\n  useEffect(() => {\n    axios\n      .post(\"http://localhost:4000/buyer/getitem\", {\n        _id: selectedValue,\n      })\n      .then((res) => {\n        setItemname(res.data.itemname);\n        setShopname(res.data.shopname);\n        setPrice(res.data.price);\n        setAddonname(res.data.addonname);\n        setAddonprice(res.data.addonprice);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n      if(selectedValue === \"\" || selectedValue === undefined){\n        setRefresh(!refresh);\n      }\n  }, [refresh]);\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>A few more steps...</DialogTitle>\n      <br></br>\n      {/* Details of the product */}\n      {/* {selectedValue} */}\n      <Box>\n        <Stack spacing={2}>\n          <TextField\n            id=\"outlined-basic\"\n            label=\"ItemName\"\n            variant=\"outlined\"\n            value={itemname}\n            InputProps={{\n              readOnly: true,\n            }}\n          />\n          <TextField\n            id=\"outlined-basic\"\n            label=\"ShopName\"\n            variant=\"outlined\"\n            value={shopname}\n            InputProps={{\n              readOnly: true,\n            }}\n          />\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Price\"\n          variant=\"outlined\"\n          value={price}\n          InputProps={{\n            readOnly: true,\n          }}\n        />\n        </Stack>\n        <Stack spacing={2}>\n        <TextField\n          id=\"quantity\"\n          label=\"Quantity\"\n          type=\"number\"\n          variant=\"outlined\"\n          defaultValue={1}\n          onChange={(e) => {\n            setQuantity(e.target.value);\n          }}\n        />\n        {/* Multi select AddOns */}\n        <FormControl variant=\"outlined\">\n          <InputLabel id=\"demo-simple-select-outlined-label\">\n            AddOns\n          </InputLabel>\n          <Select\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            multiple\n            value={selectedaddonname}\n            onChange={(e) => {\n              setSelectedaddonname(e.target.value);\n              // Set selectedaddonprice as the same index as selectedaddonname\n              setSelectedaddonprice(\n                e.target.value.map((addon) => {\n                  return addonprice[addonname.indexOf(addon)];\n                })\n              );\n            }}\n            label=\"AddOns\"\n            variant=\"outlined\"\n          >\n            {addonname.map((addon) => (\n              <MenuItem key={addon} value={addon}>\n                {addon}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        </Stack>\n      </Box>\n      <br></br>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleClose}>\n        Buy\n      </Button>\n      {/* Set quantity to order */}\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}